<?php
/**
 * @category   Php4u
 * @package    Php4u_BlastLuceneSearch
 * @author     Marcin Szterling <marcin@php4u.co.uk>
 * @copyright  Php4u Marcin Szterling (c) 2011
 * @license http://php4u.co.uk/licence/
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * Any form of ditribution, sell, transfer, reverse engineering forbidden - see licence above
 *
 * Code was obfusacted due to previous licence violations
 */ 
$_F=__FILE__;$_X="JF9GPV9fRklMRV9fOyRfWD0iSkY5R1BWOWZSa2xNUlY5Zk95UmZXRDBpVEhsdmNVUlJiMmRMYVVKQldUSkdNRnBYWkhaamJtdG5TVU5DVVdGSVFUQmtVVEJMU1VOdloxRklRbWhaTW5Sb1dqSlZaMGxEUVdkVlIyaDNUa2hXWmxGdGVHaGpNMUpOWkZkT2JHSnRWbFJhVjBaNVdUSm5Ua05wUVhGSlJVSm9aRmhTYjJJelNXZEpRMEZuU1VVeGFHTnRUbkJpYVVKVVpXNVNiR050ZUhCaWJXTm5VRWN4YUdOdFRuQmlhMEozWVVoQk1HUlROV3BpZVRVeFlYbzBUa05wUVhGSlJVSnFZak5DTldOdGJHNWhTRkZuU1VaQ2IyTkVVakZKUlRGb1kyMU9jR0pwUWxSbGJsSnNZMjE0Y0dKdFkyZExSMDF3U1VSSmQwMVVSVTVEYVVGeFNVVkNjMkZYVG14aWJrNXNTVWRvTUdSSVFUWk1lVGwzWVVoQk1HUlROV3BpZVRVeFlYazVjMkZYVG14aWJVNXNUSGN3UzBsRGIyZFdSV2hHU1VaT1VGSnNVbGhSVmtwR1NVVnNWRWxHUWxOVU1WcEtVa1ZXUlVsRFNrSlZlVUpLVlhsSmMwbEdaRXBXUldoUVZsWlJaMVl3UmxOVmEwWlBWa1pyWjFRd1dXZFJWVFZhU1VWMFNsUnJVWE5KUlZaWlZVWktSbFV4VFdkVU1VbE9RMmxCY1VsRmJFNVZSWGhLVWxWUmMwbEZiRTlSTUhoV1VrVnNUMUo1UWtOV1ZsRm5WR3M1VlVsRmVFcFVWV3hWVWxWUloxWkZPR2RXUldoR1NVWmtRbFZzU2tKVWJGSktVbFpOWjFRd1dXZFVWVlpUVVRCb1FsUnNVa0pSYTJ4TlUxWlNXa3hCTUV0SlEyOW5VbXRzVlZSclZsUlZlVUpIVkRGSloxRlRRbEZSVmtwVlUxVk9WbFJGUmxOSlJrSldWV3hDVUZVd1ZXZFJWVFZGU1VVMVVGUnJiRTlTYkVwS1ZHdGtSbFJWVms5V1F6Um5VMVUwWjFSck9HZFNWbHBHVkd4UloxVXdhRUpVUlhkblZrVm9Sa1JSYjJkTGFVSkNWbFpTU1ZReFNsUkpSVGxUU1VWT1VGVkdiRk5UVldSSlZrTkNTVlF3ZUVWU1ZrcFVTVVZLUmtsRmVFcFJWVXBOVWxOQ1IxUXhTV2RSVlRWYVNVVk9UVkZWYkU1TVEwSkZVVlV4UWxJd1ZsUkpSVGxUU1VVNVZWTkZWbE5FVVc5blMybENUVk5WUmtOVFZYaEtWa1pyYzBsR1pFbFNWbEpKVWxaSloxTlZOR2RSVlRSblVWVk9WVk5WT1U5SlJUbEhTVVZPVUZSc1VsTlJWVTVWVEVOQ1ZWUXhTbFZKUlRsVFNVVTVWVk5GVmxOV01HeFVVbE4zWjFGV1NrcFZNR3hQVW5sQ1IxVnJPVTVNUVRCTFNVTnZaMVF4VmxWSlJUbEhTVVU1VTBsRmJFOUpSVTVRVkdzMVJsRXhVa3BVTURSblZqQnNWVk5EUWxWVFJWVm5WVEE1UjFaR1pFSlZhMVZuVkRGSloxWkZhRVpKUmxaVVVsTkNVRlZwUWxCV1JXaEdWV2xDUlZKVlJrMVRWVFZJVlhsQ1NsUm5NRXRKUTI5blZrVm9Sa2xHVGxCU2JGSllVVlpLUmt4bk1FdEpRMjluVVZjMU5VbEhXblpqYlRCbllqSlpaMXBIYkRCamJXeHBaRmhTY0dJeU5ITkpTRTVzWWtkM2MwbElVbmxaVnpWNldtMVdlVWxIV25aamJVcHdXa2RTYkdKcGQyZGpiVll5V2xoS2VscFRRbXhpYldSd1ltMVdiR050YkhWYWVVSnRZak5LYVdGWFVtdGFWelJuVEZOQ2VscFhWV2RpUjJ4cVdsYzFhbHBUUW1oWmJUa3lXbEV3UzBsRGIwNURhVUZ4U1VWT2RscEhWV2RrTWtaNlNVYzVhVnB1Vm5wWlYwNHdXbGRSWjFwSVZteEpTRkoyU1VoQ2VWcFlXbkJpTTFaNlNVZDRjRmt5Vm5WWk1sVm5aRzFzZG1KSFJqQmhWemwxWTNjd1MwbERiM1pFVVc5S1ExRnJaMWt5ZUdoak0wMW5WVWRvZDA1SVZtWlJiWGhvWXpOU1RXUlhUbXhpYlZaVVdsZEdlVmt5YUdaVVZ6bHJXbGQ0WmxGdGVHaGpNMUpOWkZkT2JHSnRWbFJhVjBaNVdUSm5aMXBZYURCYVZ6VnJZM2xDVGxsWFpHeFlNRTUyWTIxV1psUlhPV3RhVjNobVVWZEtlbVJJU21oWk0xRm5aWGxDZDJOdE9UQmFWMDR3V2xkUlowcEdPWEJpYlZKc1pVUnpaMk5JU25aa1IxWnFaRWRXYTBsRFVtWmpNMUoyWTIxV1NscEVjMmRqU0VwMlpFZFdhbVJIVm10SlExSm1aRzFHYzJGWFVXZFFVMEl3WTI1V2JFOTVRbnBrUjBZd1lWZE5aMHBHT1hOaU1tUjFXVmN4YkVsRU1HZEtNa3B6V1ZoT01HSklWbXBhVnpWc1l6SldhR050VG05TWJYaDJXbmxqTjBsSVRqQlpXRkp3V1hsQ2QyTnRPVEJhVjA0d1dsZFJaMHBHT1hOaFYwMDNTVWhDTVZsdGVIQlplVUp0WkZjMWFtUkhiSFppYVVKbVdUSTVkV016VW5sa1YwNHdTME5yWjJWNVFuZFpXRXBzWW01Uk5rOXNPV3BpTWpWNlpFaEtNVmt6VVc5TFZITm5Ta2hTYjJGWVRYUlFiRGx3WW0xc01FdERaR2xpUjBaNlpFZDRNVmt5Vm5WYVdFNXNXVmhLYW1GRE9XbGlSMFo2WkVkNE1Wa3lWblZhV0U1c1dWaEthbUZEWTNCUGVVSmhXbGMxYTFneFRteFpXRXBxWVVZNVRXUlhUbXhpYlZabVVWYzFhR0pJYkhwaFdFNW1VVmMxYUdKSWJEWmFXRWsyVDI1T2JHUkZVbXhhYlVZeFlraFJiMkp0VmpOSlJuQnNZbTFTWmxVeVZtaGpiVTV2V0RCNE1Wa3lWblZhVmpsQ1ltMUdjMlZZVG5Cak1UbENZbTFHYzJWWWNHeGpiRGxFWWpJeGRHSXlOV1pXV0ZKdFQwVTFNV0pXT1VSWldFNXNVMWMxZWxwWE5YcGhXRkp3WkcxVmIwdFRhemRKUm5Cc1ltMVNabFV5Vm1oamJVNXZXREI0TVZreVZuVmFWamxVWkVjNWVWbFhaR3hZTUZKd1kyMVdhbVJIT1hsbFZqbEhZVmQ0YkdNemJIcGtSMVowVDJwd2VscFlVa1ZhVjFwb1pGZDRNRkp0YkhOYVZrSnNZMjB4Y0dNelRuQmlNalY2UzBSQk0wNTZZM0JQZVVGclpFZG9jR041TUN0WU0wSjVXbGhDYUdOdFZrSmpTRUZ2UzFSeloyWlRRbmRrVjBwellWZE5aMXB1Vm5WWk0xSndZakkwWjJNeVZqQlZNMUoyWTIxV1NscERaMnRZTWs1cFRucFZlazFxYTNkWmJVMTRUbXBCTVUxcVpHbE9ha2t4V2tSYWFscEVWVEJOYWtKb1RrUm5ORXRUUWpkSlExSXdZVWRzZWt4VU5XWmpNMUoyWTIxV1NscERRVGxKUjJ4MVpFaGFhR0pEWjJ0WU1rNXBUbnBWZWsxcWEzZFpiVTE0VG1wQk1VMXFaR2xPYWtreFdrUmFhbHBFVlRCTmFrSm9Ua1JuTkV0VWMyZEtTRkp2WVZoTmRGQnNPWEJpYlZKc1pVTkJPVWxITlRGaVIzYzNTVWhLYkdSSVZubGlhVUZyWkVkb2NHTjZjMmRtVTBKM1pGZEtjMkZYVFdkYWJsWjFXVE5TY0dJeU5HZGFNbFl3VlROU2RtTnRWa3BhUTJkd1NVaHpaMkZYV1dkTFIxWjBZMGhTTlV0RFVqQmhSMng2VEZRMVptTXpVblpqYlZaS1drTnJjRWxJYzJkS1NGSnZZVmhOZEZCdVRteGtSazR3WWpOS2JGTlhVVzlVVjBadVdsUnZObGxZUW5kTFEydDBVRzFrYkdSR1RqQmlNMHBzUzBOcmRGQnRaR3hrUld4clMwTnJjRTk1UWpsSlNFcHNaRWhXZVdKcFFXdGtSMmh3WTNrd0sxZ3pUakJpTTBwc1UxZFJOMGxJTUdkalNGWnBZa2RzYWtsSFdqRmliVTR3WVZjNWRVbEhaR3hrUld4MVdrZFdORkp0T1hOYVIxWjVTME5TWms5RVdYaFpla0pxVG5wV2EwMHlUVFJOYW1Sb1RWZFNhMXBVYUcxYVZHc3pXa1JHYWsxNlJtcFBSRlU1WkVoS01WcFRhMmRsZVVKd1dtbEJiMHBJVW05aFdFMTBVRzFrYkdSR1RqQmlNMHBzVTFkUmIwdFRRVGhKUkVWd1NVaHpaMHBJVW05aFdFMTBVRzVPYkdSR1RqQmlNMHBzVTFkUmIxUlhSbTVhVkc4MldWaENkMHREYTNSUWJXUnNaRVpPTUdJelNteExRMnQwVUcxa2JHUkdUakJpTTBwc1UxZFJiMHRUYXpkSlNEQm5Ta1k0TWs5SFRUUk9SRlUxVDBkVmVrMXRXVFZOTWtVeFRqSlJlRTlVVVROUFZHTXlUMFJrYlU5VVZtcFBVMEU1U1VVeGFGb3lWVFpQYldSc1pFVkthR015VmtWaFdFbHZTak5hYUdOcFkzQk1hMUpVVEdsa2NHSnRVbXhsUjFaNVNuazFSVlY1Tkd0a1IyaHdZM2t3SzFveVZqQlZNMUoyWTIxV1NscERaM0JNYTFKVVQzbENjRnBwUVc5SlYyeDZXREpTY0dOcFoydFllbGswV1hwbk1FNVVhelJhVkUxNVdtcHJlbGxVVlROYVJFVTFUa1JqTlU1NldUUk9NbGsxVGxkTk5VdFRhMmRsZVVKMFlUSlNjR05wWjJ0WWVsazBXWHBuTUU1VWF6UmFWRTE1V21wcmVsbFVWVE5hUkVVMVRrUmpOVTU2V1RST01sazFUbGROTlV4RFFYZE9lbU16VEVOQ01HTnVWbXhMVkhOblVVZE9iMkl6WkhWTFExSm1UbXBvYWs5RVVURlBWR2hzVFhwS2JVOVVUbWhPVkdSclRWUnJNRTU2YXpOT2FtY3pXbXByTVZsNmEzTkpRMlJvWTBkR2FtRkhWVzVMVkhOblVVZE9iMW96U25kTFExSm1UbXBvYWs5RVVURlBWR2hzVFhwS2JVOVVUbWhPVkdSclRWUnJNRTU2YXpOT2FtY3pXbXByTVZsNmEzTkpRMlJvWTBkR2FtRkhWVzVMVkhOblpsTkNlVnBZVWpGamJUUm5Ta1k0TWs5SFRUUk9SRlUxVDBkVmVrMXRXVFZOTWtVeFRqSlJlRTlVVVROUFZHTXlUMFJrYlU5VVZtcFBWSE5uWmxOQ2QyUlhTbk5oVjAxbldtNVdkVmt6VW5CaU1qUm5XakpXTUZOWE5XdGFXR2R2U2tZNE5FNXFSbXBOUjAwelRsZFJlbGw2WjNsT01rVjRXa2RTYkU5SFdteFBWR1JyVFZkTmVrMVhUVFJPVkRFd1kyNVdiRXRUUWpkSlIyeHRTVU5uYUVwSVVtOWhXRTEwVUd3NWNHSnRVbXhsUTJ0blpYbENNR051YTJkbGVVRnJaRWRvY0dONU1DdFlNbXgxV2tkV05FbEVNR2RYYlZaMVdrWTVWRnBYUm5sWk1taG1WRWhXYWxwWE5XeFBhbkIyWTBkV2RVdERVakJoUjJ4NlRGUTFibHBZVWtwaWJWSnNaVVZhZG1KSFVteGphV2RyV0hwbk1rMVhUWGRaZW1NeFdrUk9hazlFU1ROWlZFWnJXa2RWTkZwdFZUVk9NbEY0V1hwTmVGbDZaekZMVTJzM1NVZ3daMWt5UmpCWk1tZG5TMFp3YkdKdFVtWlZNbFpvWTIxT2IxZ3dlREZaTWxaMVdsWTVSbVZIVG14alNGSndZakkwWjBwR09EUk5WR2N3VDFSU2FrOUVVbWxPYlZreldtcG9hVmw2Um1wWmFsVjNUa1JLYTA1RWF6QlpWR3Q0VFdscloyVjVRV3RrUjJod1kza3dLMWd5YkhWYVIxWTBTVVF3WjFkdFZuVmFSamxVV2xkR2VWa3lhR1pVU0ZacVdsYzFiRTlxY0dwamJWWm9aRWRWYjBwSVVtOWhXRTEwVUcxa2JHUkZiSFZhUjFZMFVtMDVjMXBIVm5sTFExSm1UMFJaZUZsNlFtcE9lbFpyVFRKTk5FMXFaR2hOVjFKcldsUm9iVnBVYXpOYVJFWnFUWHBHYWs5RVZYQkxWSE5uWmxOQ2NGcHBRVzlKVTFJd1lVZHNla3hVTldaaFZ6VnJXbGhuY0VsSWMyZGtSMmg1WWpOaloySnRWak5KUlZZMFdUSldkMlJIYkhaaWFXZHBWVWhLZGxsdGVHeGlVMEpxWTIxV2FHUkhiSFZhZVVKTlpGZE9iR0p0VldkaFZ6VnJXbGhuWjJGWE5HZEphVFJyWkVkb2NHTjVNQ3RhTWxZd1UxYzFhMXBZYUVkaU1uaHJXbGhKYjB0VGF6ZEpTREJuWmxOQ2VWcFlVakZqYlRSblNraFNiMkZZVFhSUWJEbHdZbTFTYkdWRWMyZG1VMEozWkZkS2MyRlhUV2RhYmxaMVdUTlNjR0l5TkdkamJWWjBZak5hYkZWSVNuWmFTRlpxWkVWYWVXSXlNVXBpYlZKc1pVTm5hMWd5U1RCTmFtTTBUbnBXYWsxcVdtcGFha0pxVDFkS2FFMTZUbTFPZW1jeFdYcE9hMDVYVG14TlJFNXNURU5CYTFneVJYcE9hbWQzV1RKR2FscHFXbXBOZWxVeFRVZGFiRnBYVFRCT1ZGWm9UbFJuTUU0eVZUQk5SMVUwU1VRd1oxcHRSbk5qTWxWd1NVaHpaMHBHT0RGUFYxVjRXVlJLYlZwSFNtbE9ha2t5VFZST2JGcFVSbWxQUkZGM1dsUlplVTF0U1hsYVJGWm9XbE5CT1VsSE5XeGtlVUpoV2xjMWExZ3hUbXhaV0VwcVlVWTVUV1JYVG14aWJWWm1VMWMxYTFwWWFHWldSMVo1WWxObmExZ3lTVEJOYW1NMFRucFdhazFxV21wYWFrSnFUMWRLYUUxNlRtMU9lbWN4V1hwT2EwNVhUbXhOUkU1c1RFTkJibHBYTlRCaFdGSTFXREpzYTBwNWF6ZEpRMUptV1dwb2FVOUVTVEJPTWsweFdXcEthVTVxYkcxUFJFRXhUVmRhYUU1NlZtcFpWMDV0VGxkVmVrNTZXV2RRVTBGclpFZG9jR041TUN0YU1sWXdVMWMxYTFwWVoyOUxVekFyWkVkV2VXSlZVblpaTTAxdlNrWTRNVTlYVlhoWlZFcHRXa2RLYVU1cVNUSk5WRTVzV2xSR2FVOUVVWGRhVkZsNVRXMUplVnBFVm1oYVUyczNTVWRhZG1OdFZtaFpNbWRuUzBOU1psbHFhR2xQUkVrd1RqSk5NVmxxU21sT2FteHRUMFJCTVUxWFdtaE9lbFpxV1ZkT2JVNVhWWHBPZWxsbldWaE5aMHBHT0hwT1JHY3lUVVJuTWxwVVNtcFpNbEYzVDBSRk1WbFVUbXhhYWtVMVdsUmFhVTE2UlhkWk1sSnFUV2xyWjJWNVFXdGtSMmh3WTNrd0sxb3lWakJUVnpWcldsaG5iMHRUTUN0YVIxWnpXbGhTYkV0RFVtWk5lbEUwVG1wQk5FNXRWWGxaTWs1clRVUm5lRTVYUlhwYVYxbDRUMWRWTWxscVRYaE5SMDVyV1hwSmNFOTVRamxKUTFJd1lVZHNla3hVTlc1YVdGSktZbTFTYkdWRFozQk1WRFZxWWpJeGRHRllVVzlMVkhObllWZFpaMHREUld0WU1rVjZUbXBuZDFreVJtcGFhbHBxVFhwVk1VMUhXbXhhVjAwd1RsUldhRTVVWnpCT01sVXdUVWRWTkV0VFFqZEpRMUl3WVVkc2VreFVOWFJaV0VweVVWaE9TbUp0VW14bFJUVjJaRVpLYkdOWVZuQmpiVlpyUzBOU1psbHFVWGxPZW1jelRsZE5lVTV0VG0xTlIwMDFXVzFGZWsweVdUTlBSRlpxVFRKUk1Wa3lWWGROTWxWd1QzbENPVWxIVm5Oak1sVm5aWGxCYTJSSGFIQmplVEFyWWxkR2VXRXdSbnBUVnpWcldsaG9VMXBZUmpGaFdFcHNXa05uYTFneVNUQk5hbU0wVG5wV2FrMXFXbXBhYWtKcVQxZEthRTE2VG0xT2VtY3hXWHBPYTA1WFRteE5SRTVzUzFSeloyWlRRamxKU0VJeFdXMTRjRmw1UW0xa1Z6VnFaRWRzZG1KcFFuTmlNbVJVWVZod2JFdERhMmRsZVVGclpFZG9jR041TUN0WU1teDFXa2RXTkVsRU1HZGlibFp6WWtSeloyTXlWbk5hYW04MllrYzVia3REU21KVk1WSkNWa1pPWkVsR1RqQmlNMHBzU1VaemFVeHBVakJoUjJ4NlRGUTFibHBZVWxSa1J6bDVXbFZzYTB0RGEzVkpiREJuVWtjNWFtUlhNV3hpYmxKNlNVZHNkVWxIYkhWYVIxWTBUMmxCYVV4cFVqQmhSMng2VEZRMWJscFlVbFJoV0hCc1MwTnJjRTk1UWpsSlNFSXhXVzE0Y0ZsNVFtMWtWelZxWkVkc2RtSnBRbmxhVnpGMlpHMVdRbUpIZDI5TFUwSTNTVU5TWms5WFJYcE9SRTVyVFVkWmVVNUhUVEZPYlZFeVdXcFpORnBxVFhwT2JWSnJXVlJTYlU1cVRUVk9SMVZuVUZOQmEyUkhhSEJqZVRBcldqSldNRk5YTld0YVdHZHZTMU13SzFwdGJIVmFRMmR1UzJsamNFOTVRbTFpTTBwc1dWZE9iMGxEWjJ0WWVteG9UWHBSZWxwRVFtMU5hbEpxVGxSYWEwNXRTVEpQUjFsNlRYcGFhMXBIUlRCYWFsbDZUMVJTYkVsSFJucEpRMUptVG1wWk5FMTZXVFJaZW1jeFdrZE5NRTFVUm1oYVJFRTFXVEpaZWsxVVdtcE9NbGt6VG0xSmQxcEhTWEJKU0hOblNraFNiMkZZVFhSUWJXUnNaRVZzZFZwSFZqUkxRMnQwVUcxU2JHSkhWakJhVTJkcldIcFpNazlFVFRKUFIwMDBUbGRTYWs1RVJYaFpWMUYzVDFkT2JVMTZSVEpaZW1SdFRucGFhVTFIVW1sTVZEVndXa05yTjBsSU1HZEtTRkp2WVZoTmRGQnRaR3hrUld4MVdrZFdORXREYTNSUWJVNTJZbGN4Y0dSRFozQlBlVUZyWkVkb2NHTjVNQ3RpTTBJd1lWY3hjR1Z0VmtwaWJWSnNaVU5uY0U5NVFucGFWM2h0VDJwd2MySXlZMjlKYkhSVFVsVXhVRlpyVmtKVVJYaGtTVVZTZG1KdFZXbExWSE5uWmxOQ2QyTnRPVEJhVjA0d1dsZFJaMXB1Vm5WWk0xSndZakkwWjFneVpHeGtSVnB3V2xkNGExRnRPWFpqTTFGdlNrWTVhVTFFWnpWUFIxazFXbFJhYWs5SFNUQk9hazVvV1RKYWFVNXRTVEZOUjFWNFdrUlpOVmx0VVRWYWFXdG5aWGxDY0ZwcFFXOUpWMngxV0RKR2VXTnRSalZMUTFKbVdXcEJORTlVYUcxUFYxVXlXWHBvYVU1RVdYcFpWMDV0V1dwYWFVNVVRbXhOVjFFeVQxZEthMDlYV1hOSlIwWjVZMjFHTlV0RFpIZGpiVGxyWkZkT01GZ3lOV2hpVjFWdVRFTkJibU5JU25aYVNGWnFaRVk1ZW1FelZXNU1RMEZ1WTBoS2RscElWbXBrUmpscldsaE9hbU50Ykhka1IyeDJZbWxqYzBsRFpIZGpiVGxyWkZkT01GZ3pUbTlpTTBvd1dESlNiR015VG5saFdFSXdZVmM1ZFVwNWEzQkxVMEkzU1VoS2JHUklWbmxpYVVGNFQzbENPVWxEVW1aUFJGWnNUVlJhYkU0eVRUVk9lbXQ2VDBkTmVGbFVhekJhYW14dFdWUnJNazVxUVRCWmFsSnNXbGRWWjFCVFFrNVpWMlJzVDJwd2JscFlVbFJrUnpsNVdsVk9kbUp0V25CYWVXZHVZMGRvZDA1SVZYWmhWelZyV2xob1psbHRPWFpqTTFGMlNuazBhMWd5U1hkUFJHczBXbXBzYkU1dFRUUlphbEV5VFRKR2FscHRTVEpaYWxWM1dsUkdhMDVxYkdsYVJHeHRURU5CYTJSSGFIQmplVEFyV2pKV01GVXpVblpqYlZaS1drTm5jRXRVYzJkS1JqZzBUbGRWZUU1dFZUTlplbXN6VDFSTk5GbDZSbWhQVkZKdFQxZGFhRTlVV1RKTlJGSnBUa2RXYkZwVFFUbEpSVUp0WWtjNWFHUklXbWhpUTJoNlpFaEtabU50Vm5kaVIwWnFXbE5uYmxoNVkzTktlVFJ1VEVOQmExaDZaekZhVkVVeVdsUmthazlVWXpWTmVtaHFUVmRGTlU1SFdUVmFiVVUxVG1wWmQwNUhTVEJhVjFac1MxTnJOMGxIYkcxSlEyZHJXSHBuTVZwVVJUSmFWR1JxVDFSak5VMTZhR3BOVjBVMVRrZFpOVnB0UlRWT2FsbDNUa2RKTUZwWFZteFFSRVZuWWpOSlowcEdPRFJPVjFWNFRtMVZNMWw2YXpOUFZFMDBXWHBHYUU5VVVtMVBWMXBvVDFSWk1rMUVVbWxPUjFac1dsUTBlRTFEYTJkbGVVRnJXSHBuTVZwVVJUSmFWR1JxVDFSak5VMTZhR3BOVjBVMVRrZFpOVnB0UlRWT2FsbDNUa2RKTUZwWFZteEpSREJuVFZSeloyWlRRbmxhV0ZJeFkyMDBaMHBHT0RST1YxVjRUbTFWTTFsNmF6TlBWRTAwV1hwR2FFOVVVbTFQVjFwb1QxUlpNazFFVW1sT1IxWnNXbFJ6WjJaVFFuZGpiVGt3V2xkT01GcFhVV2RhYmxaMVdUTlNjR0l5TkdkWU1rNTVXbGRHTUZwV1dtaGpiV3hvWkVkc2RtSnVUVzlLUmpsdFQwZGFhazlVWnpCUFZGWnFXa1JhYTFsVWF6Sk9SMHByVFVSQmVGcEhUVEZhUkdNeFRsZEdhRmxUYTJkbGVVSndXbWxCYjBsVk1XaGFNbFUyVDIxa2JHUkdUakJpTTBwc1VUSTVkVnB0Ykc1U2JYaG9XbmxuYm1OSGFIZE9TRlYyWTBkb2QwNUlWbVphTTBwMlpGaEJkbVJZVG14WU0wNHdXbGN4ZEZwWVNXNU1RMEZyWkVkb2NHTjVNQ3RhTWxZd1ZUTlNkbU50VmtwYVEyZHdTMU5yWjJWNVFubGFXRkl4WTIwMFowcEdPVzFQUjFwcVQxUm5NRTlVVm1wYVJGcHJXVlJyTWs1SFNtdE5SRUY0V2tkTk1WcEVZekZPVjBab1dWUnpaMlpUUVd0WWVtUm9UVmRGZVU1cVJURlpla1V6VG1wck1rNUVaelZOVjBrd1RWZEZNbGxYV1hwT2JWSnNXVmRKZUVsRU1HZGFXR2gzWWtjNWExcFRaMjVKUTJOelNrWTViVTlIV21wUFZHY3dUMVJXYWxwRVdtdFpWR3N5VGtkS2EwMUVRWGhhUjAweFdrUmpNVTVYUm1oWlUyczNTVU5TWmxsNldtdGFhbVJyV2xSamVrNHlVWGxOZWtVMFdXcEdhVTFYVW10YVJFcHJUMVJWZUU1NlZUUlpNa2xuVUZOQ2FHTnVTbWhsVTJkd1QzbEJhMWg2V1RGWlYxcHFUVlJOTWxwcVJYaGFSRUpxV1ZSV2JWbDZUWGxhYlUwMFRrUkdhVnBFUm10Wk1rbDZTVVF3WjFsWVNubFpXR3R2UzFSeloxcHRPWGxhVjBacVlVTkJiMHBHT0ROWlZFWm9UV3BaZUU1WFRYaE9lbGsxVG1wUk5FOVVSbWxPUkVab1RtMUdiVTE2V210YVYwWnBUVk5DYUdONVFXdFllazEzV1RKT2JGbHFZek5hYlZsNlRVZFZNRTVFV210T2FsbDZUVmRHYWs1VVJtMU5la0V3VFZSSk5VdFRRamRKUTFKbVdYcGFhMXBxWkd0YVZHTjZUakpSZVUxNlJUUlpha1pwVFZkU2ExcEVTbXRQVkZWNFRucFZORmt5U21KWVUwRTVTVVpDYjJORVVqRllNRXB6V1ZoT01GUklWbXBhVnpWc1ZUSldhR050VG05WU1ERjJXa2RXYzFnd2JIVmFiWGhzV1ROUk5rOXVRbk5rV0Vwb1lrZHNObHBUWjJ0WWVrMTNXVEpPYkZscVl6TmFiVmw2VFVkVk1FNUVXbXRPYWxsNlRWZEdhazVVUm0xTmVrRXdUVlJKTlV0VWMyZEtSamd5VGxkR2JWbDZSWHBPYlZsNFRWZFJkMWt5UlRGYWJVMTZUVzFhYWs5RVVYaFpiVkY0V2tkT2FVMHhkR1JKUkRCblZVZG9kMDVJVm1aUmJYaG9Zek5TVFdSWFRteGliVlpVV2xkR2VWa3lhR1pVVnpscldsZDRabE5YTlcxaVIxWnFaRVJ2Tm1NeWJIVmFNMVp6V1ZoS2NHVnRWVzlLUmpoNlRVZE9hbHBYU1ROT01scHRUWHBDYkU1RVVUSmFSRmt5VFhwR2FGbDZWWGhhYWsxM1RrUkZlVTlUYXpkSlNEQm5Ta1k1YVUxcVVtbE5SRTB6V21wWk5VMXFUWHBhUkdSc1RsZFNiRTVIU20xYVJHaHFXbXBDYVUxcVl6RmFhVUU1U1VkR2VXTnRSalZZTWpGc1kyMWtiRXREVW1aWmVscHJXbXBrYTFwVVkzcE9NbEY1VFhwRk5GbHFSbWxOVjFKcldrUkthMDlVVlhoT2VsVTBXVEpKYzBsRFVtWk9hbFpvV20xTmVFMTZXbTFOVkVaclRVZE9hRTVYV21wTmVrcHRXWHBuTUUxWFNtdE5WMUpxV1dwTmNFOTVRV3RZTWtsNVRrZEpkMDE2WkcxT2FtdDVUWHBPYTA0eVZURmFSMVV3V1cxYWEwOUhUbTFOUjBsNVRucFdiVWxFTUdkWldFcDVXVmhzWm1SWE5YQmpXRlpzUzBOU1psbHFTVEJaYWtGNlRqSlpNazlVU1hwTk1sRXpXbFJXYTFwVVVtbGFiVkUwV1RKWmQxbHFTVE5PVjFsd1QzbEJhMWd5VlRST2Fra3lUMWRXYlUweVdtbGFhbWhwV1ZkYWFGbFVUbTFhUjFKb1dsZEpOVnBIVlRSYVIxbDVTVVF3WjJGWE1YZGlSemxyV2xObmJrbERZM05KUTFKbVdXcEpNRmxxUVhwT01sa3lUMVJKZWsweVVUTmFWRlpyV2xSU2FWcHRVVFJaTWxsM1dXcEpNMDVYV1hCUGVVSjVXbGhTTVdOdE5HZEtSamxzVDBSWmVVNXFiR3hhYWs1dFdXMVpORmx0Um0xWlYwVjZXbTFTYTFsWFZtbFBWMUpzVDBkU2JVMXFjMmRtVTBKM1pGZEtjMkZYVFdkYWJsWjFXVE5TY0dJeU5HZFpWMUpyVlVoS2RscElWbXBrUmxKMlUxYzFhMXBZWjI5S1JqbHBUa1JKTTA5RVl6Rlpla2t5V1RKWmQxbDZiR2xaVkUxNldtcGpORTVYVFhwYVJGWnFXbFJCZWxwVGQyZEtSamxwV2tSR2JGcEhWVEpOVkdOM1RtcGFiVTlVVFRKT1IwVXpUVzFWTUU5SFZURk9NazB5V1ZkS2JVNURkMmRLUmpsc1RUSlZOVnBYVm1sT2JVVTFUMGROTVZsWFdUUmFhbGswVFhwQ2FFMXFTbTFhVjAweVRYcGpORTFEUVRsSlIxcG9Za2hPYkV4RFFXdFlNa1V4V1hwa2FFNVVXVFJOUkZKcFRWUnJNVmxVUVRKT1ZFMHhUa1JTYkU1RVNYaGFha0V4VFZkUmVVbEVNR2RrU0VveFdsTnJaMlY1UW5CYWFVRnZTVk5TTUdGSGJIcE1WRFZ3WXpCNGNGa3hXbWhpUjJ4clMwTnJjRWxJYzJkamJWWXdaRmhLZFVsSFdtaGlTRTVzVDNsQ09VbEhiRzFKUTJkb1NraFNiMkZZVFhSUWJEbHdZbTFTYkdWRGEyZGxlVUZyWkVkb2NHTjVNQ3RhTWxZd1UxYzFhMXBZWjI5YWJVWnpZekpWY0U5NVFqbEpSMnh0U1VObmExZ3lWWHBhVkd4c1dsZEpNbGxVYXpSWmVsWm9XbXBvYlU1cVozcE5SMFY1VFcxYWJGbDZXWHBPZW1kM1MxTkNOMGxEVWpCaFIyeDZURlExZVZwWE1YWmtiVlpSWTIwNWEyUlhUakJTYmtwMllsVnNkVnBIVmpSTFExSm1XV3BSZVU1Nlp6Tk9WMDE1VG0xT2JVMUhUVFZaYlVWNlRUSlpNMDlFVm1wTk1sRXhXVEpWZDAweVZYQlBlVUk1U1Vkc2JVbERaMmhoV0U1bVdWaEtlVmxZYTI5S1JqbHBXa1JHYkZwSFZUSk5WR04zVG1wYWJVOVVUVEpPUjBVelRXMVZNRTlIVlRGT01rMHlXVmRLYlU1RGEzQkpTSE5uU2tZNE1VMVVXbTFPUjFVeVQxZE9hVTB5V210Tk1rNXNUV3BuTlZwdFVtbFpha0Y1VG0xV2FVMXFiR2hhUTBFNVNVZEdlV050UmpWTFEyczNTVU5TWms1VVJUSmFhbEpzVG1wc2FsbHFUbTFhUkU1cVdsUkpORTlYV210WmJVbDNUV3BhYkZscVNUVlpWMUppU2pKU2FHUkhSVzVZVTBFNVNVTlNabGx0VVhoYVYxSnNUbXBGTTAxRVdUSmFhbXQ2VG1wU2FFNTZTbXhPUkdoc1RsUmthazV0Um1sYWFsRTNTVU5TWms1VVJUSmFhbEpzVG1wc2FsbHFUbTFhUkU1cVdsUkpORTlYV210WmJVbDNUV3BhYkZscVNUVlpWMUppU2pOQ2VXSXlVakZaTTFKbVltMUdkRnBUWkdSSlJEQm5TbmxqTjBsRFVtWk9WRVV5V21wU2JFNXFiR3BaYWs1dFdrUk9hbHBVU1RSUFYxcHJXVzFKZDAxcVdteFpha2sxV1ZkU1lrb3pRbmxpTWxJeFdUTlNabHBIVm5wWk0wcHdZMGhTY0dJeU5HNVlVMEU1U1VOamJrOTVRV3RZZWxWNFRtMVpNRnBVV1RWWk1rbDZXbTFSZWxreVZYbFBSR3h0V2tkS2FVMUVTVEphVjBsNVQxZEdhMWQ1WkhkamJUbHJaRmRPTUZnelRtOWlNMG93V0RKU2JHTXlUbmxoV0VJd1lWYzVkVW94TUdkUVUwRnVTbnB6WjBwR09XbGFSRVpzV2tkVk1rMVVZM2RPYWxwdFQxUk5NazVIUlROTmJWVXdUMGRWTVU0eVRUSlpWMHB0VGtOQk9VbERVbVpPVkVVeVdtcFNiRTVxYkdwWmFrNXRXa1JPYWxwVVNUUlBWMXByV1cxSmQwMXFXbXhaYWtrMVdWZFJOMGxJTUdkaFYxbG5TMGRXZEdOSVVqVkxRMUptV1cxUmVGcFhVbXhPYWtVelRVUlpNbHBxYTNwT2FsSm9UbnBLYkU1RWFHeE9WR1JxVG0xR2FWcHFVbUpLTWxKb1pFZEZibGhUYTNCSlNITm5ZekpXYzFwcWJ6WmlSemx1UzBOS1lsTlZOVVZTVm1oR1ZXd3daMU5YTld0YVdHaHdZbTFqWjFwSFJqQlpVMEp3WTNsQ2JHSllRakJsVTBselNVWndiR0p0VW1aVVJ6bHVUMnB3UmxWc1NYQlBlVUo1V2xoU01XTnROR2RhYlVaell6SlZOMGxJTUdkS1JqaDZXa1JKTVZsNlpHcE9SRkY2VGxSbk1rNUVXWGRaZWxVMFQwZEZlazVxVFhwWlZFcHFXbFJhYlZscFFUbEpSelZzWkhsQ1lWcFhOV3RZTVU1c1dWaEthbUZHT1Uxa1YwNXNZbTFXWmxKSE9XcGtWekZzWW01UmIwdFVjMmRLUmpoNldrUkpNVmw2WkdwT1JGRjZUbFJuTWs1RVdYZFplbFUwVDBkRmVrNXFUWHBaVkVwcVdsUmFiVmxwTUN0WlYxSnJVbTFzYkdKSFVXOVhiVloxV2tZNVZGcFhSbmxaTW1obVZFaFdhbHBYTld4WU1GcHdXbGQ0YTA5cWNISmFXR3d6WWpOS2EwdERaR3hpYmxKd1pFaHNabUZYVVc1TVEwRnJXREpKTUUxcVl6Uk9lbFpxVFdwYWFscHFRbXBQVjBwb1RYcE9iVTU2WnpGWmVrNXJUbGRPYkUxRVRteExVMnMzU1VOU1prMHlVWGxPVjAweldYcFJNRTE2VlRST2FsRXlUVWROTVU5RWFHaE5lbGw2VFRKRmVWa3lWVEphYlVsMFVHMUdhMXBGV25CYVYzaHJTMFp3YkdKdFVtWlZNbFpvWTIxT2IxZ3dlREZaTWxaMVdsWTVSMkZYVm5OYVJHODJaRWRXTkdSRFoyNWhWelZyV2xob1pscEhSakJaVTJOelNVTlNNR0ZIYkhwTVZEVm1XVE5LYkZsWVVteFdiVVo1WVZkR01HRlhPWFZqZVdkclpFZG9jR041TUN0Wk1uaHNXVmMxVkdSSVNuQmliV052U2tZNWFWcEVSbXhhUjFVeVRWUmpkMDVxV20xUFZFMHlUa2RGTTAxdFZUQlBSMVV4VGpKTk1sbFhTbTFPUm5OdVdrZEdNRmxUWkdSTFUydHpTVU5rTVdSSFdYUlBRMk53UzFSelowcEdPSHBhUkVreFdYcGthazVFVVhwT1ZHY3lUa1JaZDFsNlZUUlBSMFY2VG1wTmVsbFVTbXBhVkZwdFdXa3dLMWxYVW10U2JXeHNZa2RSYjFkdFZuVmFSamxVV2xkR2VWa3lhR1pVU0ZacVdsYzFiRmd3V25CYVYzaHJUMnB3Y2xwWWJETmlNMHByUzBOa2NHSnRVbXhsUmpscldWaFNhRmd5ZEd4bFdHUjJZMjFSYmt4RFFXdGtSMmh3WTNrd0sxZ3lUbmxhVjBZd1dsWmFhR050Ykdoa1IyeDJZbTVOYjBwSVVtOWhXRTEwVUcxT2MxcFhSblZWTTFKNVlWYzFia3REVW1aWmJWRjRXbGRTYkU1cVJUTk5SRmt5V21wcmVrNXFVbWhPZWtwc1RrUm9iRTVVWkdwT2JVWnBXbXBTWWtveVVtaGtSMFZ1V0ZOcmNFeERRVzVrV0ZKdFRGUm5ia3RUYXpkSlNGWjFZekpXTUV0RFVtWlpiVkY0V2xkU2JFNXFSVE5OUkZreVdtcHJlazVxVW1oT2VrcHNUa1JvYkU1VVpHcE9iVVpwV21wU1lrb3lVbWhrUjBWdVdGTnJOMGxIV25aamJWWm9XVEpuWjB0RFVtWlpiVkY0V2xkU2JFNXFSVE5OUkZreVdtcHJlazVxVW1oT2VrcHNUa1JvYkU1VVpHcE9iVVpwV21wUloxbFlUV2RLUmpoNFRXMVdiRmxxV210WmFtUnNXbFJhYUU5RVZtcE9lbXN5VDBkS2FVMUVRbTFPTWxKc1RtcFpNRTE1UVRsUWFVRnJXREpGTWs1RWF6Sk5WRTE2VG5wa2FsbHFVVFZhVkdOM1RWZFdiRTU2Wkd4Wk1rVTFUVVJGTWxwSFdtdExVMEkzU1VOU1pscFVSWGhPVjFFelRrZEtiRnBVV21sTlJHYzBUbXBLYTFscWJHMU5WRlpvV1dwR2FrOUVRVFJQUjBsblVGTkNZVnBYTld0WU1VNXNXVmhLYW1GR09VMWtWMDVzWW0xV1psSnRiR3hpUjFFMlQyNVNiR1ZJVVc5S1JqaDRUVzFXYkZscVdtdFphbVJzV2xSYWFFOUVWbXBPZW1zeVQwZEthVTFFUW0xT01sSnNUbXBaTUUxNWQyZEtTRkp2WVZoTmRGQnNPV3BqYlZab1pFZFdWMWxZU25CWldGSndZakkxZWt0RFVqQmhSMng2VEZRMWFtSkhWbWhpYkU0d1kyMXNkVnA1WjJ0WU1rVXlUa1JyTWsxVVRYcE9lbVJxV1dwUk5WcFVZM2ROVjFac1RucGtiRmt5UlRWTlJFVXlXa2RhYTB0VGEzQlBlVUZyV0RKVmVFMVVWbXRPZWxKcFdsZFZNbGxxUVRSUFJGbDVXa2RKTlZwcVJURlpWMGw0V1hwbmQwOUVhR2xNVkRWcFlqSTVlbVJEUVRsSlExSXdZVWRzZWt4VU5XWmFNbFl3VW0xc2JHSkhVa05pTWpsNlpFTm5hMWg2UlhsYVYxWnBUbTFTYVU0eVZteE9iVVUwVGxkTk0wOVVXVFJaYlVsM1RVZFpNMXBIVlRKT2FsRjZTMVJ6WjBwR09IcGFSRWt4V1hwa2FrNUVVWHBPVkdjeVRrUlpkMWw2VlRSUFIwVjZUbXBOZWxsVVNtcGFWRnB0V1drd0sxbFhVbXRTYld4c1lrZFJiMHBHT1d4TlZFVXhXa1JqTUZsdFZteE9iVWwzVDBSbk1rMXRVbWxQVjFsNFRsZEdhVTFYVFRSTlJHYzBXV2wzWjBvelZqQmFhVEEwU25sck4wbElNR2RLU0ZKdllWaE5kRkJ0Wkd4a1JXeDFXa2RXTkV0RGEzUlFiVVpyV2tWU2Rsa3pWblJhVnpVd1MwTlNaazB5VVhsT1YwMHpXWHBSTUUxNlZUUk9hbEV5VFVkTk1VOUVhR2hOZWxsNlRUSkZlVmt5VlRKYWJVbHdUM2xDY0ZwcFFXOVdSa3BXVWxOQk9WQlVNR2RLUmpsb1RsZE5NMWxVVlRKUFJFRXdXV3BGTlU1WFJYZE9hbFY2VGxSUk1GcFVVWGxOVjFsM1RsUkdhMDFwYTJkS1NGSnZZVmhOZEZCdFpHeGtSV3gxV2tkV05FdERhM1JRYlU1MllsY3hjR1JEWjNCUGVVSndXbWxCYjBsVFVtWmFWRTVzVDFkV2JGbHFXbWhQVkdocVRsZEdiVTlIV1RKUFJFMTNXVlJKZVZwdFZtcE9hazB6VDBSQmNFbEljMmRLU0ZKdllWaE5kRkJ0TVdoamJYUkNZekJzZFZwSFZqUlViVGt3VlcxV2VHUlhiSGxhVjFGdlNrWTVhVTVFU1ROUFJHTXhXWHBKTWxreVdYZFplbXhwV1ZSTmVscHFZelJPVjAxNldrUldhbHBVUVhwYVUyczNTVWd3WjJOdFZqQmtXRXAxU1VoU2VXUlhWVGRKU0RCblkwaEtjR1J0UmpCYVUwSnRaRmMxYW1SSGJIWmlhVUptV2pKV01GRllVakJqYld4cFpGaFNiRk5YVVc5TFUwSTNTVU5TWmsxNlVUUk9ha0UwVG0xVmVWa3lUbXROUkdkNFRsZEZlbHBYV1hoUFYxVXlXV3BOZUUxSFRtdFpla2xuVUZOQ1RsbFhaR3hQYW5CdVdsaFNVMXBZVG5aa1dFcHFXbFV4ZGxwSFZuTkxRMlJzV1ZoWmRscFhOVEJoV0ZJMVdESkdNR1JJU25CWmJsWXdXbE5qY0V4VU5XNWFXRkpLV2tWS05WRXlPV3RhVTJkdVdUSkdNRmxYZUhaYU1UbDNZMjA1YTJSWFRqQktlWGR1WWtoV2FscFhOV3hZTW14MVdrZFdORnBYVVc1TFZITm5ZVmRaWjB0RFJXdFllazB3VDBSWmQwOUVXbXhOYlU1cVdrUkJORTFVVm1oTk1sWnRUVlJzYkU1dFNYcE5WRUpxV2tkTmVVdFRRamRKU0U1c1lrZFpOazl0ZUhaYWVXZHBWVWhLZGxsdGVHeGlVMEl6WVZoU2IwbEhXbkJpYlZKd1ltMWpaMk5JU25aYVNGWnFaRU5DYUdSSVVubGhWMG94WkVkVmFFbEdRbmxpTWtweldsY3daMlF5YkRCaFEwSndZbTVPTUZsWGVITlpXRkp3WWpJMEwwbHBkMmRYYlZaMVdrWTVUV0l5WXpaUGEwNVRVMVpSY0U5NVFubGFXRkl4WTIwMFoxcHRSbk5qTWxVM1NVZ3daMk50VmpCa1dFcDFTVU5TWmsxNlVUUk9ha0UwVG0xVmVWa3lUbXROUkdkNFRsZEZlbHBYV1hoUFYxVXlXV3BOZUUxSFRtdFpla2szU1Vnd1oyTklWbWxpUjJ4cVNVZGFNV0p0VGpCaFZ6bDFTVWN4YUdOdGRFSmpNR3gxV2tkV05GVnRWbmhrVjJ4NVdsZFJiMHBHT1dwTlZHeG9XV3BTYVUxcVJYZE5iVVY0V1ZScmVVOVhVbXBaVjFsNFRXMVpNVmxxVVRSYVZHY3pUMU5yWjJWNVFuQmFhVUZ2U2tZNWFrMVViR2haYWxKcFRXcEZkMDF0UlhoWlZHdDVUMWRTYWxsWFdYaE5iVmt4V1dwUk5GcFVaek5QVTBFclNVUkJaMHBwV1dkS1NGSnZZVmhOZEZCdFpHeGtSazR3WWpOS2JGTlhVVzlMVTBFclNVUkJaMHBwV1dkS1NGSnZZVmhOZEZCc09XNWFXRkpDWkVoU2VXRlhTakZrUjFaS1drTm5jRWxEUlRsUVUwSnRXVmQ0ZWxwVGEyZGxlVUZyV0hwVk0xbHFRbXRaVkVGNVdXMWFiVmx0Vm10UFZGVjRUVzFaZVU5SFZtcE9WRkp0V2tkTk1FMTZaR2hKUkRCbldWaEtlVmxZYTI5S01qVXhZa2QzYmt4RFFXdGtSMmh3WTNrd0sxZ3laR3hrUmtKNVlqSlNNVmt6VWtaaWJsSndaRWhzVldWWVFteFRWMUZ2UzFOM1oxUlhSbTVhVkc4MldqSldNRlZ0Vm5waU0xWjVXVEpXVG1JeVVteGlRMmR1V2xkR01rd3lWblZrUjJ3d1pWWTVhR1JJVW5saFYwb3haRWRWYmt0VE1DdGFNbFl3VTFkU1EyVlZUblphUjFWdlNqSk9hR1JIUm5OaU1tUm1ZMGhLZGxwSVZtcGtRMk56U2pKNE1Wa3lWblZhVmpsd1ltMVNiR1ZIVm10S2VXdHpTVU5TTUdGSGJIcE1WRFZ1V2xoU1ZHUkhPWGxhVld4clMwTnJjMGxEVW1aWmVrVTFXVmRKTUZscVNYaE5SRXBvVFZkRk5VMXFiR3RaTWtadFRWUktiVTVYU1RCUFIxVTBUbnByYzBsRVFYQlBlVUZyV0hwVk0xbHFRbXRaVkVGNVdXMWFiVmx0Vm10UFZGVjRUVzFaZVU5SFZtcE9WRkp0V2tkTk1FMTZaR2hKUkRCbllWY3hkMkpIT1d0YVUyZHVURU5qYzBsRFVtWk9WR1JwVFVkU2FFMUVTbWxhYlZwcFdsZFJOVTVVUlhsYWFrazBXbGROTVU1SFdtdFplbEY2VGpKRmNFOTVRV3RZTWs1c1dUSmFiRTlVUW1sT1JFWnFUbTFaTWsxSFdUVk5WR3h0VDFScmVVOUVXbXRQUjBsNVRVUlpORWxFTUdkSmJFcEdWVVY0UWxFd1ZXZFRWVFZWVkhsQ1owbHBOWHBhVjNodFQycHdibHBZVWxGamJUbHJaRmRPTUZaSFJtbGlSMVpLWW01U1QxbFhNV3hMUTJ0MVNXMUJaMVpyUmsxV1ZWWlVTVU5vTjBwR09ERk9Na2wzV2tkRmQwMXRTbTFhYlVwc1drUnJNVTFVU20xTmFtaHNXWHBWTUZwdFVtcE9SRTB6V1Znd2NFbHFjMmRrU0VvMVNVaHpaMHBJVW05aFdFMTBVR3c1YmxwWVVrSmFSMFozWkVkV2VVdERhM1JRYmtZeFdsaEtOVXREVW1aWk1sWnFXbTFWTlUxSFNUQk5WMDB5V21wWmQxcHFhM2hQVjFrMVQxUkpORTV0VVRSWmFrbDNUbXBuY0U5NVFqbEpSMDVvWkVkT2IwbERhRVpsUjA1c1kwaFNjR0l5TkdkS1JqbHJUa2RaZVU1RVNtaFBWMFV5VFZSU2JVNUVRVEpaYWtGM1RsZEpNRTFIU1RKUFIwNXFUbXBqTVZscGEyZGxlVUp3V21sQmIyTXpVbmxoV0VKMlkzbG5hMWd5VVRCYWFra3dUVzFGTlZsVVdYaE9SMWt3VFVSYWFVMUVRVEZaYWxGM1dXcFpORmt5VFRKT2VsWnBURlExYmxwWVVrNWFXRTU2V1Zka2JFdERhM05LTUd4MVpFZFdibU50YkRCbFUwSnFZakkxZW1SSVNtaGhWelV3U1VoYWNHSXllR2hrUjJ4MlltbGpjRWxFTURsUVUwSkhVVlY0VkZKVGEyZGxlVUo2V2xkNGJVOXFjSE5pTW1OdlNrWTVhMDVIV1hsT1JFcG9UMWRGTWsxVVVtMU9SRUV5V1dwQmQwNVhTVEJOUjBreVQwZE9hazVxWXpGWmFUQXJXakpXTUZSWFZucGpNa1p1V2xObmNFeERRbUZhVnpWcldEQjRkbHA2YnpaU1ZrcFRTMVJ6WjJaVFFteGlTRTVzU1VoeloyTXlWbk5hYW04MllrYzVia3REU21KVmExWlNXRlpDZVdJeVVqRlpNMUZuU2tZNWFrMVViR2haYWxKcFRXcEZkMDF0UlhoWlZHdDVUMWRTYWxsWFdYaE5iVmt4V1dwUk5GcFVaek5QVTBKcVdWYzFkV0l6VVdkWmJWVm5XbTA1TVdKdFVXbExWSE5uWmxOQ09VbElNR2RtVTBKM1pGZEtjMkZYVFdkYWJsWjFXVE5TY0dJeU5HZGlWMFo1WVRCR2VsTlhOV3RhV0doUFlqTlNVMXBZUmpGaFdFcHNXa05uYTFneVRYaFBWMFpwVGtkSmVVMVVRWGxaVkVab1QxUkpOVnBIVG1oYWFrVjVXbXBXYVU1RWFHeFBSR00xUzFOQ04wbEhiRzFKUTJkcldESk5lRTlYUm1sT1IwbDVUVlJCZVZsVVJtaFBWRWsxV2tkT2FGcHFSWGxhYWxacFRrUm9iRTlFWXpWSlJEUm5UVU5CYlVwcFFXdGtSMmh3WTNrd0sxb3lWakJWTTFKMlkyMVdTbHBEWjNCSlJEUm5UVU5CYlVwcFFXdGtSMmh3WTNrd0sxZ3laR3hrUlVZd1pFaEtjRmx1VmpCYVZXeHJTME5yWjBsVU1EbEpSMXBvWWtoT2JFdFRRamRKUTFKbVRsUmthVTFIVW1oTlJFcHBXbTFhYVZwWFVUVk9WRVY1V21wSk5GcFhUVEZPUjFwcldYcFJlazR5UldkUVUwSm9ZMjVLYUdWVFoyNWlibFp6WWtOamMwbERVakJoUjJ4NlRGUTFabG95VmpCVlNFcDJXa2hXYW1SRlZuVmtSMnd3WlZaU05XTkhWa3BhUTJkd1RFTkNUbGxYWkd4UGFuQnVXbGhTVTFwWVRuWmtXRXBxV2xVeGRscEhWbk5MUTJSc1dWaFpkbHBYTlRCaFdGSTFXREpHTUdSSVNuQlpibFl3V2xOamNFeFVOVzVhV0ZKS1drVktOVkV5T1d0YVUyZHVXVEpHTUZsWGVIWmFNVGwzWTIwNWEyUlhUakJLZVhkdVlraFdhbHBYTld4WU1teDFXa2RXTkZwWFVXNUxVM2RuU2toU2IyRllUWFJRYldSc1pFWk9NR0l6U214VFYxRnZTMU4zWjBwR09XcE5WR3hvV1dwU2FVMXFSWGROYlVWNFdWUnJlVTlYVW1wWlYxbDRUVzFaTVZscVVUUmFWR2N6VDFOM1owMVRhemRKUTFKbVRsUmthVTFIVW1oTlJFcHBXbTFhYVZwWFVUVk9WRVY1V21wSk5GcFhUVEZPUjFwcldYcFJlazR5UldkUVUwSndZbGhDYzJJeVVteExRMk56U25sM1owcEdPREZPTWtsM1drZEZkMDF0U20xYWJVcHNXa1JyTVUxVVNtMU5hbWhzV1hwVk1GcHRVbXBPUkUweldWTnJOMGxEVW1aWk1sWnFXbTFWTlUxSFNUQk5WMDB5V21wWmQxcHFhM2hQVjFrMVQxUkpORTV0VVRSWmFrbDNUbXBuWjFCVFFXbFZhMVpSVkVWR1JGSlRRa3BVYkZKUVNVZEJhVXh1VG14aVIxazJUMjFrYkdSR1FubGlNbEl4V1ROU1ZWbFhTbk5hVld4MVpFVTFhR0pYVlc5TFV6UnBXVU5DVjFGVmVGWlNWazFuUzBoemExaDZWVE5aYWtKcldWUkJlVmx0V20xWmJWWnJUMVJWZUUxdFdYbFBSMVpxVGxSU2JWcEhUVEJOZW1Sb1psTnJhVTk1UWpCamJtdG5aWGxCYTJSSGFIQmplVEFyV0RKa2JHUkZSbXRaV0VJd1dsaEpiMHRUTUN0aldGWnNZMjVyYjBwR09XcGFWMDV0V2xScmQxbHFVWGhaZWxwdFRtcENiVTlVUlRWYWFtczFUV3BuTWxwRWFHbE5ha0V5VDBOck4wbElNR2RaTWtZd1dUSm5aMHRGVmpSWk1sWjNaRWRzZG1KcFFXdFlNbEV3V21wSk1FMXRSVFZaVkZsNFRrZFpNRTFFV21sTlJFRXhXV3BSZDFscVdUUlpNazB5VG5wV2FVdFRRamRKUjJ4dFNVTm9lbVJJU25CalJ6bDZTME5TWmxwRVVtMU5hbEY1V1ZSc2FFNXFSVEJhYWxGM1RtMUpkMDFFVm1sT1JFSnBUbXBvYWxsNldUTk9WMGwwVUcxa2JHUkZNV3hqTTA1b1dqSlZiMHRUZDI1VFZ6VXdXbGRrZVdGWVVqVkpSMDUyWW01T01HTnRSbkJpYmxGblpHMXNkbUpIUmpCaFZ6bDFTbmxyWjFCVU1EbEpSVnBDVkVaT1JrdFRRamRKU0U1c1lrZFpOazl0ZUhaYWVXZHJXREpSTUZwcVNUQk5iVVUxV1ZSWmVFNUhXVEJOUkZwcFRVUkJNVmxxVVhkWmFsazBXVEpOTWs1NlZtbE1WRFZ1V2xoU1RscFlUbnBaVjJSc1MwTnJjMGxHY0d4aWJWSm1WRWM1Yms5cWNFWlZiRWx3VDNsQ09VbEhWbk5qTWxWblpYbENlbHBYZUcxUGFuQnpZakpqYjBsc2RFOVVNVkptVld0V1VsaFdRbmxpTWxJeFdUTlJaMHBHT1dwTlZHeG9XV3BTYVUxcVJYZE5iVVY0V1ZScmVVOVhVbXBaVjFsNFRXMVpNVmxxVVRSYVZHY3pUMU5DYTFwWGVHeGtSMVpyU1VoT2RrbEhOWFpKU0ZaM1drZEdNRnBYVVdkamJWWjRaRmRzZVZwWFVXbExWSE5uWmxOQ09VbElNR2RtVTBKM1pGZEtjMkZYVFdkYWJsWjFXVE5TY0dJeU5HZGlWMFo1WVRCR2VsTlhOV3RhV0doVFdsaEdNV0ZZU214YVJWcDJZMnRHYzJKR1RqQmlNMHBzWTNsbmExZ3lUWGhQVjBacFRrZEplVTFVUVhsWlZFWm9UMVJKTlZwSFRtaGFha1Y1V21wV2FVNUVhR3hQUkdNMVMxTkNOMGxIYkcxSlEyZHJXREpOZUU5WFJtbE9SMGw1VFZSQmVWbFVSbWhQVkVrMVdrZE9hRnBxUlhsYWFsWnBUa1JvYkU5RVl6VkpSRFJuVFVOcloyVjVRbTFpTTBwc1dWZE9iMGxEYUU1WlYyUnNUMnB3YUdOSVFXOUxVekFyV2pKV01GVXpVblpqYlZaNlMwZGFhR0pJVG14TFUwSm9ZM2xCYTFoNldUUk5Na1Y2V1hwRk0xcFhXbTFOVjBacVRXcEthVnBYUlRCTlYwMHlXVzFGTUU1SFZURlBSRWswUzFOQ04wbERVakJoUjJ4NlRGUTFlbHBZVWxSa1J6bDVXbFZzYTB0RFVtWk9hbWQ2V1ZST2FrMVVaR3hhYlZsNFdWZE5lVTF0U214WlZGRjRXWHBhYVZsVVVUQmFWRlUwVFdwbmRGQnRaR3hrUld4clMwTnJjRTk1UVd0a1IyaHdZM2t3SzJKWFJubGhNRVo2VTFjMWExcFlhRk5hV0VZeFlWaEtiRnBEWjJ0WU1rMTRUMWRHYVU1SFNYbE5WRUY1V1ZSR2FFOVVTVFZhUjA1b1dtcEZlVnBxVm1sT1JHaHNUMFJqTlV0VWMyZG1VMEk1U1Vnd1oyTklWbWxpUjJ4cVNVZGFNV0p0VGpCaFZ6bDFTVWN4YUdOdGRFSmpNR3gxV2tkV05GUnRPVEJWYlZaNFpGZHNlVnBYVWtkaU0wcENZa2Q0VkdSSE9YbGFXRTF2U2tZNWFrMVViR2haYWxKcFRXcEZkMDF0UlhoWlZHdDVUMWRTYWxsWFdYaE5iVmt4V1dwUk5GcFVaek5QVTJ0blpYbENjRnBwUVc5S1JqbHFUVlJzYUZscVVtbE5ha1YzVFcxRmVGbFVhM2xQVjFKcVdWZFplRTF0V1RGWmFsRTBXbFJuTTA5VFFTdEpSRUZ3U1VoeloxcHRPWGxhVjBacVlVTkJiMVJYUm01YVZHODJXVmhDZDB0RGEzUlFiV1JzWkVaT01HSXpTbXhqZVdodFdWZDRlbHBUYTJkWldFMW5Ta1k0TWs5RVRtaE5NazE0VGpKV2JWcHFSbWhaZWtsNVdXMVdhRTVFUm1wT2JVcG9Ua1JTYkU1VVozbFBRMnRuWlhsQmEyUkhhSEJqZVRBcll6SldNRlV6VW5aamJWWktXa05uYTFoNldUUk5Na1Y2V1hwRk0xcFhXbTFOVjBacVRXcEthVnBYUlRCTlYwMHlXVzFGTUU1SFZURlBSRWswVEZRMWJscFlVa3BhUTJkd1MxUnpaMHBJVW05aFdFMTBVRzB4YUdOdGRFSmpNR3gxV2tkV05GUnRPVEJWYlZaNFpGZHNlVnBYVWxOYVdFWXhZVmhLYkZwRFoydFlNazE0VDFkR2FVNUhTWGxOVkVGNVdWUkdhRTlVU1RWYVIwNW9XbXBGZVZwcVZtbE9SR2hzVDBSak5VdFVjMmRtVTBJNVNVZ3daMk5JU25Ca2JVWXdXbE5DYldSWE5XcGtSMngyWW1sQ1psb3lWakJWU0VwMldraFdhbVJGVm5Wa1Iyd3daVlpTTldOSFZrcGFRMmR3U1VoeloyRlhXV2RMUTFJd1lVZHNla3hVTlc1YVdGSkZXVmhTYUV0RFpHeGlibEp3WkVoc1ptUkliSGRhVmpsd1drTmpjRWxFZDJkTlUydG5aWGxCYTFoNmEzaE5WRkY0VFVSa2FrNTZUVEZaYlZrMVRqSk9iVnBIV1ROTmFrMTVUVlJLYWsweVJUSk9SRmswU1VRd1owcElVbTloV0UxMFVHdzVibHBZVWtKYVIwWjNaRWRXZVV0RGEzUlFiVnBzWkVkT2IxUXlOV3hMUTBwVVVsVjRSbEV4VVdkYVZ6VXdZVmhTTlZnelVqVmpSMVptWVZkUloxSnNTbEJVVTBKblNXazFUbGxYWkd4UGFuQnVXbGhTVkdGWE5XNWlSMVl3WWpJMGIwb3lUblpqYlZWMlkyMVdlbUl6Vm5sWk1sVnVTMU13SzFveVZqQldSMFpwWWtkV1QxbFhNV3hMUTJSc1dWaGFabGxZVWpCamJXeHBaRmhTYkVwNWEzVkpiVUZuVmpCb1JsVnJWV2RaUjBZd1pFaEtjRmx1VmpCYVZqbHFZakpTYkZsRFFrMVRWWFJHU1VOa2MyUlhUbXhpYlZabVlWYzFhMXBZYUd4YVEyTTNTV2xyTjBsRFVqQmhSMng2VEZRMWVscFlVa1ZaV0ZKb1MwTmtiR0p1VW5Ca1NHeG1aRWhzZDFwV09YQmFRMk56U1VOU1prOVVSWGhPUkVWM1RqSk5NMDE2Vm1sYWFtc3pXVEphYTFwcVkzbE5la2w0VFcxTmVsbFVXVEJPYW1kd1QzbENPVWxJU214a1NGWjVZbWxCYTJSSGFIQmplVEFyV2pKV01GSkhSakJaVTJkdVdsYzFNR0ZZVWpWWU0xSTFZMGRXWm1GWFVXNUxWSE5uWmxOQ2QyUlhTbk5oVjAxbldtNVdkVmt6VW5CaU1qUm5XVEk1TVdKdVVrcGliVkpzWlVkV2EwdERhMmRsZVVGcldIcHJlRTFVVVhoTlJHUnFUbnBOTVZsdFdUVk9NazV0V2tkWk0wMXFUWGxOVkVwcVRUSkZNazVFV1RSSlJEQm5Ta2hTYjJGWVRYUlFiRGx1V2xoU1VXTnRPV3RrVjA0d1VsYzFNR0ZZVWpWV1NHeDNXbFZzYTB0RGF6ZEpSMnh0U1VObmExaDZhM2hOVkZGNFRVUmthazU2VFRGWmJWazFUakpPYlZwSFdUTk5hazE1VFZSS2FrMHlSVEpPUkZrMFMxTkNOMGxEVW1aWk1sWnFXbTFWTlUxSFNUQk5WMDB5V21wWmQxcHFhM2hQVjFrMVQxUkpORTV0VVRSWmFrbDNUbXBuWjFCVFFXbFZNRlpOVWxWT1ZVbEZUbEJXVlRWVlMwTnZjRWxGV2xOVU1EQm5XVU5KZFdNeVZuTmFhbTgyV2pKV01GVklTblphU0ZacVpFWlNhRmx0ZUd4VFZ6VXdWRzFHZEZwVFozQk1hVXBuU1Vaa1NWSldTa1pKUjFaMVpFZHNNR1ZXT1RCbFdFSnNXREpzYTBsRU1HZEtNM05yV0hwcmVFMVVVWGhOUkdScVRucE5NVmx0V1RWT01rNXRXa2RaTTAxcVRYbE5WRXBxVFRKRk1rNUVXVFJtVTJOblVWVTFSVWxIUmpCa1NFcHdXVzVXTUZwV09YQmFRMEU1U1VOamFVeHJNV2hhTWxVMlQyMWtiR1JHU214ak1qa3hZMjFPYkZSWE9XdGFWM2R2U2pKV2FHUnBPV3hpYmxKd1pFaHNabGxZVWpCamJXeHBaRmhTYkVwNWEzUlFiV1JzWkVWc2ExRnViRVJpTWxKc1MwTmthbGxZVW1oaVJ6bHVXRE5DZVdJeVVqRlpNMUZ1VEVOa2MyUlhUbXhpYlZabVlWYzFhMXBZYUd4YVEyTndUR2xKYmtsRlJrOVNRMEo2WkVjNWVWcFdPWEJhUTBFNVNVTmphVXhwVWpCaFIyeDZURlExYmxwWVVsUmtSemw1V2xWc2EwdERhM1ZKYVdOblVWVTFSVWxEYURKWlYzZ3hXbE5CT1VsRVJYQkphbk5uWmxOQ2VWcFlVakZqYlRSblNraFNiMkZZVFhSUWJEbHVXbGhTUWxwSFJuZGtSMVo1UzBOcmRGQnRXbXhrUjA1dlZESTFiRXREVW1aWk1sWnFXbTFWTlUxSFNUQk5WMDB5V21wWmQxcHFhM2hQVjFrMVQxUkpORTV0VVRSWmFrbDNUbXBuY0U5NVFqbEpTRUo1WVZoYWFHUkhWV2RhYmxaMVdUTlNjR0l5TkdkWU1tUnNaRVZHYTFsWVFqQmFXRWx2UzFOQ04wbElTbXhrU0ZaNVltbENUbGxYWkd4UGFuQnVXbGhTVkdGWE5XNWlSMVl3WWpJMGIwb3lUblpqYlZWMlkyMVdlbUl6Vm5sWk1sVnVTMU13SzFveVZqQlJNamwxWW0xV2FtUkhiSFppYVdkdVdXMTRhR016VW5Oa1YwNXNZbTFXZWxwWFJubFpNbWhtWkROS2NHUkhWVzVMVkhOblpsTkNkMlJYU25OaFYwMW5XbTVXZFZrelVuQmlNalJuV2pKV01GSllUbXBaV0VKc1VUSm9hR050Um1wa1IxWjVZM2xuY0VsSWMyZGpiVll3WkZoS2RVbEhWalJqUjNoMldrZFZiMGxwUVdsTVEyTnlTVU13WjBwcFdXZEthVUk0WmtOQmFFbERaMmRMVTBJM1NVZ3daMWQ1UW1SSlJqUm5TV2xDSzBsRGIyZFFlVUUyU1VNNFoweHBRWE5KUkhOdVMxUnpaMlpUUW5ka1YwcHpZVmROWjFwdVZuVlpNMUp3WWpJMFoxcFlUbXBaV0VKc1ZUTlNlV0ZYTlc1TFExSm1XbXBvYlZsNmF6Uk9SR3N4V1RKUk1scEhSVFZPYWxKcFdrUkJkMDFYVW1wT1YxRXpUbFJXYUZsWFJYQkpTSE5uV20wNWVWcFhSbXBoUTBGdlNraFNiMkZZVFhSUWJXUnNaRVZXZWxreVJuZGFWVTV2V1ZoS2FGa3pVbXhqYmsxdlMxTkNhR041UVd0WWVsRXpXWHByTTA0eVdYcE9SR2N4V1hwWk1rMVhSWGRaYWxFelRWUkpNRnBVV1RST2FtUnJUMVJHYkV0VFFqZEpRMUptV21wb2JWbDZhelJPUkdzeFdUSlJNbHBIUlRWT2FsSnBXa1JCZDAxWFVtcE9WMUV6VGxSV2FGbFhSV2RRVTBKNlpFaEtabU50Vm5kaVIwWnFXbE5uYTFoNlVUTlplbXN6VGpKWmVrNUVaekZaZWxreVRWZEZkMWxxVVROTlZFa3dXbFJaTkU1cVpHdFBWRVpzVEVOQmFWaEdkMmxNYVZKbVRrUmthazlVWXpOYWFrMHdUMFJXYWs1cVdYaFpWRUpwVGtSamVFMXFVbXhPYW1jeVRqSlJOVTFYVlhOSlExSm1XbXBvYlZsNmF6Uk9SR3N4V1RKUk1scEhSVFZPYWxKcFdrUkJkMDFYVW1wT1YxRXpUbFJXYUZsWFJYQlBlVUk1U1VOU1pscHFhRzFaZW1zMFRrUnJNVmt5VVRKYVIwVTFUbXBTYVZwRVFYZE5WMUpxVGxkUk0wNVVWbWhaVjBWblVGTkNNR050YkhSTFExSm1XbXBvYlZsNmF6Uk9SR3N4V1RKUk1scEhSVFZPYWxKcFdrUkJkMDFYVW1wT1YxRXpUbFJXYUZsWFJYQlBlVUo1V2xoU01XTnROR2RLUmpsdFQwZGFhazlVWnpCUFZGWnFXa1JhYTFsVWF6Sk9SMHByVFVSQmVGcEhUVEZhUkdNeFRsZEdhRmxVYzJkbVUwSjNaRmRLYzJGWFRXZGFibFoxV1ROU2NHSXlOR2RaTW5oc1dWYzFWR1JJU25CaWJXTnZTa1k1YlU5SFdtcFBWR2N3VDFSV2FscEVXbXRaVkdzeVRrZEthMDFFUVhoYVIwMHhXa1JqTVU1WFJtaFpVMnRuWlhsQmExaDZTbTFQUjBreFRYcEJNazB5VlhwYWJVcHBUMVJCZUU1SFNUTk9la2sxV1ZkRk0xbHRXVEpaVkVwcFNVUXdaMXBZYUhkaVJ6bHJXbE5uYVV4RFNYTkpjMDl1VEUxUGJVeE5WMVJNVFU5b1RFMVBjRXhOVDNSTVRVOTZURTFQTmt4TlQyZE1UVTl2VEUxUGMweE5UM2xNVFU4MVRFMVBhMHhOVDNKTVRVOTJURTFQTWt4TlR6aE1UVTh2VEUxUGFVeE5UM0ZNVFU5MVRFMVBNRXhOVHpkTVRVOXNURWRWYzJGVGVrUjFRM2d4U1dsck4wbERVbVpOYlU1dFdUSldhMDVIU1RKYVJGbDNUbGRHYUU5WFZUQk5iVVYzV2xSYWFGcHFaekpPUjBreFdWUmpaMUJUUW14bFNFSnpZakpTYkV0RFNYTkphWGRwV1hsNGFGcFRlSFphVTNob1RFZFZjMkZUZUhaTVNGVnpXVk40YkV4SGEzTmllWGd4VEVkRmMxcFRlSEJNUnpoelpGTjROVXhIUlhOYVUzaHdURWM0YzJSVGVHaE1SMVZ6WVZONGRreElWV2xMVkhOblNrWTViVTlIV21wUFZHY3dUMVJXYWxwRVdtdFpWR3N5VGtkS2EwMUVRWGhhUjAweFdrUmpNVTVYUm1oWlUwRTVTVWhPTUdOc09YbGFXRUp6V1ZkT2JFdERVbVpOYlZrMFdXcFZlazFFV1hwYVZFNXRXVzFKTlUxRVJUQlphbU16VFdwc2FGbFVaR2xhYWxwb1RXMUpjMGxEVW1aTmJVNXRXVEpXYTA1SFNUSmFSRmwzVGxkR2FFOVhWVEJOYlVWM1dsUmFhRnBxWnpKT1Iwa3hXVlJqYzBsRFVtWmFhbWh0V1hwck5FNUVhekZaTWxFeVdrZEZOVTVxVW1sYVJFRjNUVmRTYWs1WFVUTk9WRlpvV1ZkRmNFOTVRV3RZTWxrMFdtMU5OVTlFVVRWT1YwNXJUbTFTYUU5VVdUQlpiVkYzVFVSR2ExbDZWbXRPZWxVeFdWZEdhRWxFTUdkak0xSjVXRE5LYkdOSGVHaFpNbFZ2U2pOM2JreERRV2xKUTBselNVTlNabHBxYUcxWmVtczBUa1JyTVZreVVUSmFSMFUxVG1wU2FWcEVRWGROVjFKcVRsZFJNMDVVVm1oWlYwVndUM2xCYTFoNldtMU5NbFV5V1ZkS2JGcEhVVFJaVkVVMVRYcGFhRTVFV1RSYVYxSm9UMGRGZDFscVNUQk5iVlpyU1VRd1oxUlhSbTVhVkc4MldqSldNRlV6VW5aamJWWkVZakkxYldGWFkyOUtNMEp2WTBSU01Vd3pRbTlqUkZJeFdESmtlV0l6Vm5kTU0wSnZZMFJTTVZneVRtOVpXRXA2VFc1T2QxbFhUbXhLZVhkblNraFNiMkZZVFhSUWJXUnNaRVpPTUdJelNteFRWMUZ2UzFOck4wbEhiRzFKUTJkb1dsY3hkMlJJYTI5S1JqZ3lXbXBPYkU1dFJtbGFWMUpyVDBkRmVFOVVUVEpaVkZFeVQwZFdhMWxVYUdoTlIwbDVUa1JLYkZwRGEzQkpTSE5uU2tZNE1scHFUbXhPYlVacFdsZFNhMDlIUlhoUFZFMHlXVlJSTWs5SFZtdFpWR2hvVFVkSmVVNUVTbXhhUTBFNVNVaE9NR05zT1hsYVdFSnpXVmRPYkV0RFNXZEphWGRuU1dsSmMwbElVbmxoVnpCdlNrWTRNbHBxVG14T2JVWnBXbGRTYTA5SFJYaFBWRTB5V1ZSUk1rOUhWbXRaVkdob1RVZEplVTVFU214YVEydHdUM2xDYldJelNXZExRMUptVG1wa2JFNUhTbWhQVjFFeFdWUk5NVTF0VVhsUFJGWnBUbXBSTkUxdFRURmFWMUY1V1ZSTk1FNUVhemxOUkhOcldIcFpNMXBVVW1sWlZHeHJUbGRGZWs1VVNtdE5hbWN4V1dwWk1FOUVTbXBPVjFaclRXMUZlazVFVVRWUVNFNHdZMjE0YkdKcFoydFllbHB0VFRKVk1sbFhTbXhhUjFFMFdWUkZOVTE2V21oT1JGazBXbGRTYUU5SFJYZFpha2t3VFcxV2EwdFVjMnRZZWxreldsUlNhVmxVYkd0T1YwVjZUbFJLYTAxcVp6RlphbGt3VDBSS2FrNVhWbXROYlVWNlRrUlJOVXQ1YzNCSlNITm5Ta1k1YlU5SFdtcFBWR2N3VDFSV2FscEVXbXRaVkdzeVRrZEthMDFFUVhoYVIwMHhXa1JqTVU1WFJtaFpVMEU1U1VoT01HTnNPWGxhV0VKeldWZE9iRXREVW1aT2JWbDZXbFJhYUZsdFZtdGFSR2hvVFZScmVrNXRSVEJPYW1oc1drZEZORmxVUW1sTmFsRjVXbGRTWWtwR09ESk9NbFV3V1cxRk5WcEVWbWhOZWxWNVdrUkpORTVYU1RKT1JHZDVXWHBXYkZwRVNtaE5lbEV3VDFZd2MwbERTV2RKYVhkblNrWTViVTlIV21wUFZHY3dUMVJXYWxwRVdtdFpWR3N5VGtkS2EwMUVRWGhhUjAweFdrUmpNVTVYUm1oWlUyczNTVWd3WjJaVFFuQmFhVUZ2V201V2RWa3pVbkJpTWpWbVdsaG9jR016VW5wTFEyUndXVEk1ZFdScFkzQkxVMEkzU1VOU1pscHFhRzFaZW1zMFRrUnJNVmt5VVRKYVIwVTFUbXBTYVZwRVFYZE5WMUpxVGxkUk0wNVVWbWhaVjBWblVGTkNRV0ZYVG5aaWJsbHZTV3hXVlZKcE1EUkphWGRuU1d4V1ZWSnBNRFJNZVRsS1VqQTFVRlZyVldsTVEwRnJXREpaTkZwdFRUVlBSRkUxVGxkT2EwNXRVbWhQVkZrd1dXMVJkMDFFUm10WmVsWnJUbnBWTVZsWFJtaEpRMnMzU1Vnd1oxcFhlSHBhVTBJM1NVTlNabHBxYUcxWmVtczBUa1JyTVZreVVUSmFSMFUxVG1wU2FWcEVRWGROVjFKcVRsZFJNMDVVVm1oWlYwVm5VRk5DUVdOSVNteGFNVGw1V2xoQ2MxbFhUbXhMUTBsMlZ6RTFhRXhZY0VKTVZtOTNURlJzWTJNeE1IWkphWGRuU25samMwbERVbVphYW1odFdYcHJORTVFYXpGWk1sRXlXa2RGTlU1cVVtbGFSRUYzVFZkU2FrNVhVVE5PVkZab1dWZEZjRTk1UWpsSlIyeHRTVU5uYUZSWFJtNWFWRzgyV2pKV01GVXpVblpqYlZaRVlqSTFiV0ZYWkVkaVIwWnVTME5rZDJGSVFUQmtVemwzWVVoQk1HUldPVzVqYlRreFkwTTVkMkZJUVRCa1ZqbHpaRmRPYkdKdFZtWmtXRkp0VDBjMWRtSnVUakJaVnpWcldWaEthMHA1ZDJkS1NGSnZZVmhOZEZCdFpHeGtSazR3WWpOS2JGTlhVVzlMVTJ0d1NVaHpaMHBHT1cxUFIxcHFUMVJuTUU5VVZtcGFSRnByV1ZSck1rNUhTbXROUkVGNFdrZE5NVnBFWXpGT1YwWm9XVk5CT1VsRlFuZGpiVlp1V0ROS2JHTkhlR2haTWxWdlNXazVZbGh0UlhSbGEwVjBWMnBCZEU5V2VIcFlVemhwVEVOQmJrcDVkMmRLUmpsdFQwZGFhazlVWnpCUFZGWnFXa1JhYTFsVWF6Sk9SMHByVFVSQmVGcEhUVEZhUkdNeFRsZEdhRmxUYXpkSlNEQm5Ta1k1YlU5SFdtcFBWR2N3VDFSV2FscEVXbXRaVkdzeVRrZEthMDFFUVhoYVIwMHhXa1JqTVU1WFJtaFpVMEU1U1VoQ2VWcFhaR1pqYlZaM1lrZEdhbHBUWjJkS2VUbGpZM2x6ZGtwNWQyZEtlVUZ1VEVOQmExZ3lXVFJhYlUwMVQwUlJOVTVYVG10T2JWSm9UMVJaTUZsdFVYZE5SRVpyV1hwV2EwNTZWVEZaVjBab1NVTnJOMGxEVW1aYWFtaHRXWHByTkU1RWF6RlpNbEV5V2tkRk5VNXFVbWxhUkVGM1RWZFNhazVYVVROT1ZGWm9XVmRGWjFCVFFqQmpiV3gwUzBOU1pscHFhRzFaZW1zMFRrUnJNVmt5VVRKYVIwVTFUbXBTYVZwRVFYZE5WMUpxVGxkUk0wNVVWbWhaVjBWd1QzbENlVnBZVWpGamJUUm5Ta1k1YlU5SFdtcFBWR2N3VDFSV2FscEVXbXRaVkdzeVRrZEthMDFFUVhoYVIwMHhXa1JqTVU1WFJtaFpWSE5uWmxOQ2QyUlhTbk5oVjAxbldtNVdkVmt6VW5CaU1qUm5ZMGhLYkdOSFJubGFWazR3WTIxc2RWb3dXblpqYkVZeFdsaEtOVXREVW1aYWFtaHRXWHByTkU1RWF6RlpNbEV5V2tkRk5VNXFVbWxhUkVGM1RWZFNhazVYVVROT1ZGWm9XVmRGY0VsSWMyZGpiVll3WkZoS2RVbElUakJqYmxKMllrYzVNMXBZU1c5S1NGSnZZVmhOZEZCdFRuTmFWMFoxVlROU2VXRlhOVzVMUTFKbVdtcG9iVmw2YXpST1JHc3hXVEpSTWxwSFJUVk9hbEpwV2tSQmQwMVhVbXBPVjFFelRsUldhRmxYUlhCTFZITm5abE5DZDJSWFNuTmhWMDFuV201V2RWa3pVbkJpTWpSblkwaEtiR05IUm5sYVZrNHdZMjFzZFZvd1duWmpiRUp2WTIxR2VtRlhOVzVMUTFKbVdYcHNhazVYUlRWUFZFMDFUMFJKTlZwcVJteE5SMFY1V2xSb2FVNVhUbTFPUkZGNVQxUk9iVmt5U1hCSlNITm5ZMjFXTUdSWVNuVkpSMVkwWTBkNGRscEhWVzlLZVVGdVRFTkJhMlJIYUhCamVUQXJZMGhLYkdOSFJubGFWazR3WTIxc2RWb3dXblpqYkVZeFdsaEtOVXREVW1aWmVteHFUbGRGTlU5VVRUVlBSRWsxV21wR2JFMUhSWGxhVkdocFRsZE9iVTVFVVhsUFZFNXRXVEpKY0V0VWMyZG1VMEozWkZkS2MyRlhUV2RhYmxaMVdUTlNjR0l5TkdkalNFcHNZMGRHZVZwV1RqQmpiV3gxV2pCYWRtTnNaSEJpUjFKcVdWaEthMHREVW1aWmVteHFUbGRGTlU5VVRUVlBSRWsxV21wR2JFMUhSWGxhVkdocFRsZE9iVTVFVVhsUFZFNXRXVEpKY0VsSWMyZEtSamg2VFZSSk0wOVhVVFJPZWtrd1dXcG5kMXBVVG14WlZFWnFXVEpHYWsxNldURlpNbEpvV21wSk5FMXBRVGxKUlRGb1dqSlZOazl0Wkd4a1JrNHdZak5LYkZFeU9YVmFiV3h1UzBOa2QyRklRVEJrVXpsM1lVaEJNR1JXT1c1amJUa3hZME01ZDJGSVFUQmtWamx6WkZkT2JHSnRWbVppYlRsbVkyMVdlbVJYZURCak1UbDZXbGRHZVZreWFIUmlNbEpzV0ROT2QySkhiREJLZVhkblNraFNiMkZZVFhSUWJXUnNaRVpPTUdJelNteFRWMUZ2UzFOck4wbElUbXhpUjFrMlQyMTRkbHA1WjJsWE1EVlFTVVpLUmxVeFZrMVdSazFuVlRCV1FsVnJUa2xZVTBKWVlWZDRhMWt5Um5sYVEwSjZXbGRHZVZreVoyZGlWemxyV2xOQ1lrcEdPSHBOVkVrelQxZFJORTU2U1RCWmFtZDNXbFJPYkZsVVJtcFpNa1pxVFhwWk1Wa3lVbWhhYWtrMFRXd3dhVXRVYzJkaFYxbG5TME5TWmsxNlJYbE9lbXhyVDBSamVVNUhTVFJOUjFWNldsZEZlRmt5VG1oWmVrMHlUbGRPYTFsWFdYbFBSRWxuVUZRd1oxVkhhSGRPU0ZabVVXMTRhR016VWsxa1YwNXNZbTFXVkZwWFJubFpNbWhtVkZjNWExcFhlR1pWTWpreFkyMU9iRTlxY0UxV1ZVNUdWR3RXWmxWRmFGTlJWazVHUzFOQ04wbERVbVpPVjBacldrUldiVnBxYXpCWk1rMHhUbnBTYlU5WFZUTk9SR3MwVDFSR2JFOUVhM2xQVkdodFdsUkJaMUJUUW5WYVdHTm5WMjFXZFZwR09WUmFWMFo1V1RKb1psUklWbXBhVnpWc1dEQnNkVnBIVmpSWU1WSnNZMjB3YjBwSVVtOWhXRTEwVUc1Q2VWcFlRbWhqYlZaVVpFaEtjR0p0WkVkaU0wcFNaRmRXZVdWVFoydFlNazAxV1hwV2FFOVVhM3BQVkdkNVQxZFplRnBVUW1oTmJWVTBXV3BXYWxwcVVUQk5hbXQ2V20xT2FVdFRRWFZKUTJOeFNubHJOMGxEVW1aUFYwVXlUVzFTYWs5WFZYaE5iVlpvV1dwU2FsbFVXbXhOZW1kNVRrZEZOVnBxVlROT1ZFMTVUbFJyWjFCVFFuVmFXR05uVjIxV2RWcEdPVlJhVjBaNVdUSm9abFJJVm1wYVZ6VnNXREZPYkZsWVNtcGhSamxTWkZkV2VXVldPVmhoVjNocldUSkdlVnBEWjJ0WWVsWm9Xa2RSTVZwdFdUVk9SMDVxVGxSak1GcHFiR3hPZWxFMVQwUnJlRnBVWnpWTmFtczBXbTFWZDB0VWMyZG1VMEpzWWtoT2JFbEljMmRLUmpnMVdWUlplVnBIVFRWYVZFVjVXbGRHYVU1SFRtaE9iVlY2VDBSSk1GbFViRzFPVkdNeFRYcEpNVTlUUVRsSlJ6VnNaSGxDWVZwWE5XdFlNVTVzV1ZoS2FtRkdPVTFrVjA1c1ltMVdabFV5Vm1oamJVNXZXREZHTVZwWVNqVllNRXAyWWpKNGJGbFhORzlMVkhObldtMDVlVnBYUm1waFEwRnZTa2hTYjJGWVRYUlFia0o1V2xoQ2FHTnRWbFJrU0Vwd1ltMWtSMkl6U2xGaFNFcG9ZekpzZFZwNVoydFlNazAxV1hwV2FFOVVhM3BQVkdkNVQxZFplRnBVUW1oTmJWVTBXV3BXYWxwcVVUQk5hbXQ2V20xT2FVdFRRbWhqZVVGcldIcFZOVnBVUm1oTmJWcHJXVzFKTWsxcVdYaE5NbFpzVFZkSk5FNUVRbXhPYWtsNVdXcEthMDVYUm14TFUwSTNTVWRzYlVsRGFIcGtTRXB6V2xjMGIwcEdPREZQVjFWNFdWUktiVnBIU21sT2Fra3lUVlJPYkZwVVJtbFBSRkYzV2xSWmVVMXRTWGxhUkZab1dsTnJaMUJwUVhsTFUwSTNTVU5TWms1WFJtdGFSRlp0V21wck1Ga3lUVEZPZWxKdFQxZFZNMDVFYXpSUFZFWnNUMFJyZVU5VWFHMWFWRUZuVUZOQ2RWcFlZMmRYYlZaMVdrWTVWRnBYUm5sWk1taG1WRWhXYWxwWE5XeFlNR3gxV2tkV05GZ3hVbXhqYlRCdlNrWTRNVTlYVlhoWlZFcHRXa2RLYVU1cVNUSk5WRTVzV2xSR2FVOUVVWGRhVkZsNVRXMUplVnBFVm1oYVUwRjFTVU5qY1VwNWF6ZEpRMUptV21wSk5GcFVRbXROVkVrelRUSlZNRnBFV1hkYVJHY3hUMGRWTWsxVVFtMU9lbEV5VDFSamQwMXRSV2RRVTBKMVdsaGpaMWR0Vm5WYVJqbFVXbGRHZVZreWFHWlVTRlpxV2xjMWJGZ3hUbXhaV0VwcVlVWTVVbVJYVm5sbFZqbFlZVmQ0YTFreVJubGFRMmRyV0hwV2FGcEhVVEZhYlZrMVRrZE9hazVVWXpCYWFteHNUbnBSTlU5RWEzaGFWR2MxVFdwck5GcHRWWGRMVkhOblNrWTROVmxVV1hsYVIwMDFXbFJGZVZwWFJtbE9SMDVvVG0xVmVrOUVTVEJaVkd4dFRsUmpNVTE2U1RGUFV6QXJXVmRTYTFVelZtbGpXRlpzWTI1cmIwcEdPVzFOYW1oc1RVZFJlRTFxWTNwYVZGSnJUbXBDYTA5RVZUUmFWRmw0VFVkWk0wNUVXVFZPZWtGNVdWTjNaMHBJVW05aFdFMTBVR3c1YmxwWVVrZGtWM2h6WkVkV05HUkdUbkJhTWpSdlpFaEtNVnBUYTNCUGVVSTVTVWd3WjJaVFFubGFXRkl4WTIwMFowcEdPRFZaVkZsNVdrZE5OVnBVUlhsYVYwWnBUa2RPYUU1dFZYcFBSRWt3V1ZSc2JVNVVZekZOZWtreFQxUnpaMlpUUW5ka1YwcHpZVmROWjFwdVZuVlpNMUp3WWpJMFoyTklTbXhqUjBaNVdsWk9NR050YkhWYU1GcDJZMnRhTVdWdWNEVkxRMUptV1hwc2FrNVhSVFZQVkUwMVQwUkpOVnBxUm14TlIwVjVXbFJvYVU1WFRtMU9SRkY1VDFST2JWa3lTWEJKU0hOblNrWTRlazFVU1ROUFYxRTBUbnBKTUZscVozZGFWRTVzV1ZSR2Fsa3lSbXBOZWxreFdUSlNhRnBxU1RSTmFVRTVTVVV4YUZveVZUWlBiV1JzWkVaT01HSXpTbXhSTWpsMVdtMXNia3REWkhkaFNFRXdaRk01ZDJGSVFUQmtWamx1WTIwNU1XTkRPWGRoU0VFd1pGWTVjMlJYVG14aWJWWm1ZbTA1Wm1OdFZucGtWM2d3WXpFNWVscFhSbmxaTW1oMFlqSlNiRmd6VG5kaVIyd3dTbmwzWjBwSVVtOWhXRTEwVUcxa2JHUkdUakJpTTBwc1UxZFJiMHRUYXpkSlNFNXNZa2RaTms5dGVIWmFlV2RwVnpBMVVFbEdTa1pWTVZaTlZrWk5aMVV3VmtKVmEwNUpXRk5DUjJSWWNEWmxVMEo2V2xkR2VWa3laMmRpVnpscldsTkNZa3BHT0hwTlZFa3pUMWRSTkU1NlNUQlphbWQzV2xST2JGbFVSbXBaTWtacVRYcFpNVmt5VW1oYWFrazBUV3d3YVV0VWMyZGhWMWxuUzBOU1prMTZSWGxPZW14clQwUmplVTVIU1RSTlIxVjZXbGRGZUZreVRtaFplazB5VGxkT2ExbFhXWGxQUkVsblVGUXdaMVZIYUhkT1NGWm1VVzE0YUdNelVrMWtWMDVzWW0xV1ZGcFhSbmxaTW1obVZGYzVhMXBYZUdaVk1qa3hZMjFPYkU5cWNFMVdWVTVHVkd0V1psVkZhRk5SVms1R1MxTkNOMGxEVW1aT1YwWnJXa1JXYlZwcWF6QlpNazB4VG5wU2JVOVhWVE5PUkdzMFQxUkdiRTlFYTNsUFZHaHRXbFJCWjFCVFFuVmFXR05uVjIxV2RWcEdPVlJhVjBaNVdUSm9abFJJVm1wYVZ6VnNXREJzZFZwSFZqUllNVkpzWTIwd2IwcElVbTloV0UxMFVHNUNlVnBZUW1oamJWWlVaRWhLY0dKdFpFZGlNMHBTWkZkV2VXVlRaMnRZTWswMVdYcFdhRTlVYTNwUFZHZDVUMWRaZUZwVVFtaE5iVlUwV1dwV2FscHFVVEJOYW10NldtMU9hVXRUUVhCUGVVRnJXSHBzYUU1cVNtdFplbXhzVFZSS2JGbFhTVEJaTWtVeVdsUk5ORTFxVW1oUFYxa3hUbnBWZWsxcVZUVkpSREJuWW0xV00wbEdjR3hpYlZKbVZUSldhR050VG05WU1IZ3hXVEpXZFZwV09WUmFWMFo1V1RKb1psVllWbXhqYm14bVVtNVdObVZ1YTI5S1JqZ3hXVmRTYTA1WFdtMVBWRkpxV1hwVk0wNUhXVFZhVkdNd1QxUm5OVTFYVlRSUFZFazFUMGRhYkUxRGF6ZEpTREJuV2xkNGVscFRRamRKUTFKbVQxZEZNazF0VW1wUFYxVjRUVzFXYUZscVVtcFpWRnBzVFhwbmVVNUhSVFZhYWxVelRsUk5lVTVVYTJkUVUwSjFXbGhqWjFkdFZuVmFSamxVV2xkR2VWa3lhR1pVU0ZacVdsYzFiRmd4VG14WldFcHFZVVk1VW1SWFZubGxWamxEWWpJNWMxcFhSblZMUTJzM1NVZGFkbU50Vm1oWk1tZG5TME5TTUdGSGJIcE1WRFYzWTIxV2QxbFlTbXhWTTFKNVlWYzFibEp0T1hsVlIyaDVXVmhPY0dKdFkyOUtSamxxVDFkTk1WbFVhelZOZW1zMFRXcHNiVTFYVlhkWlZFcHNUMGRKTVZreVdUQk9SRWsxVFRKYWFsbHBhMmRaV0UxblNrWTRNVTlYVlhoWlZFcHRXa2RLYVU1cVNUSk5WRTVzV2xSR2FVOUVVWGRhVkZsNVRXMUplVnBFVm1oYVUydG5aWGxCYTFoNlZtaGFSMUV4V20xWk5VNUhUbXBPVkdNd1dtcHNiRTU2VVRWUFJHdDRXbFJuTlUxcWF6UmFiVlYzU1VRd1oySnRWak5KUm5Cc1ltMVNabFV5Vm1oamJVNXZXREI0TVZreVZuVmFWamxLWW0xU2JHVkdPVlZhV0VwMFMwTlNNR0ZIYkhwTVZEVjNZMjFXZDFsWVNteFZNMUo1WVZjMWJsSnRPWGxWV0Zac1kyNXJiMHBHT0RGUFYxVjRXVlJLYlZwSFNtbE9ha2t5VFZST2JGcFVSbWxQUkZGM1dsUlplVTF0U1hsYVJGWm9XbE5yWjB0VWMyZEtSamx0VFdwb2JFMUhVWGhOYW1ONldsUlNhMDVxUW10UFJGVTBXbFJaZUUxSFdUTk9SRmsxVG5wQmVWbFRRVGxKUnpWc1pIbENZVnBYTld0WU1VNXNXVmhLYW1GR09VMWtWMDVzWW0xV1psVXlWbWhqYlU1dldERkdNVnBZU2pWWU1Gb3haVzV3TlV0RFVtWk9WMFpyV2tSV2JWcHFhekJaTWsweFRucFNiVTlYVlROT1JHczBUMVJHYkU5RWEzbFBWR2h0V2xSQmNFOTVRV3RZZW14b1RtcEthMWw2Ykd4TlZFcHNXVmRKTUZreVJUSmFWRTAwVFdwU2FFOVhXVEZPZWxWNlRXcFZOVXhVTldoYVIxSlVaRmRLZUdSWFZubGxVMmRyV0RKWmVVOUhWWGRhUkVWNVRucE9iRTVIVVRKTlIxRTBUbFJvYkU1cVJYZGFhbU13VG1wck0wMUVTbWhNUTBGclpFZG9jR041TUN0WU1tUnNaRVZhTVdKSGVEQmFXR2d3VlRKc2JtSnBhREJqYmxac1MxTnJOMGxJTUdkbVUwSjVXbGhTTVdOdE5HZEtSamcxV1ZSWmVWcEhUVFZhVkVWNVdsZEdhVTVIVG1oT2JWVjZUMFJKTUZsVWJHMU9WR014VFhwSk1VOVVjMmRtVTBKM1kyMXNNbGxZVW14SlIxb3hZbTFPTUdGWE9YVkpSamx1V2xoU1IyUlhlSE5rUjFZMFpFWk9jRm95Tkc5S1JqaDVUVWRhYVZsVVRUSk9NbFV3VFhwTmVFMTZXVEZhVkUweldWZEplbGxYU1RKTlJGbDNUbTFGZWxwRFFUbEpSMXBvWWtoT2JFdFRRamRKUjJ4dFNVTm9SMUZWZUZSU1UwRTVVRlF3WjBwR09IbE5SMXBwV1ZSTk1rNHlWVEJOZWsxNFRYcFpNVnBVVFROWlYwbDZXVmRKTWsxRVdYZE9iVVY2V2tOcloyVjVRV3RZZWxFMVRWUlZkMDE2VVRSWmVrWnRUVzFaZDA5SFVURmFWMXBzVDBSak1sa3lWVEZaTWxwcldYcEdha2xFTUdkVVYwWnVXbFJ2TmxveVZqQlZNMUoyWTIxV1JHSXlOVzFoVjJOdlNqTkNiMk5FVWpGTU0wSnZZMFJTTVZneVpIbGlNMVozVEROQ2IyTkVVakZZTW5neFdUSldkVnBXT1cxa1YzaHpaRWRXTkdSSE1YWmFSMVZ1VEVOQmEyUkhhSEJqZVRBcldqSldNRlV6VW5aamJWWktXa05uY0V0VWMyZG1VMEpzWWtoT2JFbEljMmRLUmpnd1QxUkZNVTFFVFRCUFIwMTRXbXBLYlUxRWFHdE9WMVp0V2xSbk0wNXRUbXhPVjA1dFdrZE5lRmw1UVRsSlJURm9XakpWTms5dFpHeGtSazR3WWpOS2JGRXlPWFZhYld4dVMwTmtkMkZJUVRCa1V6bDNZVWhCTUdSV09XNWpiVGt4WTBNNWQyRklRVEJrVmpselpGZE9iR0p0Vm1aaWJUbG1ZMjFXZW1SWGVEQmpNVGx0WkZkNGMyUkhWalJrUnpGMldrZFZia3hEUVd0a1IyaHdZM2t3SzFveVZqQlZNMUoyWTIxV1NscERaM0JMVkhOblpsTkNlVnBZVWpGamJUUm5TME5TWms1RWEzaE9WRUY2VGtSb2FrMVhXWGxhYWtFMFdrUldiRnB0VlRST2VscHFXbFJXYWxwdFVtcE5WMDFuVUZRd1owb3dSazlTUTJOblVIbENWVlZzVmtaSlJHOW5WR3hXVFZSRGF6ZEpTREJuWTBoV2FXSkhiR3BKUjFveFltMU9NR0ZYT1hWSlIyUnNaRVpDZVdJeVVqRlpNMUo2VW0wNWVWVXlWbWhqYlU1dlZqSnNNR0ZHVG1waU0wcHNTME5TWmxwdFNteFBWR2hwVDBSYWFFNXFRbWhaVjFVeldXcEpOVTU2Um1sWmFrNW9XVlJCZVU1dFVteE9iVTF3U1VoelowcEdPRFJOVkdzeFdtMUdhMDVFV21wT01rcHRUbTFaTUZwSFZtcE5la1pwVDFScmQwMVVXWGRQVkd0NlRtbEJPVWxIUm5samJVWTFTME5yTjBsR2NHeGliVkptVlRKV2FHTnRUbTlZTUhneFdUSldkVnBXT1ZSYVYwWjVXVEpvWmxWWVZteGpibXhSV1ZoS2VscFlTVFpQYms1c1pFVlNiRnB0UmpGaVNGSlFZMGRXZVZsWVVuWmphV2hoV2xjMWExZ3hUbXhaV0VwcVlVWTVUV1JYVG14aWJWWm1WVEpXYUdOdFRtOVlNVVl4V2xoS05WVkhSbmxqTWxaNVQycHdRMWd3Ums5U1EyczNTVWhTZVdWVFFqZEpRMUptVFcxTmVVNUVVVFJPVjFFeldrUm9iRTlFV210YVZGWnNUbFJLYUZscWEzaFBWMGt3V20xV2FFOUhVV2RRVTBKd1ltMXNabG95VmpCTFEyUnNZMjVLZG1Oc09YbGFXRUoyWTI1U2NHSnRZMjVMVkhObllWYzFjRmd6VG14a1EyZHVXbGhLZVdJelNtWmpiVlozWWpOS01HRlhOVzVLZVhkblVsWTVRbFJGZUdWU1ZqbFBWREZTU2xFd1ZYQlBlVUp3V21sQmIwbFRVakJoUjJ4NlRGUTFabUZYTld0YVdHZHdTVWh6WjBwSVVtOWhXRTEwVUcxa2JHUkZiSFZhUjFZMFMwTnJOMGxJTUdkS1JqaDZUVlJKTTA5WFVUUk9la2t3V1dwbmQxcFVUbXhaVkVacVdUSkdhazE2V1RGWk1sSm9XbXBKTkUxcFFUbEpSVEZvV2pKVk5rOXRaR3hrUms0d1lqTktiRkV5T1hWYWJXeHVTME5rZDJGSVFUQmtVemwzWVVoQk1HUldPVzVqYlRreFkwTTVkMkZJUVRCa1ZqbHpaRmRPYkdKdFZtWmpNbFpvWTIxT2IySlhPV3RhVTJOelNVTlNNR0ZIYkhwTVZEVnVXbGhTVkdSSE9YbGFWV3hyUzBOcmNFOTVRbkJhYVVGdlNrWTRlazFVU1ROUFYxRTBUbnBKTUZscVozZGFWRTVzV1ZSR2Fsa3lSbXBOZWxreFdUSlNhRnBxU1RSTmFVRTVVRk5DVVdGSVFUQmtWamxEWWtkR2VtUkZlREZaTWxaMVdsWk9iRmxZU21waFJqbE9ZakpTYkdKR09WUmlNMVo1V1RKVk5rOXJlRlpSTUZaUFVsWTVVVk5HU2tKVk1GVndTVWh6WjBwR09EVlpWRmw1V2tkTk5WcFVSWGxhVjBacFRrZE9hRTV0VlhwUFJFa3dXVlJzYlU1VVl6Rk5la2t4VDFOQk9VbEhOV3hrZVVKaFdsYzFhMWd4VG14WldFcHFZVVk1VFdSWFRteGliVlptVlRKV2FHTnRUbTlZTVVZeFdsaEtOVmd4UW05amJVWjZXbE5uYTJSSGFIQmplVEFyWTBoS2JHTkhSbmxhVms0d1kyMXNkVm93V25aamJFSnZZMjFHZW1GWE5XNUxRMUptV20xS2JFOVVhR2xQUkZwb1RtcENhRmxYVlROWmFrazFUbnBHYVZscVRtaFpWRUY1VG0xU2JFNXRUWEJMVkhOblpsTkNiR0pJVG14SlNITm5Ta1k0TlZsVVdYbGFSMDAxV2xSRmVWcFhSbWxPUjA1b1RtMVZlazlFU1RCWlZHeHRUbFJqTVUxNlNURlBVMEU1U1VjMWJHUjVRbUZhVnpWcldERk9iRmxZU21waFJqbE5aRmRPYkdKdFZtWlZNbFpvWTIxT2IxZ3hSakZhV0VvMVdEQktkbUl5ZUd4WlZ6UnZTMVJ6WjFwdE9YbGFWMFpxWVVOQmIwcElVbTloV0UxMFVHNUNlVnBZUW1oamJWWlVaRWhLY0dKdFpFZGlNMHBSWVVoS2FHTXliSFZhZVdkcldESmFhVnBVYXpSWmFtY3lXVlJaZDFsWFJteE9Na2w1VDFSamVGbHRTWHBaVjBWM1RXcGFhMXBVV21wTFUwSm9ZM2xCYTFoNlZUVmFWRVpvVFcxYWExbHRTVEpOYWxsNFRUSldiRTFYU1RST1JFSnNUbXBKZVZscVNtdE9WMFpzUzFOQ04wbERVbVpaZWsxNVRtMVpOVmx0V1hoYWFrSnNXWHBLYTA1RVZUSk9lbXQzVG0xTk1GcHFhM2xhUkZFMFdWUm5aMUJUUW5WYVdHTm5WMjFXZFZwR09WUmFWMFo1V1RKb1psUklWbXBhVnpWc1dERk9iRmxZU21waFJqbFNaRmRXZVdWV09WVmFXRXAwUzBjMWJHUjVRbUZhVnpWcldERk9iRmxZU21waFJqbE5aRmRPYkdKdFZtWlRWelZyV2xob1psWkhWbmxpVTJkcldIcFZOVnBVUm1oTmJWcHJXVzFKTWsxcVdYaE5NbFpzVFZkSk5FNUVRbXhPYWtsNVdXcEthMDVYUm14SlEydHdUM2xCYTFoNmJHaE9ha3ByV1hwc2JFMVVTbXhaVjBrd1dUSkZNbHBVVFRSTmFsSm9UMWRaTVU1NlZYcE5hbFUxVEZRMWFGcEhVbFJrVjBwNFpGZFdlV1ZUWjJ0WU1rMTZUV3BhYlU5WFNtMU5WMWwzV2xkTmVWcEVVVEZPYW1NMVRVUmFhazVIV1RWTmJWRXdUMGRGTkV4RFFXdGtSMmh3WTNrd0sxZ3laR3hrUlZveFlrZDRNRnBZYURCVk1teHVZbWxuY0V0VWMyZG1VMEk1U1VoT2JHSkhXVFpQYlhoMldubG5hVmN4VGtaUlZrcEVVMFl3WjFSWE9XdGFVMEZyV0hwTmVFMXFZelZhUkdjelRXcFNhVTlFUW14Tk1sWm9UVmRPYWxsWFRYcE9hbFpxV2tkR2JVMXFaM2xNYVVKVVdsZEdlVmt5YUhCaWJXTm5XbTA1ZVVsRFVtWmFiVXBzVDFSb2FVOUVXbWhPYWtKb1dWZFZNMWxxU1RWT2VrWnBXV3BPYUZsVVFYbE9iVkpzVG0xTlowdEhUbk5hVjBaMVdsZFJOa2xEU1hWS1NGSnZZVmhOZEZCdVFubGFXRUpvWTIxV1ZHUklTbkJpYldSSFlqTktVbVJYVm5sbFUyZHJXREphYVZwVWF6UlphbWN5V1ZSWmQxbFhSbXhPTWtsNVQxUmplRmx0U1hwWlYwVjNUV3BhYTFwVVdtcExVelJwUzFOSmNFOTVRV3RZZWtrMVRsUmthRTFYV21sT2FsRTFUMFJLYWxwWFdUSlplbFY2VFdwUmQxbFVhekZOTWtrMVdtMUZlVWxFTUdkaVYyeHFZMjA1TUdGWE1XeExTRko1WkZkVmNFOTVRV3RZZW14b1RYcFJlbHBFUW0xTmFsSnFUbFJhYTA1dFNUSlBSMWw2VFhwYWExcEhSVEJhYWxsNlQxUlNiRWxFTUdkS1NGSnZZVmhOZEZCdFpHeGtSV3gxV2tkV05FdERhM1JRYlZwd1ltMVJiMHBHT0RWWlZGbDVXa2ROTlZwVVJYbGFWMFpwVGtkT2FFNXRWWHBQUkVrd1dWUnNiVTVVWXpGTmVra3hUMU5yTjBsSVRteGlSMWsyVDIxNGRscDVaMmxVVjBZMFNVY3hiR0pUUWpGak1rWnVXbFJ2YVV4dVNuWmtWelZyUzBjeGJHSlhPWGxsVmpsdVdsaFNabU5IVm1oaE1Ua3hZekpHYmxwVGFEQmpibFpzUzFNNGVFMUVTVEJNZWtWM1RXcFJjMDFwYTNWSmF6RnBUR2xDUldJeVRqRmlWMVoxWkVoTloyRlhOR2RoVnpWcldsaG5Oa2xwTkd0a1IyaHdZM2t3SzFveVZqQlZNbXcyV2xObmNFdFVjMmRLUmpnd1RVUlZNVnBxYkd4UFIxVjNUVWRPYUU5SFNUVk5lbU0xVGtSbk0wMVVRWGxhYlZrMVRtcFdhMDE1UVRsSlJ6RndXVE5LZG1SSGJIUmFVMmd3WTI1V2JFdFRRWFJKUTFKbVRXcHJNVTR5UlhoYWJVa3lUa1JyTkUxdFRteGFhbHBxVGxSTmVVNUVRbWhQVkZWNldXcHNiVmxVU1RkSlExSm1UV3ByTVU0eVJYaGFiVWt5VGtSck5FMXRUbXhhYWxwcVRsUk5lVTVFUW1oUFZGVjZXV3BzYlZsVVNXZFFVMEowWVZkT2VXSXpVbkJpVjFWdlpFaEtNVnBUYXpkSlExSm1UMFJGTlU1WFdtaGFSRkV5V1hwa2FWcHFXbTFPUjFKc1dYcE5lRmxxYXpWTlJFVXlUVVJyTlUxNldXZFFVMEZyWkVkb2NHTjVNQ3RZTTBKNVlqSk9iR016VGtsaFdGSjZTME5TWms5WFJYcE9SRTVyVFVkWmVVNUhUVEZPYlZFeVdXcFpORnBxVFhwT2JWSnJXVlJTYlU1cVRUVk9SMVZ3VDNsQmExaDZWbXRPVkVreVRWUkpORTVxYUd0UFJGcHBXVzFGZVUweVRtcE9WMFUxVDFkRk1FMTZaM2hPYlZacFNVUXdaMkpYYkdwamJUa3dZVmN4YkV0SVVubGtWMVZ3U1VNd1owcEdPSGxQVkZVeldWUkdiVmxxV1RCUFZHZDVXVEpXYlU1dFRURk5la2t3VFVkRk5VNVVUbWxQVjFwb1RXcHpaMkZYTlhCWU0wNXNaRU5uYmxwWVNubGlNMHBtWTIxV2QySXpTakJoVnpWdVNubDNaMHBHT0hsWmVra3dUa1JuTVZwRVpHdFBSMVUwVG0xU2JFNVhWVEZOYlVacFQxUkZOVmxxVW0xYVYwVTBXa05yTjBsSVRteGlSMWsyVDIxNGRscDVaMmxYTVU1R1VWWktSRk5HTUdkVVNGWnFXbGMxYkVsSFVuQmpiVlpxWkVOQ2VHUlhWbmxsVkc5blNqTnphMWg2YkdoT2FrcHJXWHBzYkUxVVNteFpWMGt3V1RKRk1scFVUVFJOYWxKb1QxZFpNVTU2VlhwTmFsVTFURlExWmxnelVuWlZNMUo1WVZjMWJrdERiRGxLZVhkblkyMVdlbVJYZURCamVVRnBURzFPZG1SWE5UQkxRMUptVDBSRk5VNVhXbWhhUkZFeVdYcGthVnBxV20xT1IxSnNXWHBOZUZscWF6Vk5SRVV5VFVSck5VMTZXWEJNYVVsblMwaEdNVnBZU2pWUGFVRnJXSHBSZDA1VVZtMVBWMVUwV2xSQmQxa3lSVFJaYW10NlRucHJNRTlFWTNoTlJFcHRXbXByTWs1WFVYcEpSM2gyWWpOQk5rbERVbVpPVjFFeFRXcFplRTFxWnpKUFIxRTBUbTFLYVZsVVNYcFpNazB4V1ZSck5WbFVVWHBQUkVVeVdsZEpjRXhwU1hCUGVVSTVTVWRPYUdSSFRtOUpRMmhoV2xjMWExZ3hUbXhaV0VwcVlVWTVUV1JYVG14aWJWWm1VbGhvYWxwWVFqQmhWemwxU1VOU1prMXFVbXBPVjBwcFdrUmFiRmw2WkdwYVZHTXpXbTFKZVUxRWEzcGFWMGwzVFVSTmVWcEVTWGxaVjBsd1NVaHpaMk15Vm5OYWFtODJZa2M1Ymt0RFNrMWtWMDVzWW0xVloyTklTblpaYlhoc1lsTkJhVXhwVW1aTmFsSnFUbGRLYVZwRVdteFplbVJxV2xSak0xcHRTWGxOUkd0NldsZEpkMDFFVFhsYVJFbDVXVmRKZEZCdFpHeGtSVEZzWXpOT2FGb3lWVzlMVTNkblYyMVdkVnBHT1UxaU1tTTJUMnRXVTFWcGF6ZEpTREJuWTIxV01HUllTblZKUTFKbVQwUkZOVTVYV21oYVJGRXlXWHBrYVZwcVdtMU9SMUpzV1hwTmVGbHFhelZOUkVVeVRVUnJOVTE2V1RkSlNEQm5ZMGhXYVdKSGJHcEpSMW94WW0xT01HRlhPWFZKUjJSc1pFWkNlV0l5VWpGWk0xSjZVbTA1ZVZVeVZtaGpiVTV2VmpKc01HRkdUbXBpTTBwc1VtMDVlVlJ0T1ZOYVdFNHhZa2hTZWt0RFVtWmFiVXBzVDFSb2FVOUVXbWhPYWtKb1dWZFZNMWxxU1RWT2VrWnBXV3BPYUZsVVFYbE9iVkpzVG0xTmMwbERVbVpPVjAxM1RrUlZlVTVVVFRWWmVsRjRUMFJXYkUxVVJtdFpNa2t4V2tkRmVFMHlTVEpPTWtacFdXMUpaMUJUUW5Wa1YzaHpTMU5DTjBsSGJHMUpRMmh3WXpFNWRXUlhlSE5MUTFKbVRsZE5kMDVFVlhsT1ZFMDFXWHBSZUU5RVZteE5WRVpyV1RKSk1WcEhSWGhOTWtreVRqSkdhVmx0U1hCTFUwSTNTVU5TWms1WFRYZE9SRlY1VGxSTk5WbDZVWGhQUkZac1RWUkdhMWt5U1RGYVIwVjRUVEpKTWs0eVJtbFpiVWxuVUZOQ1RsbFhaR3hQYW5CdVdsaFNWR1JIT1hsYVZVNTJZbTFhY0ZwNVoyNWpSMmgzVGtoVmRtTkhhSGRPU0ZabVdqTktkbVJZUVhaalIyaDNUa2hXWm1KSVZtcGFWelZzV0RJMWRsZ3pTbXhqTTFaelpFaE9abU15Vm1oamJVNXZZbGM1YTFwVFkzTlVWMFp1V2xSdk5sbFlRbmRMUTJ0MFVHMWtiR1JHVGpCaU0wcHNTME5yY0U5NVFucGFWM2h0VDJwd2MySXlZMjlKYkhSUFZIbENVMUpXVGxaVVJsSlVTVVpPUmxGV1NrUlRSakJuVkZkV01HRkhPV3RKUjFwNVlqSXdaMWt5T1hWYWJXeHVTV2xyTjBsSU1HZGFWM2g2V2xkc2JVdERVbVpPVjAxM1RrUlZlVTVVVFRWWmVsRjRUMFJXYkUxVVJtdFpNa2t4V2tkRmVFMHlTVEpPTWtacFdXMUpaMUJVTURsSlJsSlRWbFZWY0VsSWMyZEtSamd4V1hwQk1FNVVTVEZOZW14cVRrUkZORTVYVlhoTlYxSnFXV3BXYTFsVVJYcFphbGt6V1ZkS2FWbHBRVGxKUlRGb1dqSlZOazl0Wkd4a1JrNHdZak5LYkZFeU9YVmFiV3h1UzBOa2QyRklRVEJrVXpsM1lVaEJNR1JXT1c1amJUa3hZME01ZDJGSVFUQmtWamx6WkZkT2JHSnRWbVppYlRsbVkyMVdlbVJYZURCak1UbDZXbGRHZVZreWFIUmlNbEpzU25sNFRsbFhaR3hQYW5Cb1kwaEJiMHRUTUN0YU1sWXdWVE5TZG1OdFZXOUxVMnMzU1Vkc2JVbERaMnRZZWxacVRVUlJNVTFxVlhwUFYwMHdUVlJuTVZwVVJYaGFSMDVwVGxkU2FFMVVUbWxPYW1Sb1dXMUthVWxFTURsSlJrSnZZMFJTTVZnd1NuTlpXRTR3VkVoV2FscFhOV3hWTWxab1kyMU9iMWd3TVhaYVIxWnpXREZHTVZwWVNqVmtTR3gzV2xSdk5sUkdWa1JTVlRWR1dERmtTbFJGVWtSUlZrcEZTMU5DTjBsRFVtWk9WMDEzVGtSVmVVNVVUVFZaZWxGNFQwUldiRTFVUm10Wk1ra3hXa2RGZUUweVNUSk9Na1pwV1cxSloxQlRRbEZoU0VFd1pGWTVRMkpIUm5wa1JYZ3hXVEpXZFZwV1RteFpXRXBxWVVZNVRtSXlVbXhpUmpsU1pGZFdlV1ZZVWpWalIxVTJUMnQ0VmxFd1ZrOVNWamxIVmxad1lWZFVjMmRtVTBKd1dtbEJiMHBHT0RGWmVrRXdUbFJKTVUxNmJHcE9SRVUwVGxkVmVFMVhVbXBaYWxacldWUkZlbGxxV1ROWlYwcHBXV2xCT1ZCVFFsRmhTRUV3WkZZNVEySkhSbnBrUlhneFdUSldkVnBXVG14WldFcHFZVVk1VG1JeVVteGlSamxTWkZkV2VXVllValZqUjFVMlQydDRWbEV3Vms5U1ZqbEhWbFp3WVZkVGEyZGxlVUZyV0hwV2FrMUVVVEZOYWxWNlQxZE5NRTFVWnpGYVZFVjRXa2RPYVU1WFVtaE5WRTVwVG1wa2FGbHRTbWxKUkRCblZVZG9kMDVJVm1aUmJYaG9Zek5TVFdSWFRteGliVlpVV2xkR2VWa3lhR1pVVnpscldsZDRabFZZVm14amJtd3daVmhDYkU5cWNFMVdWVTVHVkd0V1psWXdiRTFTUlU1Q1ZXdFJOMGxJTUdkak1sWnpXbXB2Tm1KSE9XNUxRMHBpVkdzNFoxVnJWbFJXVlhoVlZYbENWRkpWUmxOUk1HaGtTVVU1ZDJOSE9YcGhXRkpzU1VjeGJHUkhhSFphUTBKNldsZDRiRmt6VW14YVEwSXdZVWRHZFVsSGJIVkpSMDUyWW0xYWNGcDVTWEJQZVVJNVNVTlNaazlFUlRWT1YxcG9Xa1JSTWxsNlpHbGFhbHB0VGtkU2JGbDZUWGhaYW1zMVRVUkZNazFFYXpWTmVsbG5VRk5DYUdOdVNtaGxVMmR3VDNsQ01HTnVhMmRsZVVKd1dtbEJiMGxUVWpCaFIyeDZURlExWm1GWE5XdGFXR2R3U1VoelowcElVbTloV0UxMFVHMWtiR1JGYkhWYVIxWTBTME5yTjBsSU1HZGhWMWxuUzBOU1prNVhUWGRPUkZWNVRsUk5OVmw2VVhoUFJGWnNUVlJHYTFreVNURmFSMFY0VFRKSk1rNHlSbWxaYlVsblVGUXdaMVZIYUhkT1NGWm1VVzE0YUdNelVrMWtWMDVzWW0xV1ZGcFhSbmxaTW1obVZGYzVhMXBYZUdaVldGWnNZMjVzTUdWWVFteFBhbkJOVmxWT1JsUnJWbVpXTUd4TlVrVk9RbFZyVVhCSlNITm5Ta1k0TlZsVVdYbGFSMDAxV2xSRmVWcFhSbWxPUjA1b1RtMVZlazlFU1RCWlZHeHRUbFJqTVUxNlNURlBVMEU1U1VOU01HRkhiSHBNVkRWM1kyMVdkMWxZU214Vk0xSjVZVmMxYmxKdE9YbFdNbXh6V2tkT2FHTnRVVzlLUmpsdFdXMVZOVTlIU1RST2JVVXlUVWRHYUZwVVpHbE5hbXN6VFZkS2FVMHlSbWhOUkVreVdrZFZNbGw1YXpkSlNFNXNZa2RaTms5dGVIWmFlV2RwVnpBMVVFbEdTa1pWTVZaTlZrWk5aMVV3VmtKVmEwNUpXRk5DVkZwWFJubFpNbWh3WW0xaloxcHRPWGxKUTFKbVdtMUtiRTlVYUdsUFJGcG9UbXBDYUZsWFZUTlpha2sxVG5wR2FWbHFUbWhaVkVGNVRtMVNiRTV0VFdkTFExSm1UbGROZDA1RVZYbE9WRTAxV1hwUmVFOUVWbXhOVkVacldUSkpNVnBIUlhoTk1ra3lUakpHYVZsdFNYQkphV3MzU1Vnd1oxcFhlSHBhVjJ4dFNVTm5hMWg2Vm1wTlJGRXhUV3BWZWs5WFRUQk5WR2N4V2xSRmVGcEhUbWxPVjFKb1RWUk9hVTVxWkdoWmJVcHBTVVF3T1VsR1FtOWpSRkl4V0RCS2MxbFlUakJVU0ZacVdsYzFiRlV5Vm1oamJVNXZXREF4ZGxwSFZuTllNVVl4V2xoS05XUkliSGRhVkc4MlZFWldSRkpWTlVaWU1GcFdWMnh3V2t0VFFqZEpRMUptVDFkRk1rMXRVbXBQVjFWNFRXMVdhRmxxVW1wWlZGcHNUWHBuZVU1SFJUVmFhbFV6VGxSTmVVNVVhMmRRVTBGclpFZG9jR041TUN0alNFcHNZMGRHZVZwV1RqQmpiV3gxV2pCYWRtTnJXakZsYm5BMVMwTlNabHB0U214UFZHaHBUMFJhYUU1cVFtaFpWMVV6V1dwSk5VNTZSbWxaYWs1b1dWUkJlVTV0VW14T2JVMXdUM2xDZWxwWGVHMVBhbkJ6WWpKamIwbHNkRTlVZVVKVFVsWk9WbFJHVWxSSlJrNUdVVlpLUkZOR01HZFZNbFpvWTIxT2IyRlhOVzVKUjFwMlkybEJhMWd5V21sYVZHczBXV3BuTWxsVVdYZFpWMFpzVGpKSmVVOVVZM2haYlVsNldWZEZkMDFxV210YVZGcHFTVU5uYTFoNlZtcE5SRkV4VFdwVmVrOVhUVEJOVkdjeFdsUkZlRnBIVG1sT1YxSm9UVlJPYVU1cVpHaFpiVXBwUzFOSmNFOTVRamxKUjFaell6SlZaMlY1UW5wYVYzaHRUMnB3YzJJeVkyOUpiSFJ1V2xoU1VXTnRPV3RrVjA0d1l6QmFkbU5zVG14WldFcHFZVVprY0dSSGFGUlpNamw1V2xWYWRtTnJOWFpWYlZaNlpGZDRNR014TUdkV1Z6VnlZbTA1TTJKcFFucGFWMFo1V1RKbloySlhPV3RhVTBKaVNrWTRNVmw2UVRCT1ZFa3hUWHBzYWs1RVJUUk9WMVY0VFZkU2FsbHFWbXRaVkVWNldXcFpNMWxYU21sWmJEQm5XbTA1ZVVsSGVERlpNbFoxV2xOQ2NGcHBRblZpZVVKNVdsaE9NV0pJVW5wSmFYZG5WMjFXZFZwR09VMWlNbU0yVDJ0V1UxVnBhemRKU0RCblNrWTRlVTlVVlROWlZFWnRXV3BaTUU5VVozbFpNbFp0VG0xTk1VMTZTVEJOUjBVMVRsUk9hVTlYV21oTmFVRTVTVWN4Y0ZrelNuWmtSMngwV2xOb01HTnVWbXhMVkhOblNrWTROVmxVVFRCTk1sRjNXbXBKTUZsNlZUSmFSRnBwVG1wb2JVMTZUVEphUjFKb1RrZFpNazE2YXpCYVUwRTVTVU5TTUdGSGJIcE1WRFZ1V2xoU1NtSnRVbXhsUTJkd1RGUTFiV0ZYTld0TFExSm1UMWRGTWsxdFVtcFBWMVY0VFcxV2FGbHFVbXBaVkZwc1RYcG5lVTVIUlRWYWFsVXpUbFJOZVU1VWEzQlBlVUZyV0hwUmQwNVVWbTFQVjFVMFdsUkJkMWt5UlRSWmFtdDZUbnByTUU5RVkzaE5SRXB0V21wck1rNVhVWHBKUkRCbllsZHNhbU50T1RCaFZ6RnNTMGhTZVdSWFZYQkpRekJuU2tZNGVVOVVWVE5aVkVadFdXcFpNRTlVWjNsWk1sWnRUbTFOTVUxNlNUQk5SMFUxVGxST2FVOVhXbWhOYW5OblNrWTRlVTlVVlROWlZFWnRXV3BaTUU5VVozbFpNbFp0VG0xTk1VMTZTVEJOUjBVMVRsUk9hVTlYV21oTmFVRTVTVWN4Y0ZrelNuWmtSMngwV2xOb01HTnVWbXhMVkhOblNrWTRORTFVYXpGYWJVWnJUa1JhYWs0eVNtMU9iVmt3V2tkV2FrMTZSbWxQVkd0M1RWUlpkMDlVYTNwT2FVRTVTVU5TTUdGSGJIcE1WRFZtWTBoS2Rsa3lWbnBqTUdod1pFaE5iMHBHT0RWWlZFMHdUVEpSZDFwcVNUQlplbFV5V2tSYWFVNXFhRzFOZWsweVdrZFNhRTVIV1RKTmVtc3dXbE5yTjBsRFVtWk9WMUV4VFdwWmVFMXFaekpQUjFFMFRtMUthVmxVU1hwWk1rMHhXVlJyTlZsVVVYcFBSRVV5V2xkSloxQlRRblJoVjA1NVlqTlNjR0pYVlc5a1NFb3hXbE5yWjB4VFFXdFlla2sxVGxSa2FFMVhXbWxPYWxFMVQwUkthbHBYV1RKWmVsVjZUV3BSZDFsVWF6Rk5Na2sxV20xRmVVOTVRbnBhVjNodFQycHdjMkl5WTI5SmJIUlBWSGxDVTFKV1RsWlVSbEpVU1VaT1JsRldTa1JUUmpCblZFaFdhbHBYTld4SlNFNXNXVmhLYW1GRFFuaGtWMVo1WlZSdlowb3pjMnRZZW14b1RtcEthMWw2Ykd4TlZFcHNXVmRKTUZreVJUSmFWRTAwVFdwU2FFOVhXVEZPZWxWNlRXcFZOVXhVTldaWU0xSjJWVE5TZVdGWE5XNUxRMnc1U25sM1oyTnRWbnBrVjNnd1kzbEJhVXh0VG5aa1Z6VXdTME5TWms5RVJUVk9WMXBvV2tSUk1sbDZaR2xhYWxwdFRrZFNiRmw2VFhoWmFtczFUVVJGTWsxRWF6Vk5lbGx3VEdsSlowdElSakZhV0VvMVQybEJhMWg2VVhkT1ZGWnRUMWRWTkZwVVFYZFpNa1UwV1dwcmVrNTZhekJQUkdONFRVUktiVnBxYXpKT1YxRjZTVWQ0ZG1JelFUWkpRMUptVGxkUk1VMXFXWGhOYW1jeVQwZFJORTV0U21sWlZFbDZXVEpOTVZsVWF6VlpWRkY2VDBSRk1scFhTWEJNYVVsd1QzbENPVWxIVG1oa1IwNXZTVU5vWVZwWE5XdFlNVTVzV1ZoS2FtRkdPVTFrVjA1c1ltMVdabEpZYUdwYVdFSXdZVmM1ZFVsRFVtWk5hbEpxVGxkS2FWcEVXbXhaZW1ScVdsUmpNMXB0U1hsTlJHdDZXbGRKZDAxRVRYbGFSRWw1V1ZkSmNFbEljMmRqTWxaeldtcHZObUpIT1c1TFEwcE5aRmRPYkdKdFZXZGpTRXAyV1cxNGJHSlRRV2xNYVZKbVRXcFNhazVYU21sYVJGcHNXWHBrYWxwVVl6TmFiVWw1VFVScmVscFhTWGROUkUxNVdrUkplVmxYU1hSUWJXUnNaRVV4YkdNelRtaGFNbFZ2UzFOM1oxZHRWblZhUmpsTllqSmpOazlyVmxOVmFXczNTVWd3WjJOdFZqQmtXRXAxU1VOU1prOUVSVFZPVjFwb1drUlJNbGw2WkdsYWFscHRUa2RTYkZsNlRYaFphbXMxVFVSRk1rMUVhelZOZWxrM1NVZ3daMk5JU25Ca2JVWXdXbE5DYldSWE5XcGtSMngyWW1sQ1ptTklTblpaTWxaNll6Qm9jR1JJVFc5S1JqZzFXVlJOTUUweVVYZGFha2t3V1hwVk1scEVXbWxPYW1odFRYcE5NbHBIVW1oT1Ixa3lUWHByTUZwVGEyZGxlVUZyV0hwbmVFOVVWbTFaVjFFd1RtMU5NMWx0V1RKYWFsSnJXbGROZWsxWFNUVlBWRUY0VG1wQk5VOVVUVEpKUkRCbldWaEtlVmxZYTI5TFZITm5Ta1k0TlUxWFRUVk5la1V6VDBkTk1GcEhSWGROUjFsNFRucEthazlIU214YVJFVTFUbFJGTkUxcVJURk9VMEU1U1Vkc2RXUklXbWhpUTJoT1dWZGtiRTlxY0c1YVdGSlVaRWM1ZVZwVlRuWmliVnB3V25sbmJtTkhhSGRPU0ZWMlkwZG9kMDVJVm1aYU0wcDJaRmhCZG1OSGFIZE9TRlptWWtoV2FscFhOV3hZTW5od1lsZHNNRnBZU1c1TVEwRnJaRWRvY0dONU1DdGFNbFl3VlROU2RtTnRWa3BhUTJkd1MxTnJOMGxJVG14aVIxazJUMjE0ZGxwNVoybFhNVUo1WWpKT2JHTXpUblpqYkRCblZXMVdlbVJYZURCamVVSk5ZVmN4Y0dSSFZubEpSMng2U1VoT2JHUkRRakJpZVVGcldIcHJlRmw2YTNwTlZHTTBXWHBTYTFsVVFYZGFha1V6VFcxTk5GbHRWbXROVkdzeFRWUm5lVTFVVlRGSmFXczNTVWRhZG1OdFZtaFpNbWRuUzBOU1prOVhSWHBPUkU1clRVZFplVTVIVFRGT2JWRXlXV3BaTkZwcVRYcE9iVkpyV1ZSU2JVNXFUVFZPUjFWbldWaE5aMHBHT0RKT2FtZDZUbXBvYWs5RVZtdFplbEY0VFZkR2EwMUViR3BhYWsxNFRtMU5NMXBxWXpKWmFrSnJXV2xyWjJWNVFXdFllbFpzVFdwak5WcEhWWGxPVkVVeVQxUlplazFYV1hwT1JGbDZXVmRSTVU1WFNUUmFWR3MwV1RKT2JVbEVNR2RLUmpneVRtcG5lazVxYUdwUFJGWnJXWHBSZUUxWFJtdE5SR3hxV21wTmVFNXRUVE5hYW1NeVdXcENhMWxwTUN0YU1sWXdVa2M1YW1SWE1XeGlibEZ2UzFSelowcEdPRFJOVkdzeFdtMUdhMDVFV21wT01rcHRUbTFaTUZwSFZtcE5la1pwVDFScmQwMVVXWGRQVkd0NlRteHphMWg2Vm14TmFtTTFXa2RWZVU1VVJUSlBWRmw2VFZkWmVrNUVXWHBaVjFFeFRsZEpORnBVYXpSWk1rNXRURlExYkdKdVVuQmtTR3htWVZkU1pFbEVNR2RLUmpneVRtcG5lazVxYUdwUFJGWnJXWHBSZUUxWFJtdE5SR3hxV21wTmVFNXRUVE5hYW1NeVdXcENhMWxwTUN0ak1rNTJZMjFWTjBsSGJHMUpRMmRyV0hwcmVGbDZhM3BOVkdNMFdYcFNhMWxVUVhkYWFrVXpUVzFOTkZsdFZtdE5WR3N4VFZSbmVVMVVWVEZKUkRSblRVTnJaMlY1UW5CYWFVRnZXVEk1TVdKdVVXOUtSamcwVFZSck1WcHRSbXRPUkZwcVRqSktiVTV0V1RCYVIxWnFUWHBHYVU5VWEzZE5WRmwzVDFScmVrNXBhMmRRYWpCblNrWTROVTFYVFRWTmVrVXpUMGROTUZwSFJYZE5SMWw0VG5wS2FrOUhTbXhhUkVVMVRsUkZORTFxUlRGT1UydG5aWGxDYVdOdFZtaGhlbk5uWmxOQ09VbElNR2RoVjFsblMwTkZhMlJIYUhCamVUQXJXRE5hYUdKSGJHdExVMEkzU1VoT2JHSkhXVFpQYlhoMldubG5hVmN3ZUhCWk1sWjFZekpXWkVsRmVIQmlWMnd3WTNsQ2FtSkhWbWhqYlZab1drTkNhVnBYVG1oa1dFNXNTVWhzZG1SVFFtOVpXRnBzU1VjMWRrbElXbWhpUjJ4clNVZDRjRmt5Vm5Wak1sVm5ZVmMxZW1SSFJuTmlSMVpyU1dsck4wbERVbVpQUkVVMVRsZGFhRnBFVVRKWmVtUnBXbXBhYlU1SFVteFplazE0V1dwck5VMUVSVEpOUkdzMVRYcFpaMUJUUW1oamJrcG9aVk5uY0U5NVFqbEpTRXBzWkVoV2VXSnBRV3RZZW1kNFQxUldiVmxYVVRCT2JVMHpXVzFaTWxwcVVtdGFWMDE2VFZkSk5VOVVRWGhPYWtFMVQxUk5Nazk1UWpsSlNFSXhXVzE0Y0ZsNVFtMWtWelZxWkVkc2RtSnBRbTVhV0ZKVFdsaE9NV0pJVW5wV01td3dZVVpPYW1JelNteExRMUptVFhwS2Fsa3lVWGxaYlVVMVRrZFJlRTFVU21wWmJVVjZUa1JzYlUxdFVUTk9ha2w2V2xSVk0wNHlUWEJKU0hOblNrWTRNbGw2YXpOTmVtTjRXbFJWTTAxdFNtbE5WRmw1V1RKVk5VNUhTbWxPUjBreVdXcGpNMDFVVW1oUFUwRTVTVU5TTUdGSGJIcE1WRFZ1V2xoU1VXTnRPV3RrVjA0d1l6QmFkbU5zVG14WldFcHFZVVprY0dSSGFGUlpNamw1V2xObmExaDZUWGxaTWs1clRXMUthRTlVVW10TlZFVjVXVEpLYUUxNlVUVmFha3ByVG5wWmVVMHlWVEZPZW1ScVMxUnpaMkZYV1dkTFIxWjBZMGhTTlV0RFVtWk9iVTAxVG5wTk0wMVhWVEZPZWtwcFdXcEZNazF0VG14UFZGSnBXV3BTYVU1dFNUTk9la1V3V1ZScmNFbERXVzFKUlRGb1dqSlZOazl0Wkd4a1JrNHdZak5LYkZFeU9YVmFiV3h1VW0xNGFGcDVaMjVqUjJoM1RraFZkbU5IYUhkT1NGWm1Xak5LZG1SWVFYWmpSMmgzVGtoV1ptSnRPV1pqYlZaNlpGZDRNR014T1d4aWJVWnBZa2RXYTBwNWQydGtSMmh3WTNrd0sxb3lWakJWTTFKMlkyMVdTbHBEWjNCTFUydG5aWGxCYTFoNlVUTlpiVVV6V2xST2JVOUhXbXROUkVKclQwUmFiVTVVUW1oWk1scHRUVmRHYUUxVVFYZGFhbXQ0U1VRd1oxUlhSbTVhVkc4MldqSldNRlV6VW5aamJWWkVZakkxYldGWFkyOUtNMEp2WTBSU01Vd3pRbTlqUkZJeFdESmtlV0l6Vm5kTU0wSnZZMFJTTVZneVRtOVpXRXA2VFc1U2VXRlhNRzVNUlRGb1dqSlZOazl0Um5kalEyZHdURlExYmxwWVVsUmtSemw1V2xObmNFdFVjMmRoVjFsblMwaE9NR050ZUd4aWFXZHJXSHBSTTFsdFJUTmFWRTV0VDBkYWEwMUVRbXRQUkZwdFRsUkNhRmt5V20xTlYwWm9UVlJCZDFwcWEzaExVMEVyU1VSSmQwdFRRamRKUTFKbVRrUmthVmxVWkd4Tk1sazBXbTFSZDAxSFVUUk9iVmt4VFVkR2FscHRXWGhaVjBWNFRVUkNiVTlVUldkUVUwSjZaRmRLZW1SSVNXOUtSamd3VGpKS2FFNHlWWHBhYW1odFdrUkJkMXBFWnpKYWFsVjNXVmRPYlZwcVJtaFpWRVYzVFVkWk5VMVRkMmROUTNkblRXcEJjRTk1UWpsSlIyeHRTVU5vZW1SSVNuTmFWelJ2U2tZNE1FNHlTbWhPTWxWNldtcG9iVnBFUVhkYVJHY3lXbXBWZDFsWFRtMWFha1pvV1ZSRmQwMUhXVFZOVTJzclRVTnJaMlY1UW5wYVYzaHRUMnB3YzJJeVkyOUpiSFJQVkhsQ1UxSldUbFpVUmxKVVNVWk9SbEZXU2tSVFJqQm5Wa2hLY0dKWE1YQmliV05uVjNsU1prNUVaR2xaVkdSc1RUSlpORnB0VVhkTlIxRTBUbTFaTVUxSFJtcGFiVmw0V1ZkRmVFMUVRbTFQVkVaa1NVZGFlV0l5TUdkS2VWSm1UWHBLYWxreVVYbFpiVVUxVGtkUmVFMVVTbXBaYlVWNlRrUnNiVTF0VVROT2FrbDZXbFJWTTA0eVRXNUphV3MzU1VkYWRtTnBRVzlLUmpneVRqSlZNRmx0UlRWYVJGWm9UWHBWZVZwRVNUUk9WMGt5VGtSbmVWbDZWbXhhUkVwb1RYcFJNRTlVTUhkUGVWSm1UbXBrYkU1SFNtaFBWMUV4V1ZSTk1VMXRVWGxQUkZacFRtcFJORTF0VFRGYVYxRjVXVlJOTUU1RWF6aGpNMUo1WWtkV2RVdERVbVpPUkdScFdWUmtiRTB5V1RSYWJWRjNUVWRSTkU1dFdURk5SMFpxV20xWmVGbFhSWGhOUkVKdFQxUkZjRTk1VW1aT2FtUnNUa2RLYUU5WFVURlpWRTB4VFcxUmVVOUVWbWxPYWxFMFRXMU5NVnBYVVhsWlZFMHdUa1JyY2t0NWEyZGxlVUZyV0hwTmVWa3lUbXROYlVwb1QxUlNhMDFVUlhsWk1rcG9UWHBSTlZwcVNtdE9lbGw1VFRKVk1VNTZaR3BKUkRCbll6TlNlVmd5YkhsYVdFSnpXVmRPYkV0RFVtWk9SR1JwV1ZSa2JFMHlXVFJhYlZGM1RVZFJORTV0V1RGTlIwWnFXbTFaZUZsWFJYaE5SRUp0VDFSR1lrcEdPREpPTWxVd1dXMUZOVnBFVm1oTmVsVjVXa1JKTkU1WFNUSk9SR2Q1V1hwV2JGcEVTbWhOZWxFd1QxWXdjMGxEWTI1TVEwRnJXSHBOZVZreVRtdE5iVXBvVDFSU2EwMVVSWGxaTWtwb1RYcFJOVnBxU210T2VsbDVUVEpWTVU1NlpHcExWSE5uWmxOQmExaDZXbXBQVkdONlRucEdiRTVVWTNsWmJVbDRUbXBLYWxwVWF6QlpiVWt3V1dwYWFVNTZZM2hPUjBVMVNVUXdaMHBJVW05aFdFMTBVRzFrYkdSR1FubGlNbEl4V1ROU2VsSnRPWGxWTWxab1kyMU9iMVl5YkRCaFJrNXFZak5LYkV0RFVtWk5la3BxV1RKUmVWbHRSVFZPUjFGNFRWUkthbGx0UlhwT1JHeHRUVzFSTTA1cVNYcGFWRlV6VGpKTmNFOTVRamxKU0RCbllWZFpaMHRIVm5SalNGSTFTME5TWms1dFRUVk9lazB6VFZkVk1VNTZTbWxaYWtVeVRXMU9iRTlVVW1sWmFsSnBUbTFKTTA1NlJUQlpWR3R3U1VOWmJVbEZNV2hhTWxVMlQyMWtiR1JHVGpCaU0wcHNVVEk1ZFZwdGJHNVNiWGhvV25sbmJtTkhhSGRPU0ZWMlkwZG9kMDVJVm1aYU0wcDJaRmhCZG1OSGFIZE9TRlptWW0wNVptTnRWbnBrVjNnd1l6RTViR0p0Um1saVIxWnJTbmwzYTJSSGFIQmplVEFyV2pKV01GVXpVblpqYlZaS1drTm5jRXRUYTJkbGVVRnJXSHBhYWs5VVkzcE9la1pzVGxSamVWbHRTWGhPYWtwcVdsUnJNRmx0U1RCWmFscHBUbnBqZUU1SFJUVkpSREJuU2toU2IyRllUWFJRYldSc1pFWkNlV0l5VWpGWk0xSjZVbTA1ZVZVeVZtaGpiVTV2VmpKc01HRkdUbXBpTTBwc1VtMDVlVlJ0T1ZOYVdFNHhZa2hTZWt0RFVtWk5la3BxV1RKUmVWbHRSVFZPUjFGNFRWUkthbGx0UlhwT1JHeHRUVzFSTTA1cVNYcGFWRlV6VGpKTmMwbEhOVEZpUjNkd1QzbENPVWxIYkcxSlEyaHNZbGhDTUdWVFoydFllbHBxVDFSamVrNTZSbXhPVkdONVdXMUplRTVxU21wYVZHc3dXVzFKTUZscVdtbE9lbU40VGtkRk5VdFRRVzFLYVVKT1dWZGtiRTlxY0c1YVdGSlVaRWM1ZVZwVlRuWmliVnB3V2pCYWMxbFhZMjlLTTBKdlkwUlNNVXd6UW05alJGSXhXREprZVdJelZuZE1NMEp2WTBSU01WZ3lOWFpZTTBwc1l6TldjMlJJVG1aak1sWnFZakkxYTFneVZuVlpWMHB6V2xkUmJreERVakJoUjJ4NlRGUTFibHBZVWxSa1J6bDVXbFZzYTB0RGEzQkxVMEkzU1VOU1prNXRUVFZPZWswelRWZFZNVTU2U21sWmFrVXlUVzFPYkU5VVVtbFphbEpwVG0xSk0wNTZSVEJaVkd0blVGTkJhMlJIYUhCamVUQXJXakpXTUZWSVNuWmFTRlpxWkVoT1IySXpTbFJhVjBaNVdUSm9XR0ZZVW05Vk1rNTJZMjFXUjJJelNrOWlNVXBzWXpOV2MyUklUVzlLUmpoNlRXMU9hbHBFU21sWlZHc3dXa1JGZUUxdFRtbFpWRTB3VDFkWmVWcEVZekpOYWs1c1RsUmpNMWw1ZDJka1NFb3hXbE5yTjBsSU1HZGpiVll3WkZoS2RVbERVbVpPYlUwMVRucE5NMDFYVlRGT2VrcHBXV3BGTWsxdFRteFBWRkpwV1dwU2FVNXRTVE5PZWtVd1dWUnJOMGxJTUdkalNGWnBZa2RzYWtsSFdqRmliVTR3WVZjNWRVbEhaR3hrUmtwc1l6TldjMlJJVGtkaU0wcENZMGRyYjBwR09IcE5iVTVxV2tSS2FWbFVhekJhUkVWNFRXMU9hVmxVVFRCUFYxbDVXa1JqTWsxcVRteE9WR016V1hsM1owcEdPSGROYWtFMFdWUkZORmxVVlhwUFYwVTFXbFJqTTFsWFRYaE5hbFV4VFZkSmVVNVhWWGRPUkVFMFdtbEJPVWxEWTNwTlJFRnVTMU5DTjBsRFVtWlpha2t3V1dwQmVrNHlXVEpQVkVsNlRUSlJNMXBVVm10YVZGSnBXbTFSTkZreVdYZFpha2t6VGxkWloxQlRRbWhqYmtwb1pWTm5jRTk1UVd0WWVscHFUMVJqZWs1NlJteE9WR041V1cxSmVFNXFTbXBhVkdzd1dXMUpNRmxxV21sT2VtTjRUa2RGTlVsRU1HZEtTRkp2WVZoTmRGQnRaR3hrUmtwc1l6TldjMlJJVGxoaFdGSnZWVEpPZG1OdFZXOUtSamg2VFcxT2FscEVTbWxaVkdzd1drUkZlRTF0VG1sWlZFMHdUMWRaZVZwRVl6Sk5hazVzVGxSak0xbDVhemRKUjJ4dFNVTm9iR0pZUWpCbFUyZHJXSHBhYWs5VVkzcE9la1pzVGxSamVWbHRTWGhPYWtwcVdsUnJNRmx0U1RCWmFscHBUbnBqZUU1SFJUVkxVMnRuWlhsQ2VWcFlVakZqYlRSblNrWTVhVTFxVW1sTlJFMHpXbXBaTlUxcVRYcGFSR1JzVGxkU2JFNUhTbTFhUkdocVdtcENhVTFxWXpGYWFuTm5abE5CYTFneVRteFphazE1V1dwUk5WcEVSbTFOTWtadFRrUlZlRTU2VFROWlZHdDVUbXBaZWxsVVZtbE5NbEV4U1VRd1oxUlhSbTVhVkc4MldqSldNRlJYT1d0YVYzZHZTakpPYUdSSFJuTmlNbU4yWTBoS2RscElWbXBrUTJOd1RGUTFibHBZVWtSaU1uaHpXbGRPTUdGWE9YVkxRMnRuVEZRMWFGcEhVbFJrUnpsNVdsVmFjR0pJVW14amFXZHJaRWRvY0dONU1DdGFNbFl3VlROU2RtTnRWa3BhUTJkd1MxTkJkRkJ0Um10YVJVWXdaRWhLY0ZsdVZqQmFWbEoyVlRKV2MxcFhUakJMUTJSMVdWY3hiRXA1YTJkTVZEVm9Xa2RTUW1SSVVubGhWMG94WkVkV1ZXSXhUbXhpUjFacVpFTm5ibUZYTVdoYU1sVnVTMU5CZEZCdFJtdGFSVEZ3WW0xc2RGbFhlRkZqYld4cVdsTm5jRWxETUN0WlYxSnJVbTFzZFZsWGVGRmpiV3hxV2xObmNFbERNQ3RaVjFKclVtMXNiR0pIVWxWaU1GcHdZa2hTYkdOcFoyNWFWelV3WVZoU05WZ3liR3RLZVhob1kyNUthR1ZUWjI1aFZ6UnVVRlExYUdOdVNtaGxWamx5V2xoc2VrdERVbVpPYlUwMVRucE5NMDFYVlRGT2VrcHBXV3BGTWsxdFRteFBWRkpwV1dwU2FVNXRTVE5PZWtVd1dWUnJjRXRUYTJkUGVVSnRZak5LYkZsWFRtOUpRMmRyV0RKT2JGbHFUWGxaYWxFMVdrUkdiVTB5Um0xT1JGVjRUbnBOTTFsVWEzbE9hbGw2V1ZSV2FVMHlVVEZKUjBaNlNVTlNaazU2VVhoTlIxWm9UWHBuTWxsdFdtbE5iVTE0VGtSTmQxbHFXVFZQVkZreFQwUkNhRTR5VlRSWlZGRndTVWh6WjJGWFdXZExRMFZyV0hwak1FMVVRbXhaVkUwMFRtMUtiVmxxU21wTlZGRjZUVWRKTWs5VWF6Sk9WR2QzV1ZSa2JFOUhSVEJMVTBJM1NVZE9kbUp1VW5CaWJsWnNUM2xDT1VsRFVtWlpha2t3V1dwQmVrNHlXVEpQVkVsNlRUSlJNMXBVVm10YVZGSnBXbTFSTkZreVdYZFpha2t6VGxkYVlrcEdPREpaZW1zelRYcGplRnBVVlROTmJVcHBUVlJaZVZreVZUVk9SMHBwVGtkSk1sbHFZek5OVkZKb1QxWnphMWg2WXpCTlZFSnNXVlJOTkU1dFNtMVpha3BxVFZSUmVrMUhTVEpQVkdzeVRsUm5kMWxVWkd4UFIwVXdURlExYmxwWVVrcGFRMmR3V0ZOQmNVbEVSWGROUkVGM1RVWXdaMUJUUW1oamJrcG9aVk5uWjBvelFubGlNbEl4V1ROU1ptRlhVVzVKUkRBclNVTlNaazU2VVhoTlIxWm9UWHBuTWxsdFdtbE5iVTE0VGtSTmQxbHFXVFZQVkZreFQwUkNhRTR5VlRSWlZGRjBVRzFrYkdSRmJHdExRMnR6U1VOa2VtRXpWVzVKUkRBclNVTlNaazU2VVhoTlIxWm9UWHBuTWxsdFdtbE5iVTE0VGtSTmQxbHFXVFZQVkZreFQwUkNhRTR5VlRSWlZGRjBVRzFrYkdSR1RuSmtVMmR3VEVOQmJtSnRSblJhVTJOblVGUTBaMHBHT0ROT1JFVjNXbGRGZWs5RVdtbGFiVWw1V1hwRk1FMTZRbWxPYW1zMVRtcFZORTFIUlROYVZHaG9Ua013SzFveVZqQlViVVowV2xObmNFeERRVzVqTWxZd1NubEJPVkJwUVd0WWVtTXdUVlJDYkZsVVRUUk9iVXB0V1dwS2FrMVVVWHBOUjBreVQxUnJNazVVWjNkWlZHUnNUMGRGTUV4VU5XNWFXRkpDWkVoU2VXRlhTakZrUjFaVVdsaFNTbHBEWjNCTVEwRnVaRWhzZDFwVFkyZFFWRFJuU2tZNE0wNUVSWGRhVjBWNlQwUmFhVnB0U1hsWmVrVXdUWHBDYVU1cWF6Vk9hbFUwVFVkRk0xcFVhR2hPUXpBcldqSldNRlpJYkhkYVZXeHJTME5yYzBsRFpHcFpXRkpzV2pJNWVXVldPWEJhU0UxdVNVUXdLMGxEVW1aT2VsRjRUVWRXYUUxNlp6SlpiVnBwVFcxTmVFNUVUWGRaYWxrMVQxUlpNVTlFUW1oT01sVTBXVlJSZEZCdFpHeGtSVTVvWkVkV2JtSXpTalZUVjFKNlMwTnJjMGxEWkcxa1YzaHpXRE5XZVdKRFkyZFFWRFJuU2tZNE0wNUVSWGRhVjBWNlQwUmFhVnB0U1hsWmVrVXdUWHBDYVU1cWF6Vk9hbFUwVFVkRk0xcFVhR2hPUXpBcldqSldNRlZJU25aYVNGWnFaRVpXZVdKRFozQk1RMEZ1WVZjeGFGb3lWbVprV0VwelNubEJPVkJwUVc5ak0xSjVZVmMxYmt0Vk1XaGFNbFUyVDIxb2JHSklRbXhqYVdkdVdUSkdNRmxYZUhaYWVUbHdZbGRHYmxwVFkzQk1WRFZ3WW0xc01FdERVbVpPZWxGNFRVZFdhRTE2WnpKWmJWcHBUVzFOZUU1RVRYZFphbGsxVDFSWk1VOUVRbWhPTWxVMFdWUlJjMGxEWkhCaVYwWnVXbE5qY0V4VU5YbGFXRTV3WlcxVmIwcEdPSGROYWtFMFdWUkZORmxVVlhwUFYwVTFXbFJqTTFsWFRYaE5hbFV4VFZkSmVVNVhWWGRPUkVFMFdtbHJjMGxEWkhkamJXeHFXbE5qWjFCVU5HZEtTRkp2WVZoTmRGQnNPVzVhV0ZKUlkyMXNhbHBUWjJ0WWVtTXdUVlJDYkZsVVRUUk9iVXB0V1dwS2FrMVVVWHBOUjBreVQxUnJNazVVWjNkWlZHUnNUMGRGTUV0VFFUbFFVMEYzU1VRNFowcEdPRE5PUkVWM1dsZEZlazlFV21sYWJVbDVXWHBGTUUxNlFtbE9hbXMxVG1wVk5FMUhSVE5hVkdob1RrTXdLMW95VmpCVlNFcHdXVEpWYjB0VFFUWkpRMUl3WVVkc2VreFVOV1phTWxZd1ZVaEtjRmt5Vlc5S1JqZ3pUa1JGZDFwWFJYcFBSRnBwV20xSmVWbDZSVEJOZWtKcFRtcHJOVTVxVlRSTlIwVXpXbFJvYUU1RGEzTkpRMlJ0WVZjMWFHSkdPWGRqYld4cVdsTmpaMUJVTkdkS1JqZ3pUa1JGZDFwWFJYcFBSRnBwV20xSmVWbDZSVEJOZWtKcFRtcHJOVTVxVlRSTlIwVXpXbFJvYUU1RE1DdGFNbFl3VW0xc2RWbFhlRkZqYld4cVdsTm5jRXhEUVhCUGVVSTVTVWQwZVdNeU9YbGtRMmRyV0RKSmVVNUhTWGROZW1SdFRtcHJlVTE2VG10T01sVXhXa2RWTUZsdFdtdFBSMDV0VFVkSmVVNTZWbTFMVkhOblkyMVdNR1JZU25WSlExSm1XV3BKTUZscVFYcE9NbGt5VDFSSmVrMHlVVE5hVkZacldsUlNhVnB0VVRSWk1sbDNXV3BKTTA1WFdUZEpTREJuWTBoS2NHUnRSakJhVTBKdFpGYzFhbVJIYkhaaWFVSm1XakpXTUZWSVNuQlpNbFZ2U2tZNE0wNUVSWGRhVjBWNlQwUmFhVnB0U1hsWmVrVXdUWHBDYVU1cWF6Vk9hbFUwVFVkRk0xcFVhR2hPUTJ0blpYbENjRnBwUVc5S1JqZ3pUa1JGZDFwWFJYcFBSRnBwV20xSmVWbDZSVEJOZWtKcFRtcHJOVTVxVlRSTlIwVXpXbFJvYUU1RE1DdGFNbFl3Vmtoc2QxcFZiR3RMUTJ0blVGUXdaMG96VG5CaVdFSnpXbE5qY0VsSWMyZGpiVll3WkZoS2RVbEVRVGRKU0RCbllrZHNlbVJEWjJ0WU1qRndZbTFzZEZsWGVGRmpiV3hxV2xOM1owcEdPWFJaV0dod1lsZEdjMVZJU25CWk1sVndTVVF3WjBwR09ETk9SRVYzV2xkRmVrOUVXbWxhYlVsNVdYcEZNRTE2UW1sT2FtczFUbXBWTkUxSFJUTmFWR2hvVGtNd0sxb3lWakJWU0Vwd1dUSldUbUl5VW14aVEyZHdURlExYmxwWVVsRmpiV3hxV2xoTmIwcEdPRE5PUkVWM1dsZEZlazlFV21sYWJVbDVXWHBGTUUxNlFtbE9hbXMxVG1wVk5FMUhSVE5hVkdob1RrTnJOMGxEVW1aa01sWnNXbFpTYUdWRlJuUmlNMVoxWkVOQk9VbEVRVGRKUTFKbVlsZHNkV0ZYTVdoaVJrSjVZVmRPYkZaSFJqUkpSREJuVkZkR2JscFVielpoUjFaelkwZFdlVXREWkRCWldHZHVTMU13SzFveVZqQlZTRXB3V1RKVmIwcEdPRE5PUkVWM1dsZEZlazlFV21sYWJVbDVXWHBGTUUxNlFtbE9hbXMxVG1wVk5FMUhSVE5hVkdob1RrTjNaMHBHT1hSaFZ6VndZbGRHYzFWSVNuQlpNbFZ3VDNsQmExZ3lNWEJpYld4MFdWZDRVV050YkdwYVZXeDFXVEo0VlZsWVoyZFFVMEpPV1Zka2JFOXFjRzlhVjNoM1dsaEpiMG96VW1obFEyTndURlExYmxwWVVsRmpiV3hxV2xObmExaDZZekJOVkVKc1dWUk5ORTV0U20xWmFrcHFUVlJSZWsxSFNUSlBWR3N5VGxSbmQxbFVaR3hQUjBVd1RFTkJhMWd5TVhCaWJXeDBXVmQ0VVdOdGJHcGFVM2RuWkVoS01WcFRhemRKUjJ4dFNVTm5hMWg2WXpCTlZFSnNXVlJOTkU1dFNtMVpha3BxVFZSUmVrMUhTVEpQVkdzeVRsUm5kMWxVWkd4UFIwVXdURlExYmxwWVVsRmpiV3hxV2xaU05XTkhWVzlMVTBFNVVGTkJlRXRUUWpkSlExSm1aREpXYkZwV1VtaGxSVVowWWpOV2RXUkRRVGxKUlRGb1dqSlZOazl0YUd4aVNFSnNZMmxuYm1ReVZteGFVMk53VEZRMWJscFlVa0ppVnpreFltNVJiMHBHT0ROT1JFVjNXbGRGZWs5RVdtbGFiVWw1V1hwRk1FMTZRbWxPYW1zMVRtcFZORTFIUlROYVZHaG9Ua05yTjBsSGJHMUpRMmRyV0ROa2JGcFhWbFZaV0doQ1lsYzVNV0p1VVdkS2FWbG5WRmRHYmxwVWJ6WmhSMVp6WTBkV2VVdERaRE5hVjFac1NubHJkRkJ1VWpWalIxWlFXbXRTY0dNelFuTlpXR3R2U2tZNE0wNUVSWGRhVjBWNlQwUmFhVnB0U1hsWmVrVXdUWHBDYVU1cWF6Vk9hbFUwVFVkRk0xcFVhR2hPUTNkbldWaEtlVmxZYTI5TlEzZG5UVk4zWjA1RGEzQkxVMEkzU1VOU1ptSlhiSFZoVnpGb1lrWkNlV0ZYVG14V1IwWTBTVU56T1VsRFVtWmtNbFpzV2xaU2FHVkZSblJpTTFaMVpFUnpaMHBHT1hSaFZ6VndZbGRHYzFWSVNuQlpNbFpLWW0xT2MxWkhSalJKUTNNNVNVTlNabVF5Vm14YVZsSm9aVVZHZEdJelZuVmtSSE5uWmxOQ2NGcHBRVzlLUmpreldsZFdiRlpIUmpSUlZ6RjJaRmMxTUVsRFdXMUpSVEZvV2pKVk5rOXRhR3hpU0VKc1kybG5ibVF5Vm14YVUyTndURlExTUdWWVFteFVNbHBGWVZoT2QySkhSalZMUTFKbVRucFJlRTFIVm1oTmVtY3lXVzFhYVUxdFRYaE9SRTEzV1dwWk5VOVVXVEZQUkVKb1RqSlZORmxVVVhOSlJFbHdTMU5DTjBsRFVtWmlWMngxWVZjeGFHSkdRbmxoVjA1c1UxYzFhbUpHVW1obFEwRnlVRk5CYTFnelpHeGFWMVpWV1Zob1FtSlhPVEZpYmxFM1NVZ3daMkZYV1dkTFJURm9XakpWTms5dGFHeGlTRUpzWTJsbmJtUXlWbXhhVTJOd1RGUTFNR1ZZUW14VU1scEZZVmhPZDJKSFJqVkxRMUptVG5wUmVFMUhWbWhOZW1jeVdXMWFhVTF0VFhoT1JFMTNXV3BaTlU5VVdURlBSRUpvVGpKVk5GbFVVWE5KUjBaNVkyMUdOVXRFUlhOTmFYY3dTMU5yY0VsSWMyZEtSamt6V2xkV2JGWkhSalJSV0ZJd1kyMXNhV1JZVW14amVVRTVTVVV4YUZveVZUWlBiV2hzWWtoQ2JHTnBaMjVrTWxac1dsTmpjRXhVTlc1YVdGSlJZMjA1YTJSWFRqQldNbFpzV2xWR01HUklTbkJaYmxZd1dsaE9SMkl6U2tWaFdFNTNZa2RHTlV0RFVtWk9lbEY0VFVkV2FFMTZaekpaYlZwcFRXMU5lRTVFVFhkWmFsazFUMVJaTVU5RVFtaE9NbFUwV1ZSUmNFOTVRamxKU0RCblkyMVdNR1JZU25WSlExSm1ZbGRzZFdGWE1XaGlSa0o1WVZkT2JGTlhOV3BpUmxKb1pVUnpaMlpUUW5ka1YwcHpZVmROWjJNelVtaGtSMnhxU1VkYU1XSnRUakJoVnpsMVNVYzVkMlJIYkhSaFdIQnNVMWMxYTFwWWFFZGlNMHBDWWtkNFZHUkhPWGxhV0UxdlMxTkNOMGxIV25aamJWWm9XVEpuWjB0Rk1XaGFNbFUyVDIxR2QyTkRaM0JNVkRWdVdsaFNWR1JIT1hsYVdFMXZXbTFHYzJNeVZYQkpSMFo2U1VOU1prNXFaM3BaVkU1cVRWUmtiRnB0V1hoWlYwMTVUVzFLYkZsVVVYaFplbHBwV1ZSUk1GcFVWVFJOYW1kd1NVaHpaMVJYUm01YVZHODJXakpXTUZVeWJIVmFNbmhzWkVjNWRVdERaR2xpUjBaNlpFZDRNVmt5Vm5WYVdFNXNXVmhLYW1GRE9XbGlSMFo2WkVkNE1Wa3lWblZhV0U1c1dWaEthbUZEWTNCTVZEVjZXbGhTVkdSSE9YbGFWV3hyUzBOU1prNXFaM3BaVkU1cVRWUmtiRnB0V1hoWlYwMTVUVzFLYkZsVVVYaFplbHBwV1ZSUk1GcFVWVFJOYW1kMFVHMWtiR1JGYkd0TFEydHdURlExZG1OSVVuQmlWMncyV2xWc2RWcEhWalJMUTJzM1NVZ3daMlpUUW5ka1YwcHpZVmROWjFwdVZuVlpNMUp3WWpJMFoySXpRakJoVnpGd1pXMVdTbUp0VW14bFEyZHdTVWh6WjBwR09IbFBWRlV6V1ZSR2JWbHFXVEJQVkdkNVdUSldiVTV0VFRGTmVra3dUVWRGTlU1VVRtbFBWMXBvVFdsQk9VbEhNWEJaTTBwMlpFZHNkRnBUYURCamJsWnNTMVJ6WjJNeVZuTmFhbTgyWWtjNWJrdERTbUpVTVVKVlUxVXhTbGRyVm1SSlJrNHdZak5LYkVsR2MybE1hVkl3WVVkc2VreFVOVzVhV0ZKVVpFYzVlVnBWYkd0TFEydDFTV3d3WjFSSVZtcGFWelZzU1Vkc2RWcEhWalJKUnpsM1pFZHNkR0ZZVG1oa1IyeDJZbWxDZW1SSFJubGtSMVpyU1dsck4wbERVbVpaYWtrd1dXcEJlazR5V1RKUFZFbDZUVEpSTTFwVVZtdGFWRkpwV20xUk5Ga3lXWGRaYWtrelRsZFpaMUJUUVd0a1IyaHdZM2t3SzFveVZqQlRWelZyV2xobmIwdFRNQ3RpTTBJd1lWY3hjR1Z0Vlc5TFZITm5Ta1k0TWxreVRUUk9NbFV6VFdwb2ExcFhUVFJOYlZGNldtcEplRTlVWnpOYVJFVjZUakpLYkU1SFNYZFBRMEU1U1VjeGNGa3pTblprUjJ4MFdsTm9NR051Vm14TFUwRjBTVU5TWmsxcWF6Rk9Na1Y0V20xSk1rNUVhelJOYlU1c1dtcGFhazVVVFhsT1JFSm9UMVJWZWxscWJHMVpWRWszU1VoT2JHSkhXVFpQYlhoMldubG5hVmN3T1ZGV1JXeE9VMVp3UmxoVFFtSkphVFJyWkVkb2NHTjVNQ3RhTWxZd1ZUTlNkbU50VmtwYVEyZHdUR2xLWkVsRmVERlpNbFoxV2xOQ2NHSnRVbXhsUTBKMlkwaFNjR0pYYkhwWldGSndZakkwWjFwSE9YVmFVMEZ2U2tZNE1sa3lUVFJPTWxVelRXcG9hMXBYVFRSTmJWRjZXbXBKZUU5VVp6TmFSRVY2VGpKS2JFNUhTWGRQUTBKNldsZE9la3RUTkdkVVYwWTBTVWN4YkdKVFFqRmpNa1p1V2xSdmFVeHVTblprVnpWclMwY3hiR0pYT1hsbFZqbHVXbGhTWm1OSFZtaGhNVGt4WXpKR2JscFRhREJqYmxac1MxTTRlRTFFU1RCTWVrVjNUV3BSYzAxcGEzVkphekZwVEdsQ1JXSXlUakZpVjFaMVpFaE5aMkZYTkdkaFZ6VnJXbGhuTmtscE5HdGtSMmh3WTNrd0sxb3lWakJWTW13MldsTm5jRXRVYzJkamJWWXdaRmhLZFVsRFVtWlpha2t3V1dwQmVrNHlXVEpQVkVsNlRUSlJNMXBVVm10YVZGSnBXbTFSTkZreVdYZFpha2t6VGxkWk4wbElNR2RqU0ZacFlrZHNha2xIV2pGaWJVNHdZVmM1ZFVsSFpHeGtSazV3WlcxVmIwdFRRamRKU0Vwc1pFaFdlV0pwUVd0a1IyaHdZM2t3SzFveVZqQlRWelZyV2xobmIwdFRNQ3RpYmxaMFVrYzVhbU41WjNCUGVVSTVTVWhDTVZsdGVIQlplVUp0WkZjMWFtUkhiSFppYVVKdFlWaG9TbUp0VW14bFJWcDJZMnhHTVZwWVNqVkxRMUptVDFkRk1rMXRVbXBQVjFWNFRXMVdhRmxxVW1wWlZGcHNUWHBuZVU1SFJUVmFhbFV6VGxSTmVVNVVhM05KUjBaNVkyMUdOVWxEVW1aT2JVMDFUbnBOTTAxWFZURk9la3BwV1dwRk1rMXRUbXhQVkZKcFdXcFNhVTV0U1ROT2VrVXdXVlJyY0VsSWMyZEtSamd4VGpKSmQxcEhSWGROYlVwdFdtMUtiRnBFYXpGTlZFcHRUV3BvYkZsNlZUQmFiVkpxVGtSTk0xbFRRVGxKUjBaNVkyMUdOVXREYXpkSlNFNXNZa2RaTms5dGVIWmFlV2RwVnpCYVNsZEZWbE5ZVTBKSFlqTldkVnBEUW5kamJUbHJaRmRPTUdONVFqTmhSMnhxWVVOQ00xcFlTbXhKU0Vwc1lsYzVNbHBYVVdkYWJrcDJZbE5DZW1SSE9YbGFVMEpwWkZoUloySnRPVEJKUjFwNVlqSXdaMkZYTld0YVdHZHBTMVJ6WjJGWFdXZExRMFpzWWxoQ01HVlRaMnRZZWxwcVQxUmplazU2Um14T1ZHTjVXVzFKZUU1cVNtcGFWR3N3V1cxSk1GbHFXbWxPZW1ONFRrZEZOVXRUYTJkbGVVSnRZak5LYkZsWFRtOUpRMmRyV0hwYWFrOVVZM3BPZWtac1RsUmplVmx0U1hoT2FrcHFXbFJyTUZsdFNUQlphbHBwVG5wamVFNUhSVFZKUjBaNlNVTlNabGxxVVhsT2VtY3pUbGROZVU1dFRtMU5SMDAxV1cxRmVrMHlXVE5QUkZacVRUSlJNVmt5VlhkTk1sVm5VRlEwWjBwR09IbFphbWhvVG0xUmQwMVVTVE5OUjFrMFRucE9hRnB0Vm0xYVJFRTFXVzFKTWxsVVkzcGFWRUp0V21scloyVjVRV3RZZW1Nd1RWUkNiRmxVVFRST2JVcHRXV3BLYWsxVVVYcE5SMGt5VDFSck1rNVVaM2RaVkdSc1QwZEZNRWxFTUdkVVYwWnVXbFJ2TmxveVZqQlVWemxyV2xkM2Iwb3lUbWhrUjBaellqSmpkbU5JU25aYVNGWnFaRU5qY0V4VU5YTmlNa1pyUzBOU1psbHFVWGxPZW1jelRsZE5lVTV0VG0xTlIwMDFXVzFGZWsweVdUTlBSRlpxVFRKUk1Wa3lWWGROTWxWd1QzbENjRnBwUVc5S1JqZ3pUa1JGZDFwWFJYcFBSRnBwV20xSmVWbDZSVEJOZWtKcFRtcHJOVTVxVlRSTlIwVXpXbFJvYUU1RE1DdGFNbFl3VWtkR01GbFRaMjVhVnpVd1lWaFNOVmd5Ykd0S2VXdHdTVWh6WjBwR09ERk9Na2wzV2tkRmQwMXRTbTFhYlVwc1drUnJNVTFVU20xTmFtaHNXWHBWTUZwdFVtcE9SRTB6V1ZaMFpFbEVNR2RKYVdnM1NrWTROVmxVV1hsYVIwMDFXbFJGZVZwWFJtbE9SMDVvVG0xVmVrOUVTVEJaVkd4dFRsUmpNVTE2U1RGUFV6QXJXakpXTUZOWFVXOUxXREJ6U1VoemExZ3lTVEJOYW1NMFRucFdhazFxV21wYWFrSnFUMWRLYUUxNlRtMU9lbWN4V1hwT2EwNVhUbXhOUkU1c1psTjNaMlY1VW1aTmJVazBXVlJhYTAxRVJYbE9la0p0VDBSamVsbFhXbXhhYlZGM1QxZEthVTV0UlROTk1sVjNXbTFhT1V0VFNUZEpTREJuV2xkNGVscFRRamRKUTFJd1lVZHNla3hVTlhsYVZ6RjJaRzFXVVdOdE9XdGtWMDR3VW01S2RtSlZiSFZhUjFZMFMwTlNabGxxVVhsT2VtY3pUbGROZVU1dFRtMU5SMDAxV1cxRmVrMHlXVE5QUkZacVRUSlJNVmt5VlhkTk1sVnpTVWRhYUdKSVRteExWSE5uWXpKV2MxcHFielppUnpsdVMwTktZbEpyYkZsU1ZrcGtTVVpLYkdKWE9USmhWelZ1U1VoQ2VXSXlVakZaTTFGblNrWTVhVTVFU1ROUFJHTXhXWHBKTWxreVdYZFplbXhwV1ZSTmVscHFZelJPVjAxNldrUldhbHBVUVhwYVUwSnRZMjA1ZEVsSGJIVmFSMVkwU1dsck4wbElNR2RtVTBKd1dtbEJiMkZZVG1aWldFcDVXVmhyYjBwR09ERk9Na2wzV2tkRmQwMXRTbTFhYlVwc1drUnJNVTFVU20xTmFtaHNXWHBWTUZwdFVtcE9SRTB6V1ZOcmNFbEljMmRLUmpneFRqSkpkMXBIUlhkTmJVcHRXbTFLYkZwRWF6Rk5WRXB0VFdwb2JGbDZWVEJhYlZKcVRrUk5NMWxUUVRsSlIyeDBZMGQ0ZGxwSFZXOUtlWGR1VEVOQmExaDZWVE5aYWtKcldWUkJlVmx0V20xWmJWWnJUMVJWZUUxdFdYbFBSMVpxVGxSU2JWcEhUVEJOZW1Sb1MxUnpaMHBHT1dwYVYwNXRXbFJyZDFscVVYaFplbHB0VG1wQ2JVOVVSVFZhYW1zMVRXcG5NbHBFYUdsTmFrRXlUME5CT1VsRFNsTlNWa0pOVVZWT1JrbEZiRTlXUlRobldVaHphMlJIYUhCamVUQXJXakpXTUZaSFJtbGlSMVZ2U2pKT2FHUkhSbk5pTW1SNldsZEdlVmt5WjNaamJWWjZaRmQ0TUVwNWJEbFpRMEpYVVZWNFZsSldUV2RsZVZKbVRsUmthVTFIVW1oTlJFcHBXbTFhYVZwWFVUVk9WRVY1V21wSk5GcFhUVEZPUjFwcldYcFJlazR5UmpsSmFuTm5aRWhLTlVsSWMyZEtTRkp2WVZoTmRGQnNPVzVhV0ZKQ1drZEdkMlJIVm5sTFEydDBVRzVHTVZwWVNqVkxRMUptV1RKV2FscHRWVFZOUjBrd1RWZE5NbHBxV1hkYWFtdDRUMWRaTlU5VVNUUk9iVkUwV1dwSmQwNXFaM0JQZVVJNVNVZE9hR1JIVG05SlEyaEdaVWRPYkdOSVVuQmlNalJuU2tZNWEwNUhXWGxPUkVwb1QxZEZNazFVVW0xT1JFRXlXV3BCZDA1WFNUQk5SMGt5VDBkT2FrNXFZekZaYVd0blpYbENlVnBZVWpGamJUUm5XbTFHYzJNeVZUZEpTREJuWmxOQ09VbElTbXhrU0ZaNVltbENNR051Vm14UGVVSTVTVWhDTVZsdGVIQlplVUo2WkVkR01HRlhUV2RhYmxaMVdUTlNjR0l5TkdkaVJ6bHVTME5TWmsxRWF6Rk5WMHBvV2xSTk5WbHFVVEZhUkdjMFdUSmFhRnBxVm1oUFIwWnRXVzFaZVU1WFZteGFWMUZ6U1VOU1pscEhWbXBaVkUwelRucGthRmxxVm1oWmFrWm9XWHBXYUUxNldYaFpla3BwVDFkUk5FMVVRVFJhYWtVNVltNVdjMkpEYTJkbGVVSndXbWxCYjJGWVRucGFXRkZ2U2tZNVZGSldTbGRTVmtwaVNqRktSbFJWT1ZWU1ZqbENVa1ZTVTBveE1IQkxVMEkzU1VOU1prMUVhekZOVjBwb1dsUk5OVmxxVVRGYVJHYzBXVEphYUZwcVZtaFBSMFp0V1cxWmVVNVhWbXhhVjFGblVGTkJhMWd4VGtaVmJGcEdWV3h6YmxWclZrNVVNVkpHV0RCR1JWSkdTVzVZVXpSblNXNTNhVXhwVW1aTlJHc3hUVmRLYUZwVVRUVlphbEV4V2tSbk5Ga3lXbWhhYWxab1QwZEdiVmx0V1hsT1YxWnNXbGRSTjBsSU1HZFVWMFp1V2xSdk5tSkhPVzVMUTFKbVRVUnJNVTFYU21oYVZFMDFXV3BSTVZwRVp6UlpNbHBvV21wV2FFOUhSbTFaYlZsNVRsZFdiRnBYVVhOSlExSm1Xa2RXYWxsVVRUTk9lbVJvV1dwV2FGbHFSbWhaZWxab1RYcFplRmw2U21sUFYxRTBUVlJCTkZwcVJYTkpTRTVzWWtkWk5rOXBVbVppUnpsdVltMUdkRnBUYXpkSlNEQm5ZMGhXYVdKSGJHcEpSMW94WW0xT01HRlhPWFZKUjJ4NlZGZEdibHBYTlRCaU1WcHNZMnQ0YkdNelRYaE9RMmR3U1VoeloyTnRWakJrV0VwMVNVTm9lbVJJU2pKWlYzZHZWRmRHYmxwVWJ6WmFNbFl3Vm0xV2VXTXliSFppYVdkd1MxTkJPRWxEWTNoTWFsRjFUVk0wTlVwNWF6ZEpTREJuWTBoV2FXSkhiR3BKUjFveFltMU9NR0ZYT1hWSlIyUnNaRVphYkdOdVRuQmlNalJ2UzFOQ04wbERVbVphUjFacVRWZEpNRTE2VlRWT1ZFRjVUbXBTYWxwdFZYbE5WMDE0VDFSWk5FMHlSbXRQVkZGNVRsUkJaMUJUUWtGak1teDBZMGQ0YkdWSE1YTllNbmgyV1ZkU1pscHRiSE5hVTJocllWaEtkVmxYTVd4TFJqbG1VbXRzVFZKV09XWkxVelJ1VEhrMGRVd3lWakJaZVRscVlqSTFiV0ZYWTNWbFJ6RnpTbmxyTjBsSVNteGtTRlo1WW1sQ2VtUklTakpaVjNkdlNrWTVhMXBYVFhoWmFsRjZUbFJyTVUxRVNUSk9SMDV0V2xSSmVGbDZSVFZPYW1kNldWZFJOVTVFU1RGTlF6QXJZbGM1YTJSWGVHeGplVEFyVlVkb2QwNUlWbVpSYlhob1l6TlNUV1JYVG14aWJWWlVXbGRHZVZreVozUlFibHBzWTI1T2NHSXlOSEJQZVVJNVNVaENNVmx0ZUhCWmVVSnRaRmMxYW1SSGJIWmlhVUp1V2xoU1VXTnRPV3RrVjA0d1ZrZEdhV0pIVmtwaWJsSlBXVmN4YkV0RGEyZGxlVUZyV0hwQk1GcHRSbWxhYW1NelRVUnJkMWxYVG1sUFYxSnBXWHBGZUZsVWFHaE5hbFpxVGxSRk1VOUhXWGhKUkRCblZGZEdibHBVYnpaYU1sWXdWVEpzZFZveWVHeGtSemwxUzBOa2FtSXpTbXhNTTBwc1l6STVNV050VG14S2VXdDBVRzFrYkdSR1VtaFpiWGhzVkcxR2RGcFRaMjVaTWtZd1dWZDRkbG94T1hkamJUbHJaRmRPTUZneVZuVmtSMnd3WlZZNWNHSnVVVzVMVkhOblkyMVdNR1JZU25WSlExSm1UVVJTYlZsWFNtMU9lbU4zVDFSQ2FGa3lTVFZhUjBwcVRWUkdhRTlIUlhsT1YwMHhUVlJWTkZwcVJUZEpTREJuWTBoS2NHUnRSakJhVTBKdFlWYzFhR0pEUW0xa1Z6VnFaRWRzZG1KcFFtWmpTRXBzWTBkR2VWcFZSbmRqUTJkd1NVaHpaMkZYV1dkTFIxWjBZMGhTTlV0SVRteGlSMWsyVDJsU1ptSkhiR3BMVTJ0blpYbEJhMWg2VVRKT2Vtc3dUbFJuZUU0eVJYcE9WRmw1V2tSS2FGcEhTbTFPVkZFeFRXcE9iVTVVVG1sT1JHdDNTVVF3WjJOSFJubGpNbFptWkZoS2MwdEZNV2hhTWxVMlQyMWtiR1JGU21oak1sWldZMjEzWjB0Rk1XaGFNbFptVVRJNWVWcFdPVTVpTWxKc1lrWTVWR1JIT1hsYVZHODJWbFpLVFZneFVscFZSVlptVmpCV1EwdFRhemRKUTFKbVdWUkNiVTFYVG1oTmFrRXpUVzFHYTA5VVZUUk5iVTE1V20xVk5FMUVRWGROVkVacFRWUnJOVTE2U1dkUVUwSm9ZMjVLYUdWVFoyZEtNR2hWVmtaQ1psTkZPVlJXUTJOblVGUTBaMHBHT0RCT2FtTTFUa1JWTkUxVVpHaE5lbFV5VFcxUmVWbFhVbWxhYWxVd1RsUkplbHBxVlhwWmFsRTFUVVp6Ym1GSE9YcGtRMlJrVEVOQmJsVXdWbE5XYTFaVFdEQTFRbFJWVlc1SlJEQXJTVU5TWms1RVdUTlBWRkV4VDBSRk0xbFVUVEZPYWtwclRXMUdhMWx0V1RGT1JGVjVUVEpaTVUweVNUQlBWRUppU2pKb2RtTXpVVzVZVTNkblNqRk9SbFZzV2taVmJEbENVa1ZTVTBwNVFUbFFhVUZyV0RGT1JsVnNXa1pWYkhOdVZUQldVMVpyVmxOWU1FWkZVa1pKYmxoVGQyZExWSE5uWVZkWlowdERSbXRhVjFwd1ltMVdhMHREWkVSVU1ERlJVMVY0UmxWc09VcFVhMDVOVmxWU1JsZ3hRa0pXUldkdVMxTnJaMlY1UVd0WWVrazBXbFJWTWs1cVdUTlBWRkpvV1ZkVk0xbHRVbXBaZW14b1RucHNhazR5VG1wTlJGazBXbGRSTVVsRU1HZGFSMng1WW0xR2RGcFRhR1pZTUZwS1ZFVldabGg1YTNWS2VUbHpZVmRKZGxSSVZtcGFWelZzVEcxNGNGbHBOWGRoU0VGdVQzbEJhMWg2VlhkT2JWSm9UMFJqTTA5VVNUTlphbGt4VGtkV2EwNVhWVE5QVjFwcFRucHJNRTlIV21wTmVrNXRTVVF3WjFwSGJIbGliVVowV2xOb1psZ3dXa3BVUlZabVdIbHJkVXA1T1hOaFYwbDJWRWhXYWxwWE5XeE1iVVozWTBNMWQyRklRVzVQZVVJNVNVZFdjMk15VldkbGVVRnJXSHBKTkZwVVZUSk9hbGt6VDFSU2FGbFhWVE5aYlZKcVdYcHNhRTU2YkdwT01rNXFUVVJaTkZwWFVURkpSREJuV2tkc2VXSnRSblJhVTJobVdEQmFTbFJGVm1aWWVXdDFTbms1VVdGSVFUQmtWamxEWWtkR2VtUkZlREZaTWxaMVdsWk9iRmxZU21waFJqbE9ZakpTYkdKR09YTmhWMHBtVkVoV2FscFhOV3hNYlhod1dXazFkMkZJUVc1UGVVRnJXSHBWZDA1dFVtaFBSR016VDFSSk0xbHFXVEZPUjFaclRsZFZNMDlYV21sT2Vtc3dUMGRhYWsxNlRtMUpSREJuV2tkc2VXSnRSblJhVTJobVdEQmFTbFJGVm1aWWVXdDFTbms1VVdGSVFUQmtWamxEWWtkR2VtUkZlREZaTWxaMVdsWk9iRmxZU21waFJqbE9ZakpTYkdKR09YTmhWMHBtVkVoV2FscFhOV3hNYlVaM1kwTTFkMkZJUVc1UGVVSTVTVWRzYlV0RlFXaGFiV3h6V2xZNWJHVkhiSHBrU0UxdlNrWTRlVTlIVlRGT2Fsa3lUbnByTUZsWFJteE9Na3ByV1RKTk5WbFVZelZaZW1ScVdYcEJNazlIVm10T1UydG5aa2gzWjFGRFJuQmpNVGx0WVZkNGJFdERVbVpOYW1oc1RsUlpNazVxWXpWT1IwWm9XbFJrYVZwSFRtcFBWMFV6VDFkTk0xa3lUWGRPYW1oc1drUlZjRWxJZURoSlJVRm9XbTFzYzFwV09XeGxSMng2WkVoTmIwcEdPREZOUkZwcldWUm5NMDU2YTNsT01ra3lUbFJTYkZwRVZteE9lbXh0V1dwak5VNUVhRzFaZWsxNldtbHJaMlpJZDJkUlEwWndZekU1YldGWGVHeExRMUptVGxSQk1scEhSVFJPZW1NMVRXcGthVTVxVlRCYVYxRXhXbFJqTlZwdFNUTlBWRkUwV20xTmVrMHlXWEJMVTBJd1lVaEtkbVI1UW5WYVdHTm5VbGhvYWxwWVFqQmhWemwxUzBOS1EySkhSbnBrUTBKVVdsZEdlVmt5WjJkVVNGWnFXbGMxYkVsSE1YWmFTRlp6V2xOQ2FtSXpTbmxrV0VJd1dsZFJaMHg1UW5waU1qRnNTVWRhY0dKSFZucEpSekZ3WXpOT2NHSnRZMmxMVkhOblkyMVdlR1JYYkhsYVZqbDJZbTFPYkV0RFVtWk5hbWhzVGxSWk1rNXFZelZPUjBab1dsUmthVnBIVG1wUFYwVXpUMWROTTFreVRYZE9hbWhzV2tSVmNFOTVRbmxhV0VZeFlWaEtiRmd5T1hWWk1sVnZTa1k0TVUxRVdtdFpWR2N6VG5wcmVVNHlTVEpPVkZKc1drUldiRTU2YkcxWmFtTTFUa1JvYlZsNlRYcGFhV3MzU1VOU1prOVVXVE5QUjBsNFRrUkJNMDVFYXpOYWFscHJUVmRGTlU1RVJYbFBWMHBzV1RKU2JVNXFSbWhQUkdOblVGTkNkVnBZWTJkaVIyeHFXbGMxZWxwV09XaGpTRUp6WVZkT2FHUkhiSFppYVdoMVpGZDRjMHhEUW0xWlYzaDZXbE4zWjJSSVNqRmFVM2RuWkVoS01WcFRkMmRrU0VveFdsTnJOMGxEVW1aUFZGa3pUMGRKZUU1RVFUTk9SR3N6V21wYWEwMVhSVFZPUkVWNVQxZEtiRmt5VW0xT2FrWm9UMFJqZEZCdVRteGtSamw2V2xoS01scFlTbVprYlVaNVkzbG5hMWd5UlhkYWFrWnFXVlJKZDA1NlNtaGFSR3N4VDBSS2FrMXRXbXhQUkVGM1RVUkZlRmxxUlRWUFZFMTVTMVJ6WjJNeVZuTmFhbTgyU2tZNWMyRlhUV2RRVTBGcldIcHJNazU2YUdsTlZGRjNUbnBSTlU0eVdUSmFSRVpvVDFSUmVFMXFiR2xhVjA1cldtcFplRmxVWnpOTVZEVXlXVmQ0Y0ZwSFJqQmFVMmRyWkVkb2NHTjVNQ3RZTW1Sc1pFVjRjRmt3VW1oa1IwVnZTMU5yTjBsRFVtWlBWRmt6VDBkSmVFNUVRVE5PUkdzeldtcGFhMDFYUlRWT1JFVjVUMWRLYkZreVVtMU9ha1pvVDBSamRGQnRNV2hoTWxabVl6SldhbVJZU214TFEyczNTVWd3WjJGWFdXZExRMFZyWkVkb2NHTjVNQ3RoV0U1TllWZE9WMWxYZUhCYVEyZHdTMU5DTjBsSVRteGlSMWsyVDIxNGRscDVhR2xaV0U1c1RtcFNabHBIVm1waU1sSnNTME5rVlZJeWVIRlhiR014Wld4d1ZGRnRlR3BpYTNBeVdUSmpPVkJUWTNCTWFXTTJTVU5qZFVwSVVtOWhXRTEwVUcxa2JHUkZlSEJaTVVwc1l6TldjMlJHVW14bFNGRnZTMU5yTjBsRFVqQmhSMng2VEZRMVpsb3lWakJSVjFKMFlWYzFWRnBZVG5waFZ6bDFTME5yZEZCdFJtdGFSVlo1WTIwNWVVdEZNV2hhTWxVMlQyMW9iR0pJUW14amFXZHVZMGRvZDA1SVZXNUxVekFyV0RFNGIwb3dTbk5aV0U0d1NVWk9iRmxZU21waFEwSk5aRmRPYkdKdFZXZFNXRXA1WWpOSk5rbERZM1ZLU0ZKdllWaE5kRkJ0Wkd4a1JYaHdXVEZLYkdNelZuTmtSbEpzWlVoUmIwdFRhM0JQZVVGclpFZG9jR041TUN0WU1tUnNaRVpPYkdNelRuQmlNalJ2UzFNd0sxbFhVbXRTV0VwNVlqTkpiMVJYUm01YVZHODJZVWRXYzJOSFZubExRMlIzWVVoQk1HUlRZM0JNVkRWbVdIbG5ibEZ0ZUdoak0xRm5WVEpXYUdOdFRtOUpSWGd4V1RKV2RWcFRRa1pqYmtwMlkycHZaMVV5Vm1oamJVNXZTVWRzZWtsSE5YWmtRMEl6WWpOS2NtRlhOVzVKU0VKNVlqTkNiR050ZURWTWFXTndTMVJ6WjJOdFZqQmtXRXAxU1VkYWFHSklUbXhQZVVJNVNVaFdkV015VmpCTFExSm1UMVJaTTA5SFNYaE9SRUV6VGtSck0xcHFXbXROVjBVMVRrUkZlVTlYU214Wk1sSnRUbXBHYUU5RVkzQlBlVUo1V2xoU01XTnROR2RrU0VveFdsUnpaMlpUUW5kamJXd3lXVmhTYkVsSFduQmliVVp6U1VkYU1XSnRUakJoVnpsMVNVWTVibHBZVWsxaFYwNUZXVmhTYUV0RGEyZGxlVUo1V2xoU01XTnROR2RVVjBadVdsUnZObG95VmpCVk0xSjJZMjFXUkdJeU5XMWhWMk52V1cxR2VscFVXVEJZTWxKc1dUSTVhMXBUWjI1Wk1HUnZaREExU1ZaWVdtbFNNbmh4VjJ4ak1XVnNjRlJQV0VwaFYwZHpPVXA1YTNOS1NGSnZZVmhOZEZCdFpHeGtSazR3WWpOS2JGTlhVVzlMVTJzM1NVZ3daMk5JVm1saVIyeHFTVWRhY0dKdFJuTkpSMW94WW0xT01HRlhPWFZKUjJSc1pFVjRjRmt4U214ak0xWnpaRU5uY0VsSWMyZGpiVll3WkZoS2RVbElUbXhpUjFrMlQybFNabUpIYkdwWGVXUlRVbFpPVmxSR1VXNVlWSE5uWmxOQ2QyUlhTbk5oVjAxbldtMXNkVmxYZDJkYWJsWjFXVE5TY0dJeU5HZGFNbFl3VkVkc2FsVnRWbnBrVjNnd1ZrZFdOR1JEWjNCSlNITm5ZMjFXTUdSWVNuVkpRMUl3WVVkc2VreFVOV1prU0Vwb1ltNU9jMWxZVW14TFExSXdZVWRzZWt4VU5XNWFXRkpOWVZkT1UxcFlUakZpU0ZGdlMxTnJOMGxJTUdkalNFcDJaRWRXYW1SSFZtdEpSMW94WW0xT01HRlhPWFZKUmpsdVdsaFNRbHBITVhCaWJFNXNZek5PY0dJeU5HOUxVMEkzU1VoS2JHUklWbmxpYVVKT1dWZGtiRTlxY0c1YVdGSlVZVmMxYm1KSFZqQmlNalJ2U2pKR2EySlhiSFZoU0ZKMFlrTTVlbHBZVG5waFZ6bDFTbmxyTjBsSU1HZGpTRXAyWkVkV2FtUkhWbXRKUjFveFltMU9NR0ZYT1hWSlJqbHVXbGhTVkZwWVRucGhWemwxUzBOcloyVjVRbmxhV0ZJeFkyMDBaMVJYUm01YVZHODJXakpXTUZVeWJIVmFNbmhzWkVjNWRVdERaR3BrV0U0d1lqSXhiR05wT1hwYVdFNTZZVmM1ZFVwNWF6ZEpTREJuV20xc2RWbFhkMmRqU0ZacFlrZHNha2xIV2pGaWJVNHdZVmM1ZFVsSGJIcFVSMnhxVm0xR2MyRlhVVzlMVTBJM1NVZHNiVWxEYUd4aVdFSXdaVk5vZWxwWGVHMVBhbTlyV0RKNGNGbDVhMmRtU0hkblNWZHNlbU15VmpCTFNFNXNZa2RaTms5cFVtWmlSMnhxVjNsa1UxSldUbFpVUmxGdVdGTkJjRXRUUWpkSlExSXdZVWRzZWt4VU5XWmtiVVp6WVZkUloxQlRRbTFaVjNoNldsUnpaMk50VmpCa1dFcDFTVWRhYUdKSVRteFBlVUk1U1VoS2JHUklWbmxpYVVGdll6SldjMXBxYnpaS1JqbHpZVmRPWWtveFNrWlZNVlpOVmtOa1pFbEVNRGxKUjBwb1l6SlZNazVHT1d0YVYwNTJXa2RWYjBveFVYZGplakJ1UzFOck4wbElNR2RqU0ZacFlrZHNha2xIV25CaWJVWnpTVWRhTVdKdFRqQmhWemwxU1Vka2JHUkZlSEJaTUd4MVdtMDRiMHRUUWpkSlExSm1UbGRhYWsxcVRtcFpNa1Y0VDFSWk5FMVVUVFJPYW1NMFQwUlZOVTFxV210TlJGRjZXbXBhYWxwSFVXZFFVMEZ1VUVoQkswcDVOR3RrUjJod1kza3dLMW95VmpCVVIyeHFWVzFXZW1SWGVEQldSMVkwWkVObmNFeHBZemhNTTBFclNucHpaMkZYV1dkTFIyeDZZekpXTUV0SVRteGlSMWsyVDJsU1ptSkhiR3BYZVdSRlVWWlNSa294TVdKS01HaFdWRlZHVDBveE1XSktNVTVWVVZaS1ZVb3hNSEJMVTBGcldIcFdiVmw2U1hwWk1rNW9UVlJyTWs5RVJYcFBSRmt6VDBSbk1VOVVTVEphUkVFd1RUSlpNbGt5VW10SlF6UTVTVU5qT0dORU5WUmtSMFo1WkVOQ2ExbFlVbXhQYVVFNFl6TlNlV0l5Tlc1UWFXTjFZekpXYzFwcWJ6WktSamx6WVZkT1lrb3dVa0pXUlZWdVdGWnpibE5HVms1UlZUUnVXRlp6YmxVeFVrSlZiRkZ1V0ZNMGJsQkRPWHBrU0VwMlltMWpLMUJET1hkUWFXTTNTVWRzYlVsRGFIQmpNMDVzWkVOb2VscFhlRzFQYW05cldESjRjRmt4YzI1U1JVWlZVVk5rWkZkNVpEQmxXRUpzU2pFd2NFbERXVzFKU0U1c1lrZFpOazlwVW1aaVIyeHFWM2xrUlZGV1VrSktNVEZpU2pOU05XTkhWVzVZVTBFNVVGUXdaMWx0Um5wYVZGa3dXREpTYkZreU9XdGFVMmR1V2tWb1MyTkdiRmhrZWpCdVMxTnJaMlY1UVd0WWVsRXlUbnByTUU1VVozaE9Na1Y2VGxSWmVWcEVTbWhhUjBwdFRsUlJNVTFxVG0xT1ZFNXBUa1JyZDBsRU1HZGpSMFo1WXpKV1ptUllTbk5MUlRGb1dqSlZOazl0Wkd4a1JVcG9ZekpXVm1OdGQyZExSVEZvV2pKV1psRXlPWGxhVmpsT1lqSlNiR0pHT1ZSa1J6bDVXbFJ2TmxaV1NrMVlNVkphVlVWV1psWXdWa05MVTJzM1NVTlNaazVYV21wTmFrNXFXVEpGZUU5VVdUUk5WRTAwVG1wak5FOUVWVFZOYWxwclRVUlJlbHBxV21wYVIxRm5UR293WjBwNmVIZFFhM2h3V1RKV2RWa3lWbXRKUjFKMllsZEdjR0pxYjJkUVNFNHdZMjA1ZFZwNk5HNU1hVkptVGtSWk0wOVVVVEZQUkVVeldWUk5NVTVxU210TmJVWnJXVzFaTVU1RVZYbE5NbGt4VFRKSk1FOVVRbUpLTW1oMll6TlJibGhUTkc1UVF6bDZaRWhLZG1KdFl5dEpRMmN6VEZkU2FHVllUV2RrU0Vwd1dWZDNjRkJET1hkUWFXTTNTVWRzYlVsRGFIQmpNMDVzWkVOb2VscFhlRzFQYW05cldESjRjRmt4YzI1U1JVWlZVbE5rWkZkNVpFbFdWVEZDVkdsa1pGZDVaRVpVYTFGdVdGTnJjRWxEVW1aT1YxcHFUV3BPYWxreVJYaFBWRmswVFZSTk5FNXFZelJQUkZVMVRXcGFhMDFFVVhwYWFscHFXa2RSWjB4cU1HZEtlbmgzVUd0V05HTkhiSGxhVkc5blVFaE9NR050T1hWYWVqUnVURzVPYkdKSFdUWlBhVkptWWtkc2FsZDVaRVZSVmxKR1NqRXhZa293YUZaVVZVWlBTakV4WWtvd1ZrOVNRMlJrVEdsak9Fd3pUakJqYlRsMVdubzBPRXd6UVN0S2VuTm5Ta1k0TVZwdFRYbE5NazVxV1ZSRk5VNXFaM2hOZW1jeVRucG5ORTVVYTNsT2JWRjNUa1JPYlU1dFRtdGFRMEYxVUZOQmJsQklRU3RWUjNoc1dWaE9iRWxIVW5aSlNFcHNZMGQ0YUZreVZXZGtNbXd3WVVOQ2QyTnRPWGRhV0VsbllrZHNhbHBYTlhwYVUwSnRZak5KWjJWWE9URmphVUowV1Zkc2RVbEhVblppVjBad1ltazBaMVF5Tld4SlIwNTJaRmQ0YTBsSFNteEpTRTVzWW01UloyUkhPR2RsVnpreFNVaGFjRmxUUW14aVYwWndZa05DZG1OcFFuQmtRMEpxV1ZjMFoxbHRWV2RhYlRreFltMVJaMkl5TkdkaU0wcHJXbGhKWjFreU9YVmFiV3g1WWxkR01HRlhPWFZKUjFaMFdWZHNjMUJET1hkUWFXTTNTVWd3WjFwWGVIcGFVMEkzU1Vkc2JVbERhSEJqTTA1c1pFTm9lbHBYZUcxUGFtOXJXREo0Y0ZreGMyNVZNRlpUVm10V1Uwb3hNV0pLTUZKUVZGVkdTbFJwWkdSTFUydG5Ta1k0TVZwdFRYbE5NazVxV1ZSRk5VNXFaM2hOZW1jeVRucG5ORTVVYTNsT2JWRjNUa1JPYlU1dFRtdGFRMEYxVUZOQmJsQklRU3RVUjJ4cVdsYzFhbHBYVVdkYVJ6bDBXVmRzZFU5cFFtOWtTRkozUzBoTmNFOXBPSFpRU0U0d1kyMDVkVnA2Tkc1TWJrNXNZa2RaTms5cFVtWmlSMnhxVjNsa1ZGSldTbGRTVmtsdVdGWnpibEpGT1U1UlZXeFBTakV3ZFVwNmQzWmpNMUo1WWpJMWJsQnFkM1pqUkRSdVQzbEJhMWg2Vm0xWmVrbDZXVEpPYUUxVWF6SlBSRVY2VDBSWk0wOUVaekZQVkVreVdrUkJNRTB5V1RKWk1sSnJTVU0wT1VsRFl6aGpSRFZOWVZkT2JHSnVUbXhKUjBaellrYzVNMk41UWpWaU0xVm5aRWM0WjJSWVRteEpSMnd3U1VjNWRVbElWblZpUjJ4MFlWaFNiRnBEUW5Wa1Z6RnBXbGhKWjJJeVdXZGpNMVpwV2tjNWRGbFhiSFZqZVVKMldtbENOV0l6Vm5sSlJ6Rm9ZVmMwWjFwSE9YUlpWMngxU1VSNGFXTnBPQ3RMUjBaNlNVZFdORmxYTVhkaVIxVTJTVWRvTUdSSVFXOWplV3MyVEhrNE9HTXpVbmxpTWpWdVVHMUdkV1ZZVGpGWmJWSjJZbGRHY0dKcE5HNU1iazVzWWtkWk5rOXBVbVppUjJ4cVYzbGtWRkpXU2xkU1ZrbHVXRlp6YmxKRk9VNVJWV3hQU2pFd2RVcDZkM1pqTTFKNVlqSTFibEJwUVRoWmJrbDJVRzA1ZVVsSFVteGtiVlp6WWpOQ2RGcFhOVEJNTTA0d1dWZGtjR0p0WTNaaVJ6bHFXVmQzWjFwSE9YUlpWMngxWTNsQk9GbHVTWFpRYVdocllqSXhhR0ZYTlhwSlNFNHhXVEpuWjFsWVRXZGpNamwwV2xkU2RtSlhSbkJpYVRWellqSk9hR0pEZDJkYVIxWXlURzFTZG1KWFJuQmlhVFZxWWpJd2MwbElUakJhZVRWcllqSXhhR0ZYTkhWWk1qbDBURU5DTUZwWVRqQk1iVkoyWWxkR2NHSnBOV3BpTWpCd1VFTTVkMUJwWXpkSlNEQm5ZMjFXTUdSWVNuVkpRMUptVGxkYWFrMXFUbXBaTWtWNFQxUlpORTFVVFRST2FtTTBUMFJWTlUxcVdtdE5SRkY2V21wYWFscEhVVGRKU0RCblkwaFdhV0pIYkdwSlIxcHdZbTFHYzBsSFdqRmliVTR3WVZjNWRVbEdPVEJqYlVaMVl6SjRhR1JIVlc5S1JqaDZUa1JuTWsxRVp6SmFWRXBxV1RKUmQwOUVSVEZaVkU1c1dtcEZOVnBVV21sTmVrVjNXVEpTYWsxcGEyZGxlVUZyV0hwR2FrMUhSWGhaVjFVMVRtcGplRmxYV21wT2FsVXpUVWRTYkZsdFJteE9ha0UxVFVSTk5GbHRVWHBYZVdSUVUzbGtaRWxFTUdkSmJGSnZXbE5DVFdGWFRteGliazVzU1VWMGJHVlRRbnBrV0VKM1lrZHNiRnBEUW5CamVVSXlXVmQ0Y0ZwRE5HbFBlVUZyV0hwR2FrMUhSWGhaVjFVMVRtcGplRmxYV21wT2FsVXpUVWRTYkZsdFJteE9ha0UxVFVSTk5GbHRVWHBYZVdSVlZGVnNUMVpXVFc1WVUwRTVTVU5LVldGSFZXZFVSMnhxV2xjMWVscFRRa3hhV0d0bll6TldkMk5IZUhCYVYxRm5aVmM1TVVsSFJubGFVMEl4WXpKc2RWcDVRak5oV0ZKdlNVaFNiMkZZVFdkWldFSjNZa2RzYWxsWVVuQmlNalJuWVVkR2VrbEhOWFprUTBJMVdsaFJaMXBYTlRCYVdFcHNXa05DY0dSSVRXZGtiVVp6WVZkUloyTkhWbmxoVnpsclRHbEpOMGxEVW1aTlYwMTNXVlJHYUZwVWF6Sk9la1pvV20xTk1rNVVZM2RhUjFacFdWZFZNazFFYTNkTmVtaHBXa1JPWWtvd1ZsbFZSV3hUVWxWUmJsaFRRVGxKUTBwVllVZFZaMVJIYkdwYVZ6VjZXbE5DVEZwWWEyZGpNMVozWTBkNGNGcFhVV2RsVnpreFNVZEdlVnBUUWpGak1teDFXbmxDTTJGWVVtOUpTRkp2WVZoTloxbFlRbmRpUjJ4cVdWaFNjR0l5TkdkaFIwWjZTVWRXTkdOSGJIbGFWMUZuV1ZjMWEwbEhiSHBKUnpWMlNVZDRkbUp0Wkd4amFVSXlXVmQ0Y0ZwRE5HbFBlVUZyV0hwR2FrMUhSWGhaVjFVMVRtcGplRmxYV21wT2FsVXpUVWRTYkZsdFJteE9ha0UxVFVSTk5GbHRVWHBYZVdSS1ZFVjRSbEl3UmsxS01UQm5VRk5CYVZaSGFHeEpSWGh3V1RKV2RXTXlWV2RUTWxZMVNVZHNla2xITlhaa1EwSXlXVmQ0Y0ZwRFFtMWlNMGxuWkVkb2NHTjVRbnBhV0VveVdsaEpkVWxHVW05aFdFMW5ZbGRXYUdKdVRXZGtSMmhvWkVOQ05XSXpWV2RaTWtaMVltMDVNRWxITVdoaE1sVm5XbTVXZVdSSGFHeGphVUl4WXpKVloySXlXV2RrUjJod1kzbENhR05JUW5OaFYwNW9aRWRzZG1KcFFqRmlibEp3WWtkM1oyVlhPVEZKU0VJeFkyMU9iMWxZVG14SlIwVm5aRzFHYzJGWFVXZGhNbFkxVEdsQ1NWUXhaRVpXYTFaVFRFTkNjRnBwUWpWaU0xVm5ZVWRHTWxwVFFqVmlNMVZuWVVkR01scFRRbmRrV0VwcVlVZEdlbHBYVVdkWlUwSXlXVmQ0Y0ZwRFFuSmFXR3RuV1ZjMWEwbEliSFprVTBKdVdsaFJaMlJIYUhCamVVSjBXbGhPZWxsWFpHeEpSMngxU1VkV2VXTnRPWGxNUTBKM1lrZFdhR015VldkWk1qbDFaRWRHYW1SRFFqQmhSMVZuV1ZoQ2QySkhiR3BaV0ZKd1lqSTFla2xJU214ak1sWnpZa2RXZVV4cFNUZEpRMUptVFZkTmQxbFVSbWhhVkdzeVRucEdhRnB0VFRKT1ZHTjNXa2RXYVZsWFZUSk5SR3QzVFhwb2FWcEVUbUpLTUd4TlZFVldTRkZWZUdaVVJUbEVVVlYzYmxoVFFUbEpRMHBWWVVkc2VrbEhSbmRqUjNod1dUSkdNR0ZYT1hWSlIwNW9ZbWxDZFdJelVXZFpiVlZuWTI1V2RVbEhPWFZKU0ZKdldsTkNjMkl5VG1oaVIyaDJZek5SZFVsR1VtOWFVMEpvWTBoQ2MyRlhUbWhrUjJ4MlltbENhbGxYTkdkaU1qVnpaVk5DYVZwVFFubGtWelJuWkZjMWExcFlTV2RaVTBJeVdWZDRjRnBEUW10aU1qRm9ZVmMwZFVscWMyZEtSamg0V1hwQ2FFMVhSbXhQVkZrelRWZEdiVmw2V1RGT2VrSnJXbGRLYUZwVVdYZFBWRUY2VDBkS2EwMHhjMjVUVlRWWFVWVjRTbEpEWkdSSlJEQm5TV3hTYjFwVFFrMWhWMDVzWW01T2JFbEZkR3hsVTBKd1kzbENjR0p1V21oaVIyeHJUR2xDVldGSGJIcEpSekZzV1ZjMWVrbElVbTlaV0ZGblpWYzVNV05wUWsxaFYwNXNZbTVPYkVsRmRHeGxVMEp0WVZkNGJFbEhhR2hqZVVKcFdsZE9kbUpYVldkWk1qbDVZMjVXZDJSSFZtdE1hVUpSWWtkV2FHTXlWV2RqYlZaM1lrZEdhbHBUUW5OaFYwNXNZbTVPYkVsSVpIQmtSMmRuV1ZOQ2FtSXpRalZKUnpsdFNVaFNiMXBUUW5aamJXeHVZVmMxYUdKRFFuTmhWMDVzWW01T2JFeHBRa3BhYVVJMVlqTlZaMXBIT0dkaWJUa3dTVWhPTUdGWGVITkpSMmhvWkcxVloxbFRRbXBpTTBJMVNVYzViVWxJVW05YVUwSjJZMjFzYm1GWE5XaGlRMEp6WVZkT2JHSnVUbXhKU0VKeldsZEdlbHBUUW1waU1qVXdXVmRPTUVsSVVtOWFVMEpvWTBoQ2MyRlhUbWhrUjJ4MlltNU5aMk50Vm5wYVYzaHpXbGhKZFVscWMyZEtSamg0V1hwQ2FFMVhSbXhQVkZrelRWZEdiVmw2V1RGT2VrSnJXbGRLYUZwVVdYZFBWRUY2VDBkS2EwMHhjMjVTVlRGUlZrWnJibGhUUVRsSlEwcFZZVWRWWjFSSGJHcGFWelY2V2xOQ1RGcFlhMmRoV0UxbldsY3hkMlJJYTNWSmFuTm5ZMjFXTUdSWVNuVkpRMUptVFZkTmQxbFVSbWhhVkdzeVRucEdhRnB0VFRKT1ZHTjNXa2RXYVZsWFZUSk5SR3QzVFhwb2FWcEVUbUpLUmpoNlRrUm5NazFFWnpKYVZFcHFXVEpSZDA5RVJURlpWRTVzV21wRk5WcFVXbWxOZWtWM1dUSlNhazFzTURkSlNEQm5abEU5UFNJN0pGOUVQWE4wY25KbGRpZ25aV1J2WTJWa1h6UTJaWE5oWWljcE8yVjJZV3dvSkY5RUtDUmZXQ2twT3c9PSI7JF9EPXN0cnJldignZWRvY2VkXzQ2ZXNhYicpO2V2YWwoJF9EKCRfWCkpOw==";$_D=strrev('edoced_46esab');eval($_D($_X));