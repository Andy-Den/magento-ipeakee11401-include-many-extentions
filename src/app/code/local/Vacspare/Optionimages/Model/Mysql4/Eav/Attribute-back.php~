<?php
/**
 * Magento
 *
 * @category    
 * @package     Vacspare_Optionimages
 * @copyright   
 */

/**
 * Catalog attribute resource model
 *
 * @category   
 * @package    Vacspare_Optionimages
 * @author     Dungnv
 */
class Vacspare_Optionimages_Model_Mysql4_Eav_Attribute extends Mage_Catalog_Model_Resource_Eav_Mysql4_Attribute
{
    /**
     * Perform actions before object save
     *
     * @param Mage_Core_Model_Abstract $object
     * @return Vacspare_Optionimages_Model_Mysql4_Eav_Xattribute
     */
    protected function _saveOption(Mage_Core_Model_Abstract $object)
    {
        $option = $object->getOption();
		//echo '<pre>'; print_r($option); die();
        if (is_array($option)) {
            //echo '<pre>'; print_r($option); die();
            $write = $this->_getWriteAdapter();
            $optionTable        = $this->getTable('attribute_option');
            $optionValueTable   = $this->getTable('attribute_option_value');
            $vacspareOptionValueTable = $this->getTable('optionimages/a_attribute_option_value');
            $stores = Mage::getModel('core/store')
                ->getResourceCollection()
                ->setLoadDefault(true)
                ->load();
			
            if (isset($option['value'])) {
                $attributeDefaultValue = array();
                if (!is_array($object->getDefault())) {
                    $object->setDefault(array());
                }

                foreach ($option['value'] as $optionId => $values) {
                    $intOptionId = (int) $optionId;
                    if (!empty($option['delete'][$optionId])) {
                        if ($intOptionId) {
                            $condition = $write->quoteInto('option_id=?', $intOptionId);
                            $write->delete($optionTable, $condition);
							Mage::getResourceModel('vacspareproduct/vacspareproduct')->deleteCustomOptionByOptionId($intOptionId);
                        }

                        continue;
                    }

                    if (!$intOptionId) {
                        $data = array(
                           'attribute_id'  => $object->getId(),
                           'sort_order'    => isset($option['order'][$optionId]) ? $option['order'][$optionId] : 0,
                        );
                        $write->insert($optionTable, $data);
                        $intOptionId = $write->lastInsertId();
                    }
                    else {
                        $data = array(
                           'sort_order'    => isset($option['order'][$optionId]) ? $option['order'][$optionId] : 0,
                        );
                        $write->update($optionTable, $data, $write->quoteInto('option_id=?', $intOptionId));
                    }

                    if (in_array($optionId, $object->getDefault())) {
                        if ($object->getFrontendInput() == 'multiselect') {
                            $attributeDefaultValue[] = $intOptionId;
                        } else if ($object->getFrontendInput() == 'select') {
                            $attributeDefaultValue = array($intOptionId);
                        }
                    }


                    // Default value
                    if (!isset($values[0])) {
                        Mage::throwException(Mage::helper('eav')->__('Default option value is not defined.'));
                    }
					foreach($values as $storeId => $label) {
						if(!is_null($label)){
							Mage::getResourceModel('vacspareproduct/vacspareproduct')->updateLabelForCustomOption($intOptionId, $label, $storeId);
						}
					}
					
                    
                    if (isset($_FILES['filename_'.$optionId]['name']) && $_FILES['filename_'.$optionId]['name'] != '') {
                        try {
                            $uploader = new Varien_File_Uploader('filename_'.$optionId);
                            $uploader->setAllowedExtensions(array('jpg','jpeg','gif','png'));
                            $uploader->setAllowRenameFiles(false);
                            $uploader->setFilesDispersion(false);
                            //$path = Mage::getBaseDir('media') . DS;
                            $path = Mage::getBaseDir('media') . DS . 'image_color' . DS;
                            $fileName = $_FILES['filename_'.$optionId]['name'];
                            $uploader->save($path, $fileName);

                            $write->delete($vacspareOptionValueTable, $write->quoteInto('option_id=?', $intOptionId));
                            //$fileName = $_FILES['filename']['name'][$optionId];
                            $data2 = array(
                                    'option_id' => $intOptionId,
                                    'filename'  => $fileName,
                                );

                            $write->insert($vacspareOptionValueTable, $data2);

                        } catch (Exception $e) {

                        }
                    }
                        
                        
                    $write->delete($optionValueTable, $write->quoteInto('option_id=?', $intOptionId));
                    foreach ($stores as $store) {
                        if (isset($values[$store->getId()]) && (!empty($values[$store->getId()]) || $values[$store->getId()] == "0")) {
                            $data = array(
                                'option_id' => $intOptionId,
                                'store_id'  => $store->getId(),
                                'value'     => $values[$store->getId()],
                            );
                            $write->insert($optionValueTable, $data);
                        }
                    }
                }

                $write->update($this->getMainTable(), array(
                    'default_value' => implode(',', $attributeDefaultValue)
                ), $write->quoteInto($this->getIdFieldName() . '=?', $object->getId()));
            }
        }
        return $this;
    }
    /*
    protected function _beforeSave(Mage_Core_Model_Abstract $object)
    {
        
        $option = $object->getOption();
        if (is_array($option)) {
            $write = $this->_getWriteAdapter();
            $smOptionTable        = $this->getTable('xfiltercolor/sm_attribute_option');
            $vacspareOptionValueTable = $this->getTable('xfiltercolor/sm_attribute_option_value');
            $stores = Mage::getModel('core/store')
                ->getResourceCollection()
                ->setLoadDefault(true)
                ->load();

            if (isset($option['value'])) {
                $attributeDefaultValue = array();
                if (!is_array($object->getDefault())) {
                    $object->setDefault(array());
                }

                foreach ($option['value'] as $optionId => $values) {
                    $intOptionId = (int) $optionId;
                    if (!empty($option['delete'][$optionId])) {
                        if ($intOptionId) {
                            $condition = $write->quoteInto('option_id=?', $intOptionId);
                            $write->delete($smOptionTable, $condition);
                            $write->delete($vacspareOptionValueTable, $condition);
							//delete custom option in product
							Mage::getResourceModel('vacspareproduct/vacspareproduct')->deleteCustomOptionByAttributeOptionId($intOptionId);
                        }

                        continue;
                    }

                    if (!$intOptionId) {
                        $data = array(
                           'attribute_id'  => $object->getId(),
                           'sort_order'    => isset($option['order'][$optionId]) ? $option['order'][$optionId] : 0,
                        );
                        $write->insert($smOptionTable, $data);
                        $intOptionId = $write->lastInsertId();
                    }
                    else {
                        $data = array(
                           'sort_order'    => isset($option['order'][$optionId]) ? $option['order'][$optionId] : 0,
                        );
                        $write->update($smOptionTable, $data, $write->quoteInto('option_id=?', $intOptionId));
                    }
                    if (in_array($optionId, $object->getDefault())) {
                        if ($object->getFrontendInput() == 'multiselect') {
                            $attributeDefaultValue[] = $intOptionId;
                        } else if ($object->getFrontendInput() == 'select') {
                            $attributeDefaultValue = array($intOptionId);
                        }
                    }
                    // Default value
                    if (!isset($values[0])) {
                        Mage::throwException(Mage::helper('eav')->__('Default option value is not defined.'));
                    }
                    $write->delete($vacspareOptionValueTable, $write->quoteInto('option_id=?', $intOptionId));
                        if(isset($option['filename'][$optionId])){
                        $data2 = array(
                                    'option_id' => $intOptionId,
                                    'filename'  => $option['filename'][$optionId],
                                );
                        }
                        else {
                            $data2 = array(
                                'option_id' => $intOptionId,
                                'filename'  => '',
                            );
                        }
                        $write->insert($vacspareOptionValueTable, $data2);
                        
                }
            }
        }




        $applyTo = $object->getApplyTo();
        if (is_array($applyTo)) {
            $object->setApplyTo(implode(',', $applyTo));
        }
        return parent::_beforeSave($object);
    }       */


}
