<?php $_product = Mage::registry('current_product'); ?>

<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<form action="<?php echo Mage::helper('allajax')->getSubmitUrl($this,$_product) ?>" method="post" 
      id="product_addtocart_form" class="bundle-product-ajax-all-form downloadable-product-ajax-all-form">
    <div id="messages_product_view"></div>
<div id="bundle-product-wrapper">
    <div class="no-display">
        <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
        <input type="hidden" name="related_product" id="related-products-field" value="" />
    </div>
    
  
    <?php if ($_product->isSaleable()): ?>
        <?php echo $this->getChildChildHtml('container3', '', true, true) ?>
    <?php endif; ?>
     <?php //if ($_product->isSaleable()): ?>
        <?php echo $this->getChildHtml('addtocart') ?>
    <?php //endif; ?>
</div>
</form>
<script type="text/javascript">
    //<![CDATA[
    var productAddToCartForm = new VarienForm('product_addtocart_form');
    productAddToCartForm.submit = function(button, url) {
        if (this.validator.validate()) {
            var form = this.form;
            var oldUrl = form.action;

            if (url) {
                form.action = url;
            }
            var e = null;
            try {
                this.form.submit();
            } catch (e) {
            }
            this.form.action = oldUrl;
            if (e) {
                throw e;
            }

            if (button && button != 'undefined') {
                button.disabled = true;
            }
        }
    }.bind(productAddToCartForm);

    productAddToCartForm.submitLight = function(button, url){
        if(this.validator) {
            var nv = Validation.methods;
            delete Validation.methods['required-entry'];
            delete Validation.methods['validate-one-required'];
            delete Validation.methods['validate-one-required-by-name'];
            // Remove custom datetime validators
            for (var methodName in Validation.methods) {
                if (methodName.match(/^validate-datetime-.*/i)) {
                    delete Validation.methods[methodName];
                }
            }

            if (this.validator.validate()) {
                if (url) {
                    this.form.action = url;
                }
                this.form.submit();
            }
            Object.extend(Validation.methods, nv);
        }
    }.bind(productAddToCartForm);
    //Enterprise.Bundle.initialize();
    //]]>
</script>