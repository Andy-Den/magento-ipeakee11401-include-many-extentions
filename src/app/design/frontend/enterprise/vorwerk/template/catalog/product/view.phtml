<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     enterprise_default
 * @copyright   Copyright (c) 2014 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->setEscapeMessageFlag(true)->toHtml() ?></div>
<div class="product-view">
    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <?php echo $this->getBlockHtml('formkey') ?>
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
        <div class="product-essential">

            <div class="product-img-box">
                <?php echo $this->getChildHtml('media') ?>
            </div>

            <div class="product-shop">

                <?php if (!$this->hasOptions()):?>
                    <div class="add-to-box">
                        <?php /*if($_product->isSaleable()): ?>
                            <?php echo $this->getChildHtml('addtocart') ?>
                        <?php endif;*/ ?>
                    </div>
                <?php else:?>
                    <?php if ($_product->isSaleable() && $this->hasOptions() && $this->getChildChildHtml('container1') ):?>
                        <div class="options-container-small">
                            <?php // echo $this->getChildChildHtml('container1', '', true, true) ?>
                        </div>
                    <?php endif;?>
                <?php endif; ?>
                <?php
                    $arrSubDescription = array(
                        'sub_description1' => 'sub_description_image1',
                        'sub_description2' => 'sub_description_image2',
                        'sub_description3' => 'sub_description_image3',
                        'sub_description4' => 'sub_description_image4',
                        'sub_description5' => 'sub_description_image5',
                        'sub_description6' => 'sub_description_image6',
                        'sub_description7' => 'sub_description_image7',
                        'sub_description8' => 'sub_description_image8',
                        'sub_description9' => 'sub_description_image9',
                        'sub_description10' => 'sub_description_image10',
                    );
                    $displaySubDescription = 0;
                ?>

                    <div class="description std">
                        <?php //echo $_helper->productAttribute($_product, $_product->getDescription(), 'description') ?>
                        <?php foreach ($arrSubDescription as $key => $value): ?>
                            <?php if ($_product->getData($key)!=''):  $displaySubDescription = 1; ?>
                                <div class="sub-description">
                                    <div class="image-description">
                                        <?php echo $_helper->productAttribute($_product, $_product->getData($value), $value) ?>
                                    </div>
                                    <div class="content-description">
                                        <?php echo $_helper->productAttribute($_product, $_product->getData($key), $key) ?>
                                    </div>
                                </div>
                            <?php endif; ?>
                        <?php endforeach; ?>
                        <?php if ($_product->getDescription() && $displaySubDescription == 0):?>
                            <?php echo $_helper->productAttribute($_product, $_product->getDescription(), 'description') ?>
                        <?php endif;?>
                    </div>


                <?php echo $this->getChildHtml('other');?>
            </div>

        </div>

        <div class="product-collateral">
            <h2><?php echo $this->__('Technical Data'); ?></h2>
            <?php echo $this->getChildHtml('additional'); ?>
        </div>

        <?php if ($_product->isSaleable() && $this->hasOptions() && $this->getChildChildHtml('container2') ):?>
            <div class="options-container-big">
                <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
            </div>
        <?php endif;?>
    </form>

</div>

<script type="text/javascript">
//<![CDATA[
    var productAddToCartForm = new VarienForm('product_addtocart_form');
    productAddToCartForm.submit = function(button, url) {
        if (this.validator.validate()) {
            var form = this.form;
            var oldUrl = form.action;

            if (url) {
               form.action = url;
            }
            var e = null;
            try {
                this.form.submit();
            } catch (e) {
            }
            this.form.action = oldUrl;
            if (e) {
                throw e;
            }

            if (button && button != 'undefined') {
                button.disabled = true;
            }
        }
    }.bind(productAddToCartForm);

    productAddToCartForm.submitLight = function(button, url){
        if(this.validator) {
            var nv = Validation.methods;
            delete Validation.methods['required-entry'];
            delete Validation.methods['validate-one-required'];
            delete Validation.methods['validate-one-required-by-name'];
            // Remove custom datetime validators
            for (var methodName in Validation.methods) {
                if (methodName.match(/^validate-datetime-.*/i)) {
                    delete Validation.methods[methodName];
                }
            }

            if (this.validator.validate()) {
                if (url) {
                    this.form.action = url;
                }
                this.form.submit();
            }
            Object.extend(Validation.methods, nv);
        }
    }.bind(productAddToCartForm);
//]]>
</script>
